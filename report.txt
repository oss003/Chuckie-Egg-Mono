
                   6502 Macro Assembler   -   Version 4.00f 
                Copyright (C) 1985 by 2500 A.D. Software, Inc.


                         ***** Active Commands *****

                           Ctrl S = Stop Output
                           Ctrl Q = Start Output
                           Esc  C = Stop Assembly
                           Esc  T = Terminal Output
                           Esc  P = Printer Output
                           Esc  D = Disk Output
                           Esc  M = Multiple Output
                           Esc  N = No Output


  Sun Oct 28 2012 18:46                                                                                                  Page    1







               2500 A.D. 6502 Macro Assembler  -  Version 4.00f
               ------------------------------------------------

                       Input  Filename : chuckie.asm
                       Output Filename : chuckie.obj


    1          2B00             asm_code         equ $2b00
    2                           
    3                           ;********************************************************************
    4                           ; Header for Atom emulator Wouter Ras
    5                           
    6   2AEA                                 org asm_code-22
    7   2AEA                    name_start
    8   2AEA   43 48 2D 45 47                    .db "CH-EGG"                    ; 16 bytes filename
        2AEF   47 
    9   2AF0                    name_end
   10   2AF0                                 .blkb (16-name_end+name_start),0
   11   2AFA   002B                              .dw asm_code                     ; 2 bytes startaddress
   12   2AFC   002B                              .dw asm_code                     ; 2 bytes linkaddress
   13   2AFE   972C                              .dw eind_asm-start_asm           ; 2 bytes filelength
   14                           
   15                           ;********************************************************************
   16                           
   17   2B00                    start_asm          
   18   2B00                                    include chuckie.inc
   19                           ;==========================================================
   20                           ; Version 1
   21                           ;
   22                           ; - Joystick routine changed for AtoMMC v2.9
   23                           ;==========================================================
   24                           
   25                           ;
   26                           ; Code equates
   27                           ;
   28                           
   29          00F0             clearmode     equ $f0
   30          00C0             green         equ $c0
   31          00C0             yellow        equ $c0
   32          00C0             blue          equ $c0
   33          00C0             red           equ $c0
   34                           
   35          FE71             waitkey       equ $fe71
   36                           
   37                           ;------------------------------------------------
   38                           ; Used variables $00-$8F
   39                           ;------------------------------------------------
   40                           
   41          001B             L001B       equ $001B    ; Joystick flag
   42          001C             L001C       equ $001C    ; Timer
   43                           
   44          001D             L001D       equ $001D    ; Time digit 3
   45          001E             L001E       equ $001E    ; Time digit 2
   46          001F             L001F       equ $001F    ; Time digit 1
   47                           
   48          0020             L0020       equ $0020    ; Saved lives player 1
   49          0021             L0021       equ $0021    ; Saved lives player 2
   50          0022             L0022       equ $0022    ; Saved lives player 3
   51          0023             L0023       equ $0023    ; Saved lives player 4
   52          0024             L0024       equ $0024    ; Saved level player 1
   53          0025             L0025       equ $0025    ; Saved level player 2
   54          0026             L0026       equ $0026    ; Saved level player 3
   55          0027             L0027       equ $0027    ; Saved level player 4
   56                           
   57          0028             L0028       equ $0028    ; Score 8 bytes
   58                           
   59          0030             L0030       equ $0030    ; X-pos duck
   60          0031             L0031       equ $0031    ; Y-pos duck
   61          0032             L0032       equ $0032    ; X-dir duck
   62          0033             L0033       equ $0033    ; Y-dir duck
   63          0034             L0034       equ $0034    ; Duck spritenr
   64          0035             L0035       equ $0035    ; Duck flag
   65                                                    ;  Level 0-7 Duck in cage
   66                                                    ;  Level 8-.. Duck outside cage
   67          0036             L0036       equ $0036    ; Temp bird delay ticker 
   68                           
   69          0037             L0037       equ $0037    ; Initial bird delay ticker
   70          0038             L0038       equ $0038    ; Temp duck deley ticker
   71          0039             L0039       equ $0039    ; Egg on screen counter
   72                           
   73          003A             L003A       equ $003A    ; Bonus digit 4
   74          003B             L003B       equ $003B    ; Bonus digit 3
   75          003C             L003C       equ $003C    ; Bonus digit 2
   76          003D             L003D       equ $003D    ; Bonus digit 1, digit 0 always 0
   77                           
   78          003E             L003E       equ $003E
   79                           
   80          003F             L003F       equ $003F    ; Position lives left player
   81                           
   82          0040             L0040       equ $0040    ; X-pos man
   83          0041             L0041       equ $0041    ; Y-pos man
   84          0042             L0042       equ $0042    ; X-pos man in bytes
   85          0043             L0043       equ $0043    ; Y-pos man in bytes
   86          0044             L0044       equ $0044    ; X-pos man mod 8 (0-7)
   87          0045             L0045       equ $0045    ; Y-pos man mod 8 (0-7)
   88          0046             L0046       equ $0046    ; Man x-dir
   89          0047             L0047       equ $0047    ; Man y-dir
   90          0048             L0048       equ $0048    ; Current man sprite nr
   91          0049             L0049       equ $0049    ; Movement man
   92                                                    ;  0 = Horizontal
   93                                                    ;  1 = Climbing ladder
   94                                                    ;  2 = Jump
   95                                                    ;  3 = Fall
   96                                                    ;  4 = Elevator
   97          004A             L004A       equ $004A    ; Tone jump man
   98          004B             L004B       equ $004B    ; Current y-dir man
   99          004C             L004C       equ $004C    ; Current x-dir man
  100                           
  101                           ;------------------------------------------------
  102                           ;              Hens  Duck  Skip Levelnibble high  
  103                           ;------------------------------------------------
  104                           ; Levels  1- 8: 2-4   no    7      0
  105                           ; Levels  9-16:  0   yes    7      1
  106                           ; Levels 17-24: 2-4  yes    7      2
  107                           ; Levels 25-32: 2-5  yes    7      3
  108                           ; Levels 33   : 2-5  yes    5      4
  109                           ;------------------------------------------------
  110                           
  111          004D             L004D       equ $004D    ; Levelnibble high
  112                           
  113          004E             L004E       equ $004E    ; Pointer to savedata at $5xx player
  114                           
  115          004F             L004F       equ $004F
  116                           
  117          0050             L0050       equ $0050    ; Levelnr??
  118                           
  119          0051             L0051       equ $0051    ; Leveldata pointer
  120          0052             L0052       equ $0052
  121                           
  122          0053             L0053       equ $0053    ; Nr of walls
  123          0054             L0054       equ $0054    ; Nr of ladders
  124          0055             L0055       equ $0055    ; Elevator flag
  125          0056             L0056       equ $0056    ; Nr of seed
  126          0057             L0057       equ $0057    ; Nr of birds
  127          0058             L0058       equ $0058    ; x-pos elevator 
  128          0059             L0059       equ $0059    ; y-pos elevator low 
  129          005A             L005A       equ $005A    ; y-pos elevator high
  130          005B             L005B       equ $005B    ; Elevator flag 0=$59, $FF=$5A
  131                           
  132          005C             L005C       equ $005C    ; Levelnibble low
  133          005D             L005D       equ $005D    ; Current player nr
  134          005E             L005E       equ $005E    ; Max nr players (4)
  135                           
  136          005F             L005F       equ $005F    ; Max nr players (4)
  137          0060             L0060       equ $0060
  138                           
  139          0061             L0061       equ $0061    ; Right key
  140          0062             L0062       equ $0062    ; Left key
  141          0063             L0063       equ $0063    ; Down key
  142          0064             L0064       equ $0064    ; Up key
  143          0065             L0065       equ $0065    ; Jump key
  144                           
  145          0066             L0066       equ $0066    ; Calc number
  146          0067             L0067       equ $0067    ; Calc number
  147          0068             L0068       equ $0068    ; Calc number
  148          0069             L0069       equ $0069    ; Calc number
  149                           
  150          0070             L0070       equ $0070    ; Screen pointer
  151          0071             L0071       equ $0071
  152                           
  153          0072             L0072       equ $0072
  154          0073             L0073       equ $0073
  155          0074             L0074       equ $0074
  156          0075             L0075       equ $0075
  157                           
  158          0076             L0076       equ $0076    ; Sprite pointer
  159          0077             L0077       equ $0077
  160                           
  161          0078             L0078       equ $0078    ; Sprite height counter
  162          0079             L0079       equ $0079
  163          007A             L007A       equ $007A
  164                           
  165          007B             L007B       equ $007B   ; Background buffer pointer
  166          007C             L007C       equ $007C
  167                           
  168          007F             L007F       equ $007F   ; Color byte
  169                           
  170          0080             L0080       equ $0080   ; Key pressed flag 1,2,4,8,16
  171          0081             L0081       equ $0081   ; Pixel shift backup register
  172          0082             L0082       equ $0082   ; Screen databyte
  173          0083             L0083       equ $0083   ; Sprite databyte pixel shift counter
  174          0084             L0084       equ $0084   ; Sprite databyte
  175          0087             L0087       equ $0087   ; Sprite width in bytes
  176                           
  177          0088             L0088       equ $0088   ; Bird pointer
  178          0089             L0089       equ $0089   ; Level datapointer
  179          008A             L008A       equ $008A   ; Different counters
  180          008B             L008B       equ $008B
  181          008C             L008C       equ $008C
  182          008D             L008D       equ $008D
  183          008E             L008E       equ $008E
  184          008F             L008F       equ $008F
  185                           
  186                           ;------------------------------------------------
  187                           ; Bird data (5x)
  188                           ;
  189                           ; $400,$401,$402,$403,$404 X-pos pixels
  190                           ; $405,$406,$407,$408,$409 Y-pos pixels
  191                           ; $40a,$40b,$40c,$40d,$40e X-pos bytes
  192                           ; $40f,$410,$411,$412,$413 Y-pos bytes
  193                           ; $414,$415,$416,$417,$418 Sprite nr
  194                           ; $419,$41a,$41b,$41c,$41d Sprite nr 
  195                           ; $41e,$41f,$420,$421,$422 Sprite nr 
  196                           
  197                           ;------------------------------------------------
  198                           
  199          0400             L0400       equ $0400
  200          0405             L0405       equ $0405
  201          040A             L040A       equ $040A
  202          040F             L040F       equ $040F
  203          0414             L0414       equ $0414
  204          0419             L0419       equ $0419
  205          041E             L041E       equ $041E
  206                           
  207                           ;------------------------------------------------
  208                           ; Save player data
  209                           ;
  210                           ; $500,$540,$580,$5C0 (8) Saved player score
  211                           ; $508,$548,$588,$5C8 (4) Saved player bonus
  212                           ; $50C,$54C,$58C,$5CC (4) Free
  213                           ; $510,$550,$590,$5D0 (16) Eggs flag $ff=gone
  214                           ; $520,$560,$5A0,$5E0 (16) Seed flag $ff=gone
  215                           ;------------------------------------------------
  216                           
  217          0500             L0500       equ $0500
  218          0508             L0508       equ L0500+8
  219          0509             L0509       equ L0500+9
  220          050A             L050A       equ L0500+$A
  221          050B             L050B       equ L0500+$B
  222          0510             L0510       equ L0500+$10
  223          0520             L0520       equ L0500+$20
  224                           
  225          0600             L0600       equ $0600  ; Screencopy upper half
  226          0700             L0700       equ $0700  ; Screencopy lower half
  227                           
  228          0900             L0900       equ $0900  ; Relocation address code
  229          0903             L0903       equ $0903
  230          094F             L094F       equ $094F
  231          0976             L0976       equ $0976
  232          09CF             L09CF       equ $09CF
  233          0A00             L0A00       equ $0A00
  234          0A10             L0A10       equ $0A10
  235          0A16             L0A16       equ $0A16
  236          0A6C             L0A6C       equ $0A6C
  237          0A6F             L0A6F       equ $0A6F
  238          0A72             L0A72       equ $0A72
  239          0A9C             L0A9C       equ $0A9C
  240          0AA9             L0AA9       equ $0AA9
  241          0AB8             L0AB8       equ $0AB8
  242          0AC7             L0AC7       equ $0AC7
  243          0B00             L0B00       equ $0B00
  244          0B06             L0B06       equ $0B06
  245          0B44             L0B44       equ $0B44
  246          0B9C             L0B9C       equ $0B9C
  247          0BE4             L0BE4       equ $0BE4
  248          0C00             L0C00       equ $0C00
  249          0C04             L0C04       equ $0C04
  250          0C0B             L0C0B       equ $0C0B
  251          0C11             L0C11       equ $0C11
  252          0C12             L0C12       equ $0C12
  253          0C16             L0C16       equ $0C16
  254          0C3E             L0C3E       equ $0C3E
  255          0C80             L0C80       equ $0C80
  256          0C9C             L0C9C       equ $0C9C
  257          0CA4             L0CA4       equ $0CA4
  258          0CA6             L0CA6       equ $0CA6
  259          0CAC             L0CAC       equ $0CAC
  260          0CC0             L0CC0       equ $0CC0
  261          0CD0             L0CD0       equ $0CD0
  262          0D00             L0D00       equ $0D00
  263          0D07             L0D07       equ $0D07
  264          0D3E             L0D3E       equ $0D3E
  265          0DB2             L0DB2       equ $0DB2
  266          0E00             L0E00       equ $0E00
  267          0E02             L0E02       equ $0E02
  268          0E0D             L0E0D       equ $0E0D
  269          0E12             L0E12       equ $0E12
  270          0E20             L0E20       equ $0E20
  271          0E4B             L0E4B       equ $0E4B
  272          0EDC             L0EDC       equ $0EDC
  273          0E70             L0E70       equ $0E70
  274          0F00             L0F00       equ $0F00
  275          0F02             L0F02       equ $0F02
  276          0F0C             L0F0C       equ $0F0C
  277          0F6C             L0F6C       equ $0F6C
  278          0FE8             L0FE8       equ $0FE8
  279          1000             L1000       equ $1000
  280          1001             L1001       equ $1001
  281          1002             L1002       equ $1002
  282          1006             L1006       equ $1006
  283          1010             L1010       equ $1010
  284          1011             L1011       equ $1011
  285          1012             L1012       equ $1012
  286          1015             L1015       equ $1015
  287          1017             L1017       equ $1017
  288          1018             L1018       equ $1018
  289          10BB             L10BB       equ $10BB
  290          1072             L1072       equ $1072
  291                           
  292          3200             L3200       equ $3200
  293          3300             L3300       equ $3300
  294          3400             L3400       equ $3400
  295          3500             L3500       equ $3500
  296          3600             L3600       equ $3600
  297          3700             L3700       equ $3700
  298          3800             L3800       equ $3800
  299          FFEE             OSWRCH      equ $FFEE
  300          FFF1             OSWORD      equ $FFF1
  301          FFF4             OSBYTE      equ $FFF4
  302                           
  303                           ;
  304                           ; Start of code
  305                           ;
  306                           ;            *equ $1100
  307                           ;
  308                           
  309   2B00   4C 9C 43                 jmp program_entry
  310                           
  311                           ;------------------------------------------------
  312                           ; Sprite lookup table
  313                           ;------------------------------------------------
  314   2B03                    sprites:
  315   2B03   96 18 00 36               .byte $96,$18,$00,$36       ; Sprite 0   - Not used
  316   2B07   08 08 03 2C               .byte $08,$08,<L1200,>L1200 ; Sprite 1   - Wall
  317   2B0B   08 08 0B 2C               .byte $08,$08,<L1208,>L1208 ; Sprite 2   - Ladder
  318   2B0F   08 08 13 2C               .byte $08,$08,<L1210,>L1210 ; Sprite 3   - Egg
  319   2B13   08 08 1B 2C               .byte $08,$08,<L1218,>L1218 ; Sprite 4   - Seed
  320   2B17   10 04 23 2C               .byte $10,$04,<L1220,>L1220 ; Sprite 5   - Elevator
  321   2B1B   08 10 2B 2C               .byte $08,$10,<L1228,>L1228 ; Sprite 6   - Man stand right
  322   2B1F   08 10 3B 2C               .byte $08,$10,<L1238,>L1238 ; Sprite 7   - Man walk right1
  323   2B23   08 10 4B 2C               .byte $08,$10,<L1248,>L1248 ; Sprite 8   - Man walk right2
  324   2B27   08 10 5B 2C               .byte $08,$10,<L1258,>L1258 ; Sprite 9   - Man stand left
  325   2B2B   08 10 6B 2C               .byte $08,$10,<L1268,>L1268 ; Sprite $a  - Man walk left1
  326   2B2F   08 10 7B 2C               .byte $08,$10,<L1278,>L1278 ; Sprite $b  - Man walk left2
  327   2B33   08 10 8B 2C               .byte $08,$10,<L1288,>L1288 ; Sprite $c  - Man stand climb
  328   2B37   08 12 9B 2C               .byte $08,$12,<L1298,>L1298 ; Sprite $d  - Man climb1
  329   2B3B   08 12 AD 2C               .byte $08,$12,<L12AA,>L12AA ; Sprite $e  - Man climb2
  330   2B3F   10 18 BF 2C               .byte $10,$18,<L12BC,>L12BC ; Sprite $f  - Duck right1
  331   2B43   10 18 EF 2C               .byte $10,$18,<L12EC,>L12EC ; Sprite $10 - Duck right2
  332   2B47   10 18 1F 2D               .byte $10,$18,<L131C,>L131C ; Sprite $11 - Duck left1
  333   2B4B   10 18 4F 2D               .byte $10,$18,<L134C,>L134C ; Sprite $12 - Duck left2
  334   2B4F   18 30 7F 2D               .byte $18,$30,<L137C,>L137C ; Sprite $13 - Duck cage right
  335   2B53   18 30 0F 2E               .byte $18,$30,<L140C,>L140C ; Sprite $14 - Duck cage empty
  336   2B57   08 14 9F 2E               .byte $08,$14,<L149C,>L149C ; Sprite $15 - Bird stand right
  337   2B5B   08 14 B3 2E               .byte $08,$14,<L14B0,>L14B0 ; Sprite $16 - Bird walk right
  338   2B5F   08 14 C7 2E               .byte $08,$14,<L14C4,>L14C4 ; Sprite $17 - Bird stand left
  339   2B63   08 14 DB 2E               .byte $08,$14,<L14D8,>L14D8 ; Sprite $18 - Bird walk left
  340   2B67   08 14 EF 2E               .byte $08,$14,<L14EC,>L14EC ; Sprite $19 - Bird climb1
  341   2B6B   08 16 03 2F               .byte $08,$16,<L1500,>L1500 ; Sprite $1a - Bird climb2
  342   2B6F   10 14 19 2F               .byte $10,$14,<L1516,>L1516 ; Sprite $1b - Bird eat right1
  343   2B73   10 14 41 2F               .byte $10,$14,<L153E,>L153E ; Sprite $1c - Bird eat right2
  344   2B77   10 14 69 2F               .byte $10,$14,<L1566,>L1566 ; Sprite $1d - Bird eat left1
  345   2B7B   10 14 91 2F               .byte $10,$14,<L158E,>L158E ; Sprite $1e - Bird eat left2
  346   2B7F   08 07 B9 2F               .byte $08,$07,<L15B6,>L15B6 ; Sprite $1f - 0
  347   2B83   08 07 C0 2F               .byte $08,$07,<L15BD,>L15BD ; Sprite $20 - 1
  348   2B87   08 07 C7 2F               .byte $08,$07,<L15C4,>L15C4 ; Sprite $21 - 2
  349   2B8B   08 07 CE 2F               .byte $08,$07,<L15CB,>L15CB ; Sprite $22 - 3
  350   2B8F   08 07 D5 2F               .byte $08,$07,<L15D2,>L15D2 ; Sprite $23 - 4
  351   2B93   08 07 DC 2F               .byte $08,$07,<L15D9,>L15D9 ; Sprite $24 - 5
  352   2B97   08 07 E3 2F               .byte $08,$07,<L15E0,>L15E0 ; Sprite $25 - 6
  353   2B9B   08 07 EA 2F               .byte $08,$07,<L15E7,>L15E7 ; Sprite $26 - 7
  354   2B9F   08 07 F1 2F               .byte $08,$07,<L15EE,>L15EE ; Sprite $27 - 8
  355   2BA3   08 07 F8 2F               .byte $08,$07,<L15F5,>L15F5 ; Sprite $28 - 9
  356   2BA7   18 09 FF 2F               .byte $18,$09,<L15FC,>L15FC ; Sprite $29 - SCORE
  357   2BAB   20 09 1A 30               .byte $20,$09,<L1617,>L1617 ; Sprite $2a - SPACE 8x
  358   2BAF   20 09 3E 30               .byte $20,$09,<L163B,>L163B ; Sprite $2b - PLAYER
  359   2BB3   20 09 62 30               .byte $20,$09,<L165F,>L165F ; Sprite $2c - LEVEL + spaces
  360   2BB7   28 09 86 30               .byte $28,$09,<L168C,>L168C ; Sprite $2d - BONUS + spaces
  361   2BBB   20 09 B3 30               .byte $20,$09,<L16C2,>L16C2 ; Sprite $2e - TIME + spaces
  362   2BBF   08 03 D7 30               .byte $08,$03,<L16EF,>L16EF ; Sprite $2f - Lifes icon
  363   2BC3   10 18 DA 30               .byte $10,$18,<L16F2,>L16F2 ; Sprite $30 - C
  364   2BC7   10 18 0A 31               .byte $10,$18,<L172E,>L172E ; Sprite $31 - H
  365   2BCB   10 18 3A 31               .byte $10,$18,<L176A,>L176A ; Sprite $32 - U
  366   2BCF   10 18 6A 31               .byte $10,$18,<L17A6,>L17A6 ; Sprite $33 - K
  367   2BD3   08 18 9A 31               .byte $08,$18,<L17E2,>L17E2 ; Sprite $34 - I
  368   2BD7   10 18 B2 31               .byte $10,$18,<L181E,>L181E ; Sprite $35 - E
  369   2BDB   10 18 E2 31               .byte $10,$18,<L185A,>L185A ; Sprite $36 - G
  370                           
  371   2BDF   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2BE4   00 00 00 
  372   2BE7   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2BEC   00 00 00 
  373   2BEF   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2BF4   00 00 00 
  374   2BF7   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2BFC   00 00 00 
  375   2BFF   00 00 00 00               .byte $00,$00,$00,$00
  376                           
  377   2C03   FB 00 BF 00 EF   L1200:   .byte $fb,$00,$bf,$00,$ef,$00,$00,$00 ; Wall
        2C08   00 00 00 
  378   2C0B   42 42 42 42 7E   L1208:   .byte $42,$42,$42,$42,$7e,$42,$42,$42 ; Ladder
        2C10   42 42 42 
  379   2C13   00 38 6C 5E 7E   L1210:   .byte $00,$38,$6c,$5e,$7e,$7c,$38,$00 ; Egg
        2C18   7C 38 00 
  380   2C1B   00 00 00 08 14   L1218:   .byte $00,$00,$00,$08,$14,$2a,$55,$00 ; Seed
        2C20   2A 55 00 
  381   2C23   1F F8 1F F8 1B   L1220:   .byte $1f,$f8,$1f,$f8,$1b,$d8,$11,$88 ; Elevator
        2C28   D8 11 88 
  382   2C2B   18 3C FF 34 3C   L1228:   .byte $18,$3c,$ff,$34,$3c,$10,$18,$3c ; Man stand right
        2C30   10 18 3C 
  383   2C33   6E 6E 6E 6E 3C            .byte $6e,$6e,$6e,$6e,$3c,$18,$10,$18
        2C38   18 10 18 
  384   2C3B   18 3C FF 34 3C   L1238:   .byte $18,$3c,$ff,$34,$3c,$10,$18,$3c ; Man walk right1
        2C40   10 18 3C 
  385   2C43   6E 6E 76 76 3C            .byte $6e,$6e,$76,$76,$3c,$38,$4a,$24
        2C48   38 4A 24 
  386   2C4B   18 3C FF 34 3C   L1248:   .byte $18,$3c,$ff,$34,$3c,$10,$18,$3c ; Man walk right2
        2C50   10 18 3C 
  387   2C53   6E 6E 5E 5E 3C            .byte $6e,$6e,$5e,$5e,$3c,$38,$4a,$24
        2C58   38 4A 24 
  388   2C5B   18 3C FF 2C 3C   L1258:   .byte $18,$3c,$ff,$2c,$3c,$08,$18,$3c ; Man stand left
        2C60   08 18 3C 
  389   2C63   76 76 76 76 3C            .byte $76,$76,$76,$76,$3c,$18,$08,$18
        2C68   18 08 18 
  390   2C6B   18 3C FF 2C 3C   L1268:   .byte $18,$3c,$ff,$2c,$3c,$08,$18,$3c ; Man walk left1
        2C70   08 18 3C 
  391   2C73   76 76 6E 6E 3C            .byte $76,$76,$6e,$6e,$3c,$1c,$52,$24
        2C78   1C 52 24 
  392   2C7B   18 3C FF 2C 3C   L1278:   .byte $18,$3c,$ff,$2c,$3c,$08,$18,$3c ; Man walk left2
        2C80   08 18 3C 
  393   2C83   76 76 7A 7A 3C            .byte $76,$76,$7a,$7a,$3c,$1c,$52,$24
        2C88   1C 52 24 
  394   2C8B   18 3C FF 3C 3C   L1288:   .byte $18,$3c,$ff,$3c,$3c,$18,$18,$bd ; Man climb
        2C90   18 18 BD 
  395   2C93   FF 7E 7E 7E 3C            .byte $ff,$7e,$7e,$7e,$3c,$24,$24,$66
        2C98   24 24 66 
  396   2C9B   18 3C FF 3C 3D   L1298:   .byte $18,$3c,$ff,$3c,$3d,$19,$19,$3d ; Man climb1
        2CA0   19 19 3D 
  397   2CA3   FF FE FE FE BC            .byte $ff,$fe,$fe,$fe,$bc,$3e,$20,$20
        2CA8   3E 20 20 
  398   2CAB   20 60                     .byte $20,$60
  399   2CAD   18 3C FF 3C BC   L12AA:   .byte $18,$3c,$ff,$3c,$bc,$98,$98,$bc ; Man climb2
        2CB2   98 98 BC 
  400   2CB5   FF 7F 7F 7F 3D            .byte $ff,$7f,$7f,$7f,$3d,$7c,$04,$04
        2CBA   7C 04 04 
  401   2CBD   04 06                     .byte $04,$06
  402   2CBF   00 70 00 F8      L12BC:   .byte $00,$70,$00,$f8                 ; Duck right1
  403   2CC3   01 E8 01 EF 01            .byte $01,$e8,$01,$ef,$01,$ff,$01,$f8
        2CC8   FF 01 F8 
  404   2CCB   00 F0 00 E0 00            .byte $00,$f0,$00,$e0,$00,$60,$0e,$70
        2CD0   60 0E 70 
  405   2CD3   1F 70 3F F8 7F            .byte $1f,$70,$3f,$f8,$7f,$f8,$ff,$78
        2CD8   F8 FF 78 
  406   2CDB   FF B8 BF BC BF            .byte $ff,$b8,$bf,$bc,$bf,$bc,$df,$bc
        2CE0   BC DF BC 
  407   2CE3   6F 7C 76 FC 39            .byte $6f,$7c,$76,$fc,$39,$f8,$1f,$f8
        2CE8   F8 1F F8 
  408   2CEB   0F F0 03 E0               .byte $0f,$f0,$03,$e0
  409   2CEF   00 70 00 F9      L12EC:   .byte $00,$70,$00,$f9                 ; Duck right2
  410   2CF3   01 EA 01 EC 01            .byte $01,$ea,$01,$ec,$01,$fc,$01,$fa
        2CF8   FC 01 FA 
  411   2CFB   00 F1 00 E0 00            .byte $00,$f1,$00,$e0,$00,$60,$0e,$70
        2D00   60 0E 70 
  412   2D03   1F 70 3F F8 71            .byte $1f,$70,$3f,$f8,$71,$f8,$ee,$78
        2D08   F8 EE 78 
  413   2D0B   DF B8 BF FC FF            .byte $df,$b8,$bf,$fc,$ff,$fc,$ff,$fc
        2D10   FC FF FC 
  414   2D13   7F FC 7F FC 3F            .byte $7f,$fc,$7f,$fc,$3f,$f8,$1f,$f8
        2D18   F8 1F F8 
  415   2D1B   0F F0 03 E0               .byte $0f,$f0,$03,$e0
  416   2D1F   0E 00 1F 00      L131C:   .byte $0e,$00,$1f,$00                 ; Duck left1
  417   2D23   17 80 F7 80 FF            .byte $17,$80,$f7,$80,$ff,$80,$1f,$80
        2D28   80 1F 80 
  418   2D2B   0F 00 07 00 06            .byte $0f,$00,$07,$00,$06,$00,$0e,$70
        2D30   00 0E 70 
  419   2D33   0E F8 1F FC 1F            .byte $0e,$f8,$1f,$fc,$1f,$fe,$1e,$ff
        2D38   FE 1E FF 
  420   2D3B   1D FF 3D FD 3D            .byte $1d,$ff,$3d,$fd,$3d,$fd,$3d,$fb
        2D40   FD 3D FB 
  421   2D43   3E F6 3F 6E 1F            .byte $3e,$f6,$3f,$6e,$1f,$9c,$1f,$f8
        2D48   9C 1F F8 
  422   2D4B   0F F0 07 C0               .byte $0f,$f0,$07,$c0
  423   2D4F   0E 00 9F 00      L134C:   .byte $0e,$00,$9f,$00                 ; Duck left2
  424   2D53   57 80 37 80 3F            .byte $57,$80,$37,$80,$3f,$80,$5f,$80
        2D58   80 5F 80 
  425   2D5B   8F 00 07 00 06            .byte $8f,$00,$07,$00,$06,$00,$0e,$70
        2D60   00 0E 70 
  426   2D63   0E F8 1F FC 1F            .byte $0e,$f8,$1f,$fc,$1f,$8e,$1e,$77
        2D68   8E 1E 77 
  427   2D6B   1D FB 3F FD 3F            .byte $1d,$fb,$3f,$fd,$3f,$ff,$3f,$ff
        2D70   FF 3F FF 
  428   2D73   3F FE 3F FE 1F            .byte $3f,$fe,$3f,$fe,$1f,$fc,$1f,$f8
        2D78   FC 1F F8 
  429   2D7B   0F F0 07 C0               .byte $0f,$f0,$07,$c0
  430   2D7F   00 38 00 00      L137C:   .byte $00,$38,$00,$00                 ; Duck cage right
  431   2D83   44 00 00 44 00            .byte $44,$00,$00,$44,$00,$00,$44,$00
        2D88   00 44 00 
  432   2D8B   00 38 00 00 10            .byte $00,$38,$00,$00,$10,$00,$00,$fe
        2D90   00 00 FE 
  433   2D93   00 03 7D 80 0C            .byte $00,$03,$7d,$80,$0c,$d6,$60,$11
        2D98   D6 60 11 
  434   2D9B   55 10 22 54 88            .byte $55,$10,$22,$54,$88,$24,$92,$48
        2DA0   24 92 48 
  435   2DA3   44 92 44 48 92            .byte $44,$92,$44,$48,$92,$24,$88,$92
        2DA8   24 88 92 
  436   2DAB   22 89 11 22 D1            .byte $22,$89,$11,$22,$d1,$10,$16,$b1
        2DB0   10 16 B1 
  437   2DB3   10 0A 99 00 02            .byte $10,$0a,$99,$00,$02,$97,$00,$02
        2DB8   97 00 02 
  438   2DBB   91 E0 02 91 00            .byte $91,$e0,$02,$91,$00,$02,$91,$10
        2DC0   02 91 10 
  439   2DC3   02 91 10 12 91            .byte $02,$91,$10,$12,$91,$10,$12,$91
        2DC8   10 12 91 
  440   2DCB   10 12 90 00 12            .byte $10,$12,$90,$00,$12,$90,$00,$12
        2DD0   90 00 12 
  441   2DD3   90 00 12 D0 00            .byte $90,$00,$12,$d0,$00,$16,$b0,$00
        2DD8   16 B0 00 
  442   2DDB   1A 90 00 32 90            .byte $1a,$90,$00,$32,$90,$00,$12,$90
        2DE0   00 12 90 
  443   2DE3   00 12 90 00 12            .byte $00,$12,$90,$00,$12,$90,$00,$12
        2DE8   90 00 12 
  444   2DEB   90 00 12 90 00            .byte $90,$00,$12,$90,$00,$12,$91,$00
        2DF0   12 91 00 
  445   2DF3   12 91 01 12 91            .byte $12,$91,$01,$12,$91,$11,$12,$91
        2DF8   11 12 91 
  446   2DFB   11 12 D1 11 12            .byte $11,$12,$d1,$11,$12,$51,$11,$14
        2E00   51 11 14 
  447   2E03   31 11 18 19 11            .byte $31,$11,$18,$19,$11,$30,$07,$11
        2E08   30 07 11 
  448   2E0B   C0 00 FE 00               .byte $c0,$00,$fe,$00
  449   2E0F   00 38 00 00      L140C:   .byte $00,$38,$00,$00                 ; Duck cage empty
  450   2E13   44 00 00 44 00            .byte $44,$00,$00,$44,$00,$00,$44,$00
        2E18   00 44 00 
  451   2E1B   00 38 00 00 10            .byte $00,$38,$00,$00,$10,$00,$00,$fe
        2E20   00 00 FE 
  452   2E23   00 03 7D 80 0C            .byte $00,$03,$7d,$80,$0c,$d6,$60,$11
        2E28   D6 60 11 
  453   2E2B   55 10 22 54 88            .byte $55,$10,$22,$54,$88,$24,$92,$48
        2E30   24 92 48 
  454   2E33   44 92 44 48 92            .byte $44,$92,$44,$48,$92,$24,$88,$92
        2E38   24 88 92 
  455   2E3B   22 89 11 22 D1            .byte $22,$89,$11,$22,$d1,$11,$16,$b1
        2E40   11 16 B1 
  456   2E43   11 1A 99 11 32            .byte $11,$1a,$99,$11,$32,$97,$11,$d2
        2E48   97 11 D2 
  457   2E4B   91 FF 12 91 11            .byte $91,$ff,$12,$91,$11,$12,$91,$11
        2E50   12 91 11 
  458   2E53   12 91 11 12 91            .byte $12,$91,$11,$12,$91,$11,$12,$91
        2E58   11 12 91 
  459   2E5B   11 12 91 11 12            .byte $11,$12,$91,$11,$12,$91,$11,$12
        2E60   91 11 12 
  460   2E63   91 11 12 D1 11            .byte $91,$11,$12,$d1,$11,$16,$b1,$11
        2E68   16 B1 11 
  461   2E6B   1A 99 11 32 97            .byte $1a,$99,$11,$32,$97,$11,$d2,$91
        2E70   11 D2 91 
  462   2E73   FF 12 91 11 12            .byte $ff,$12,$91,$11,$12,$91,$11,$12
        2E78   91 11 12 
  463   2E7B   91 11 12 91 11            .byte $91,$11,$12,$91,$11,$12,$91,$11
        2E80   12 91 11 
  464   2E83   12 91 11 12 91            .byte $12,$91,$11,$12,$91,$11,$12,$91
        2E88   11 12 91 
  465   2E8B   11 12 D1 11 12            .byte $11,$12,$d1,$11,$12,$51,$11,$14
        2E90   51 11 14 
  466   2E93   31 11 18 19 11            .byte $31,$11,$18,$19,$11,$30,$07,$11
        2E98   30 07 11 
  467   2E9B   C0 00 FE 00               .byte $c0,$00,$fe,$00
  468   2E9F   0C 1B 1C 08      L149C:   .byte $0c,$1b,$1c,$08                 ; Bird stand right
  469   2EA3   08 04 04 02 32            .byte $08,$04,$04,$02,$32,$7b,$7f,$7f
        2EA8   7B 7F 7F 
  470   2EAB   7F 3E 18 10 10            .byte $7f,$3e,$18,$10,$10,$10,$10,$18
        2EB0   10 10 18 
  471   2EB3   0D 1A 1D 08 08   L14B0:   .byte $0d,$1a,$1d,$08,$08,$04,$04,$02 ; Bird walk right
        2EB8   04 04 02 
  472   2EBB   32 7B 7F 7F 7F            .byte $32,$7b,$7f,$7f,$7f,$3e,$18,$28
        2EC0   3E 18 28 
  473   2EC3   28 44 45 22               .byte $28,$44,$45,$22
  474   2EC7   30 D8 38 10      L14C4:   .byte $30,$d8,$38,$10                 ; Bird stand left
  475   2ECB   10 20 20 40 4C            .byte $10,$20,$20,$40,$4c,$de,$fe,$fe
        2ED0   DE FE FE 
  476   2ED3   FE 7C 18 08 08            .byte $fe,$7c,$18,$08,$08,$08,$08,$18
        2ED8   08 08 18 
  477   2EDB   B0 58 B8 10 10   L14D8:   .byte $b0,$58,$b8,$10,$10,$20,$20,$40 ; Bird walk left
        2EE0   20 20 40 
  478   2EE3   4C DE FE FE FE            .byte $4c,$de,$fe,$fe,$fe,$7c,$18,$14
        2EE8   7C 18 14 
  479   2EEB   14 22 A2 44               .byte $14,$22,$a2,$44
  480   2EEF   18 3C 3C 3C      L14EC:   .byte $18,$3c,$3c,$3c                 ; Bird climb1
  481   2EF3   18 18 18 3C 7E            .byte $18,$18,$18,$3c,$7e,$7e,$7e,$7e
        2EF8   7E 7E 7E 
  482   2EFB   7E 3C 3C 24 24            .byte $7e,$3c,$3c,$24,$24,$26,$20,$60
        2F00   26 20 60 
  483   2F03   18 3C 3C 3C 18   L1500:   .byte $18,$3c,$3c,$3c,$18,$18,$18,$3c ; Bird climb2
        2F08   18 18 3C 
  484   2F0B   7E 7E 7E 7E 7E            .byte $7e,$7e,$7e,$7e,$7e,$3c,$3c,$24
        2F10   3C 3C 24 
  485   2F13   24 64 04 04 04            .byte $24,$64,$04,$04,$04,$06
        2F18   06 
  486   2F19   00 00            L1516:   .byte $00,$00                         ; Bird eat right1
  487   2F1B   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2F20   00 00 00 
  488   2F23   00 00 00 38 30            .byte $00,$00,$00,$38,$30,$28,$78,$78
        2F28   28 78 78 
  489   2F2B   7C C4 7F C2 7F            .byte $7c,$c4,$7f,$c2,$7f,$80,$3f,$00
        2F30   80 3F 00 
  490   2F33   3F 00 1F 00 16            .byte $3f,$00,$1f,$00,$16,$00,$10,$00
        2F38   00 10 00 
  491   2F3B   10 00 10 00 18            .byte $10,$00,$10,$00,$18,$00
        2F40   00 
  492   2F41   00 00            L153E:   .byte $00,$00                         ; Bird eat right2
  493   2F43   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2F48   00 00 00 
  494   2F4B   00 00 00 00 30            .byte $00,$00,$00,$00,$30,$00,$78,$00
        2F50   00 78 00 
  495   2F53   7C 00 7E 00 7F            .byte $7c,$00,$7e,$00,$7f,$f8,$3f,$f4
        2F58   F8 3F F4 
  496   2F5B   3F 14 1F 08 16            .byte $3f,$14,$1f,$08,$16,$08,$10,$08
        2F60   08 10 08 
  497   2F63   10 00 10 00 18            .byte $10,$00,$10,$00,$18,$00
        2F68   00 
  498   2F69   00 00            L1566:   .byte $00,$00                         ; Bird eat left1
  499   2F6B   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2F70   00 00 00 
  500   2F73   00 00 1C 00 14            .byte $00,$00,$1c,$00,$14,$0c,$1e,$1e
        2F78   0C 1E 1E 
  501   2F7B   23 3E 43 FE 01            .byte $23,$3e,$43,$fe,$01,$fe,$00,$fc
        2F80   FE 00 FC 
  502   2F83   00 FC 00 F8 00            .byte $00,$fc,$00,$f8,$00,$68,$00,$08
        2F88   68 00 08 
  503   2F8B   00 08 00 08 00            .byte $00,$08,$00,$08,$00,$18
        2F90   18 
  504   2F91   00 00            L158E:   .byte $00,$00                         ; Bird eat left2
  505   2F93   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$00,$00,$00
        2F98   00 00 00 
  506   2F9B   00 00 00 00 00            .byte $00,$00,$00,$00,$00,$0c,$00,$1e
        2FA0   0C 00 1E 
  507   2FA3   00 3E 00 7E 1F            .byte $00,$3e,$00,$7e,$1f,$fe,$2f,$fc
        2FA8   FE 2F FC 
  508   2FAB   28 FC 10 F8 10            .byte $28,$fc,$10,$f8,$10,$68,$10,$08
        2FB0   68 10 08 
  509   2FB3   00 08 00 08 00            .byte $00,$08,$00,$08,$00,$18
        2FB8   18 
  510   2FB9   40 A0 A0 A0 A0   L15B6:   .byte $40,$a0,$a0,$a0,$a0,$a0,$40     ; 0
        2FBE   A0 40 
  511   2FC0   40 C0 40 40 40   L15BD:   .byte $40,$c0,$40,$40,$40,$40,$e0     ; 1
        2FC5   40 E0 
  512   2FC7   40 A0 20 20 40   L15C4:   .byte $40,$a0,$20,$20,$40,$80,$e0     ; 2
        2FCC   80 E0 
  513   2FCE   40 A0 20 40 20   L15CB:   .byte $40,$a0,$20,$40,$20,$a0,$40     ; 3
        2FD3   A0 40 
  514   2FD5   20 40 80 A0 E0   L15D2:   .byte $20,$40,$80,$a0,$e0,$20,$20     ; 4
        2FDA   20 20 
  515   2FDC   E0 80 80 C0 20   L15D9:   .byte $e0,$80,$80,$c0,$20,$a0,$40     ; 5
        2FE1   A0 40 
  516   2FE3   20 40 80 C0 A0   L15E0:   .byte $20,$40,$80,$c0,$a0,$a0,$40     ; 6
        2FE8   A0 40 
  517   2FEA   E0 20 20 40 80   L15E7:   .byte $e0,$20,$20,$40,$80,$80,$80     ; 7
        2FEF   80 80 
  518   2FF1   40 A0 A0 40 A0   L15EE:   .byte $40,$a0,$a0,$40,$a0,$a0,$40     ; 8
        2FF6   A0 40 
  519   2FF8   40 A0 A0 60 20   L15F5:   .byte $40,$a0,$a0,$60,$20,$40,$80     ; 9
        2FFD   40 80 
  520   2FFF   FF FF F8         L15FC:   .byte $ff,$ff,$f8                     ; SCORE
  521   3002   DD D9 88                  .byte $dd,$d9,$88
  522   3005   AA AA B8                  .byte $aa,$aa,$b8
  523   3008   BB AA B8                  .byte $bb,$aa,$b8
  524   300B   DB A9 98                  .byte $db,$a9,$98
  525   300E   EB AA B8                  .byte $eb,$aa,$b8
  526   3011   AA AA B8                  .byte $aa,$aa,$b8
  527   3014   DD DA 88                  .byte $dd,$da,$88
  528   3017   FF FF F8                  .byte $ff,$ff,$f8
  529   301A   FF               L1617:   .byte $ff                             ; SPACE 8x
  530   301B   FF FF 80 FF FF            .byte $ff,$ff,$80,$ff,$ff,$ff,$80,$ff
        3020   FF 80 FF 
  531   3023   FF FF 80 FF FF            .byte $ff,$ff,$80,$ff,$ff,$ff,$80,$ff
        3028   FF 80 FF 
  532   302B   FF FF 80 FF FF            .byte $ff,$ff,$80,$ff,$ff,$ff,$80,$ff
        3030   FF 80 FF 
  533   3033   FF FF 80 FF FF            .byte $ff,$ff,$80,$ff,$ff,$ff,$80,$ff
        3038   FF 80 FF 
  534   303B   FF FF 80                  .byte $ff,$ff,$80
  535   303E   FF FF FF F8      L163B:   .byte $ff,$ff,$ff,$f8                 ; PLAYER
  536   3042   9B DA 89 F8               .byte $9b,$da,$89,$f8
  537   3046   AB AA BA F8               .byte $ab,$aa,$ba,$f8
  538   304A   AB AA BA F8               .byte $ab,$aa,$ba,$f8
  539   304E   9B 8D 99 F8               .byte $9b,$8d,$99,$f8
  540   3052   BB AD BA F8               .byte $bb,$ad,$ba,$f8
  541   3056   BB AD BA F8               .byte $bb,$ad,$ba,$f8
  542   305A   B8 AD 8A F8               .byte $b8,$ad,$8a,$f8
  543   305E   FF FF FF F8               .byte $ff,$ff,$ff,$f8
  544   3062   FF FF FF F8      L165F:   .byte $ff,$ff,$ff,$f8                 ; LEVEL + spaces
  545   3066   B8 A8 BF F8               .byte $b8,$a8,$bf,$f8
  546   306A   BB AB BF F8               .byte $bb,$ab,$bf,$f8
  547   306E   B9 A9 BF F8               .byte $b9,$a9,$bf,$f8
  548   3072   BB AB BF F8               .byte $bb,$ab,$bf,$f8
  549   3076   BB AB BF F8               .byte $bb,$ab,$bf,$f8
  550   307A   BB DB BF F8               .byte $bb,$db,$bf,$f8
  551   307E   88 D8 8F F8               .byte $88,$d8,$8f,$f8
  552   3082   FF FF FF F8               .byte $ff,$ff,$ff,$f8 
  553   3086   FF FF FF FF FC   L168C:   .byte $ff,$ff,$ff,$ff,$fc            ; BONUS + spaces
  554   308B   98 B5 6F FF FC            .byte $98,$b5,$6f,$ff,$fc
  555   3090   AA 95 57 FF FC            .byte $aa,$95,$57,$ff,$fc
  556   3095   AA 95 5F FF FC            .byte $aa,$95,$5f,$ff,$fc
  557   309A   9A A5 6F FF FC            .byte $9a,$a5,$6f,$ff,$fc
  558   309F   AA A5 77 FF FC            .byte $aa,$a5,$77,$ff,$fc
  559   30A4   AA B5 57 FF FC            .byte $aa,$b5,$57,$ff,$fc
  560   30A9   98 B4 6F FF FC            .byte $98,$b4,$6f,$ff,$fc
  561   30AE   FF FF FF FF FC            .byte $ff,$ff,$ff,$ff,$fc
  562   30B3   FF FF FF F8      L16C2:   .byte $ff,$ff,$ff,$f8                ; TIME + spaces
  563   30B7   8A E8 FF F8               .byte $8a,$e8,$ff,$f8
  564   30BB   DA 4B FF F8               .byte $da,$4b,$ff,$f8
  565   30BF   DA AB FF F8               .byte $da,$ab,$ff,$f8
  566   30C3   DA E9 FF F8               .byte $da,$e9,$ff,$f8
  567   30C7   DA EB FF F8               .byte $da,$eb,$ff,$f8
  568   30CB   DA EB FF F8               .byte $da,$eb,$ff,$f8
  569   30CF   DA E8 FF F8               .byte $da,$e8,$ff,$f8
  570   30D3   FF FF FF F8               .byte $ff,$ff,$ff,$f8
  571   30D7   40 E0 00         L16EF:   .byte $40,$e0,$00                     ; Lifes icon
  572   30DA                    L16F2:
  573   30DA   3F C0                    .byte $3f,$c0  ; 0011111111000000   Letter C
  574   30DC   7F E0                    .byte $7f,$e0  ; 0111111111100000
  575   30DE   FF F0                    .byte $ff,$f0  ; 1111111111110000
  576   30E0   FF F0                    .byte $ff,$f0  ; 1111111111110000
  577   30E2   FF F0                    .byte $ff,$f0  ; 1111111111110000
  578   30E4   F9 F0                    .byte $f9,$f0  ; 1111100111110000
  579   30E6   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  580   30E8   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  581   30EA   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  582   30EC   F0 60                    .byte $f0,$60  ; 1111000001100000
  583   30EE   F0 00                    .byte $f0,$00  ; 1111000000000000
  584   30F0   F0 00                    .byte $f0,$00  ; 1111000000000000
  585   30F2   F0 00                    .byte $f0,$00  ; 1111000000000000
  586   30F4   F0 00                    .byte $f0,$00  ; 1111000000000000
  587   30F6   F0 60                    .byte $f0,$60  ; 1111000001100000
  588   30F8   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  589   30FA   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  590   30FC   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  591   30FE   F9 F0                    .byte $f9,$f0  ; 1111100111110000
  592   3100   FF F0                    .byte $ff,$f0  ; 1111111111110000
  593   3102   FF F0                    .byte $ff,$f0  ; 1111111111110000
  594   3104   FF F0                    .byte $ff,$f0  ; 1111111111110000
  595   3106   7F E0                    .byte $7f,$e0  ; 0111111111100000
  596   3108   3F C0                    .byte $3f,$c0  ; 0011111111000000
  597                           
  598   310A                    L172E:
  599   310A   60 C0                    .byte $60,$c0  ; 0110000011000000   Letter H
  600   310C   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  601   310E   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  602   3110   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  603   3112   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  604   3114   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  605   3116   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  606   3118   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  607   311A   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  608   311C   FF E0                    .byte $ff,$e0  ; 1111111111100000
  609   311E   FF E0                    .byte $ff,$e0  ; 1111111111100000
  610   3120   FF E0                    .byte $ff,$e0  ; 1111111111100000
  611   3122   FF E0                    .byte $ff,$e0  ; 1111111111100000
  612   3124   FF E0                    .byte $ff,$e0  ; 1111111111100000
  613   3126   FF E0                    .byte $ff,$e0  ; 1111111111100000
  614   3128   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  615   312A   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  616   312C   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  617   312E   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  618   3130   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  619   3132   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  620   3134   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  621   3136   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  622   3138   60 C0                    .byte $60,$c0  ; 0110000011000000
  623                           
  624   313A                    L176A:
  625   313A   60 60                    .byte $60,$60  ; 0110000001100000   Letter U
  626   313C   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  627   313E   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  628   3140   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  629   3142   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  630   3144   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  631   3146   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  632   3148   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  633   314A   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  634   314C   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  635   314E   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  636   3150   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  637   3152   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  638   3154   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  639   3156   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  640   3158   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  641   315A   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  642   315C   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  643   315E   F9 F0                    .byte $f9,$f0  ; 1111100111110000
  644   3160   FF F0                    .byte $ff,$f0  ; 1111111111110000
  645   3162   FF F0                    .byte $ff,$f0  ; 1111111111110000
  646   3164   FF F0                    .byte $ff,$f0  ; 1111111111110000
  647   3166   7F E0                    .byte $7f,$e0  ; 0111111111100000
  648   3168   3F C0                    .byte $3f,$c0  ; 0011111111000000
  649                           
  650   316A                    L17A6:
  651   316A   60 60                    .byte $60,$60  ; 0110000001100000   Letter K
  652   316C   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  653   316E   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  654   3170   F1 F0                    .byte $f1,$f0  ; 1111000111110000
  655   3172   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  656   3174   F1 C0                    .byte $f1,$c0  ; 1111000111000000
  657   3176   F3 C0                    .byte $f3,$c0  ; 1111001111000000
  658   3178   F3 80                    .byte $f3,$80  ; 1111001110000000
  659   317A   F7 80                    .byte $f7,$80  ; 1111011110000000
  660   317C   FF 00                    .byte $ff,$00  ; 1111111100000000
  661   317E   FF 00                    .byte $ff,$00  ; 1111111100000000
  662   3180   FE 00                    .byte $fe,$00  ; 1111111000000000
  663   3182   FE 00                    .byte $fe,$00  ; 1111111000000000
  664   3184   FF 00                    .byte $ff,$00  ; 1111111100000000
  665   3186   FF 00                    .byte $ff,$00  ; 1111111100000000
  666   3188   F7 80                    .byte $f7,$80  ; 1111011110000000
  667   318A   F3 80                    .byte $f3,$80  ; 1111001110000000
  668   318C   F3 C0                    .byte $f3,$c0  ; 1111001111000000
  669   318E   F1 C0                    .byte $f1,$c0  ; 1111000111000000
  670   3190   F1 E0                    .byte $f1,$e0  ; 1111000111100000
  671   3192   F1 F0                    .byte $f1,$f0  ; 1111000111110000
  672   3194   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  673   3196   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  674   3198   60 60                    .byte $60,$60  ; 0110000001100000
  675                           
  676   319A                    L17E2:
  677   319A   60                       .byte $60  ; 01100000   Letter I
  678   319B   F0                       .byte $f0  ; 11110000
  679   319C   F0                       .byte $f0  ; 11110000
  680   319D   F0                       .byte $f0  ; 11110000
  681   319E   F0                       .byte $f0  ; 11110000
  682   319F   F0                       .byte $f0  ; 11110000
  683   31A0   F0                       .byte $f0  ; 11110000
  684   31A1   F0                       .byte $f0  ; 11110000
  685   31A2   F0                       .byte $f0  ; 11110000
  686   31A3   F0                       .byte $f0  ; 11110000
  687   31A4   F0                       .byte $f0  ; 11110000
  688   31A5   F0                       .byte $f0  ; 11110000
  689   31A6   F0                       .byte $f0  ; 11110000
  690   31A7   F0                       .byte $f0  ; 11110000
  691   31A8   F0                       .byte $f0  ; 11110000
  692   31A9   F0                       .byte $f0  ; 11110000
  693   31AA   F0                       .byte $f0  ; 11110000
  694   31AB   F0                       .byte $f0  ; 11110000
  695   31AC   F0                       .byte $f0  ; 11110000
  696   31AD   F0                       .byte $f0  ; 11110000
  697   31AE   F0                       .byte $f0  ; 11110000
  698   31AF   F0                       .byte $f0  ; 11110000
  699   31B0   F0                       .byte $f0  ; 11110000
  700   31B1   60                       .byte $60  ; 01100000
  701                           
  702   31B2                    L181E:
  703   31B2   3F E0                    .byte $3f,$e0  ; 0011111111100000   Letter E
  704   31B4   7F F0                    .byte $7f,$f0  ; 0111111111110000
  705   31B6   FF F0                    .byte $ff,$f0  ; 1111111111110000
  706   31B8   FF F0                    .byte $ff,$f0  ; 1111111111110000
  707   31BA   FF E0                    .byte $ff,$e0  ; 1111111111100000
  708   31BC   F8 00                    .byte $f8,$00  ; 1111100000000000
  709   31BE   F0 00                    .byte $f0,$00  ; 1111000000000000
  710   31C0   F0 00                    .byte $f0,$00  ; 1111000000000000
  711   31C2   F0 00                    .byte $f0,$00  ; 1111000000000000
  712   31C4   F0 00                    .byte $f0,$00  ; 1111000000000000
  713   31C6   FF 80                    .byte $ff,$80  ; 1111111110000000
  714   31C8   FF C0                    .byte $ff,$c0  ; 1111111111000000
  715   31CA   FF C0                    .byte $ff,$c0  ; 1111111111000000
  716   31CC   FF 80                    .byte $ff,$80  ; 1111111110000000
  717   31CE   F0 00                    .byte $f0,$00  ; 1111000000000000
  718   31D0   F0 00                    .byte $f0,$00  ; 1111000000000000
  719   31D2   F0 00                    .byte $f0,$00  ; 1111000000000000
  720   31D4   F0 00                    .byte $f0,$00  ; 1111000000000000
  721   31D6   F8 00                    .byte $f8,$00  ; 1111100000000000
  722   31D8   FF E0                    .byte $ff,$e0  ; 1111111111100000
  723   31DA   FF F0                    .byte $ff,$f0  ; 1111111111110000
  724   31DC   FF F0                    .byte $ff,$f0  ; 1111111111110000
  725   31DE   7F F0                    .byte $7f,$f0  ; 0111111111110000
  726   31E0   3F E0                    .byte $3f,$e0  ; 0011111111100000
  727                           
  728   31E2                    L185A:
  729   31E2   3F C0                    .byte $3f,$c0  ; 0011111111000000   Letter G
  730   31E4   7F E0                    .byte $7f,$e0  ; 0111111111100000
  731   31E6   FF F0                    .byte $ff,$f0  ; 1111111111110000
  732   31E8   FF F0                    .byte $ff,$f0  ; 1111111111110000
  733   31EA   FF F0                    .byte $ff,$f0  ; 1111111111110000
  734   31EC   F9 F0                    .byte $f9,$f0  ; 1111100111110000
  735   31EE   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  736   31F0   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  737   31F2   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  738   31F4   F0 60                    .byte $f0,$60  ; 1111000001100000
  739   31F6   F0 00                    .byte $f0,$00  ; 1111000000000000
  740   31F8   F0 00                    .byte $f0,$00  ; 1111000000000000
  741   31FA   F0 00                    .byte $f0,$00  ; 1111000000000000
  742   31FC   F3 E0                    .byte $f3,$e0  ; 1111001111100000
  743   31FE   F3 F0                    .byte $f3,$f0  ; 1111001111110000
  744   3200   F1 F0                    .byte $f1,$f0  ; 1111000111110000
  745   3202   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  746   3204   F0 F0                    .byte $f0,$f0  ; 1111000011110000
  747   3206   F9 F0                    .byte $f9,$f0  ; 1111100111110000
  748   3208   FF F0                    .byte $ff,$f0  ; 1111111111110000
  749   320A   FF F0                    .byte $ff,$f0  ; 1111111111110000
  750   320C   FF F0                    .byte $ff,$f0  ; 1111111111110000
  751   320E   7F E0                    .byte $7f,$e0  ; 0111111111100000
  752   3210   3F C0                    .byte $3f,$c0  ; 0011111111000000
  753   3212   7F 7C 7F FC      L1886:   .byte $7f,$7c,$7f,$fc
  754   3216   3F FC 3F FC 1F            .byte $3f,$fc,$3f,$fc,$1f,$fc,$1f,$f8
        321B   FC 1F F8 
  755   321E   0F F8 03 F0               .byte $0f,$f8,$03,$f0
  756                           
  757                           ;------------------------------------------------
  758                           
  759   3222   51 33 34 35 2E   L1896:   .byte $51,$33,$34,$35,$2e,$38,$2e,$3d,$2e,$80
        3227   38 2E 3D 2E 80 
  760   322C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$2e,$57,$45,$54,$37,$49,$39,$30,$2e,$83
        3231   2E 2E 57 45 54 
        3236   37 49 39 30 2E 
        323B   83 
  761   323C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$31,$32,$44,$52,$36,$55,$4f,$50,$2e,$82
        3241   2E 31 32 44 52 
        3246   36 55 4F 50 2E 
        324B   82 
  762   324C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$85,$41,$58,$46,$59,$4a,$4b,$2e,$2a,$87
        3251   2E 85 41 58 46 
        3256   59 4A 4B 2E 2A 
        325B   87 
  763   325C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$2e,$53,$43,$47,$48,$4e,$4c,$2b,$2e,$88
        3261   2E 2E 53 43 47 
        3266   48 4E 4C 2B 2E 
        326B   88 
  764   326C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$2e,$5a,$89,$56,$42,$4d,$3c,$3e,$3f,$86
        3271   2E 2E 5A 89 56 
        3276   42 4D 3C 3E 3F 
        327B   86 
  765   327C   2E 2E 2E 2E 2E            .byte $2e,$2e,$2e,$2e,$2e,$2e,$84,$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e,$81
        3281   2E 84 2E 2E 2E 
        3286   2E 2E 2E 2E 2E 
        328B   81 
  766   328C   0D FF                     .byte $0d,$ff 
  767                           
  768                           ;------------------------------------------------
  769                           ; Plot sprite
  770                           ; - Screen address in $70/$71
  771                           ; - Sprite address in $76/$77
  772                           ; - $81 Pixel shift horizontal
  773                           ; - $82 Shifted sprite databyte
  774                           ; - $83 Line counter in characterblock
  775                           ; - $84 Sprite databyte
  776                           ; - $87 Sprite width in bytes
  777                           ;------------------------------------------------
  778                           
  779   328E                    L1902:
  780   328E   A5 73                        lda L0073              ; Pixel shift horizontal
  781   3290   85 81                        sta L0081
  782                           
  783   3292   A0 00                        ldy #$00
  784                           
  785   3294   A5 7A                        lda L007A              ; Sprite width in bytes
  786   3296   85 87                        sta L0087
  787                           
  788   3298   A2 00                        ldx #$00
  789   329A   A1 76            L190E:      lda (L0076,X)          ; Get sprite databyte
  790   329C   85 84            L1910:      sta L0084
  791                           
  792   329E   A9 08                        lda #$08
  793   32A0   85 83                        sta L0083
  794                           
  795   32A2   A5 7F                        lda L007F              ; Get color
  796   32A4   A6 81                        ldx L0081
  797   32A6   F0 05                        beq L1920              ; No shift needed
  798                           
  799   32A8   4A               L191C:      lsr A                  ; Shift color x pixels
  800   32A9   4A                           lsr A
  801                           
  802   32AA   CA                           dex
  803   32AB   D0 FB                        bne L191C
  804                           
  805   32AD   85 82            L1920:      sta L0082              ; Save shifted byte
  806                           
  807   32AF   A9 04                        lda #$04               ; Max shift = 4
  808   32B1   38                           sec
  809   32B2   E5 81                        sbc L0081              ; Calc shift 2nd byte
  810   32B4   85 81                        sta L0081
  811                           
  812   32B6   A2 00                        ldx #$00
  813   32B8                    L192B:
  814   32B8   06 84                        asl L0084              ; Shift out pixel sprite
  815   32BA   90 06                        bcc L1935              ; If clear, skip plotting
  816   32BC   B1 70                        lda (L0070),Y          ; Get screen byte
  817   32BE                    L1932:
  818   32BE   05 82                        ora L0082              ; OR/XOR with sprite byte
  819   32C0   91 70                        sta (L0070),Y          ; Put screen byte
  820                           
  821   32C2   C6 83            L1935:      dec L0083              ; Check for address boundery
  822   32C4   D0 12                        bne L194B
  823                           
  824   32C6   E6 76                        inc L0076              ; Next sprite databyte
  825   32C8   D0 02                        bne L193F
  826   32CA   E6 77                        inc L0077
  827                           
  828   32CC   C6 87            L193F:      dec L0087              ; C6 87
  829   32CE   F0 1C                        beq L1961              ; F0 1E
  830   32D0   A1 76                        lda (L0076,X)          ; Get sprite databyte
  831   32D2   85 84            L1945:      sta L0084              ; 85 84
  832                           
  833   32D4   A9 08                        lda #$08               ; A9 08
  834   32D6   85 83                        sta L0083              ; 85 83
  835                           
  836   32D8   46 82            L194B:      lsr L0082              ; Shift pixel
  837   32DA   46 82                        lsr L0082
  838                           
  839   32DC   C6 81                        dec L0081              ; C6 81
  840   32DE   D0 D8                        bne L192B              ; D0 DA
  841                           
  842   32E0   C8                           iny                    ; Point to byte right 
  843                           
  844   32E1   A5 7F                        lda L007F              ; Get color
  845   32E3   85 82                        sta L0082
  846                           
  847   32E5   A9 04                        lda #$04               ; Reset x-shift counter
  848   32E7   85 81                        sta L0081
  849   32E9   4C B8 32                     jmp L192B              ; Loop
  850                           
  851   32EC   C6 78            L1961:      dec L0078              ; Check if heigth is reached
  852   32EE   F0 06                        beq L196B
  853   32F0   20 F7 32                     jsr L196C
  854   32F3   4C 8E 32                     jmp L1902
  855                           
  856   32F6   60               L196B:      rts                    ; 60
  857                           
  858                           ;------------------------------------------------
  859                           ; Calculate address $70/$71 next line
  860                           ;------------------------------------------------
  861                           
  862   32F7                    L196C:
  863   32F7   18                           clc                    ; No add $20 to $70/$71
  864   32F8   A5 70                        lda L0070
  865   32FA   69 20                        adc #$20
  866   32FC   85 70                        sta L0070
  867   32FE   A5 71                        lda L0071
  868   3300   69 00                        adc #0
  869   3302   85 71                        sta L0071
  870   3304   60                           rts
  871                           
  872                           ;------------------------------------------------
  873                           ; Calculate screen address from X,Y
  874                           ; - $70/$71 = Screenaddress 
  875                           ; - $72 = y-shift in characterblock (0-7)
  876                           ; - $73 = x-shift (0-3)
  877                           ; - $74 = tmp x
  878                           ; - $75 = tmp y
  879                           ;------------------------------------------------
  880                           
  881   3305   86 74            L1987:      stx L0074              ; Save x
  882   3307   84 75                        sty L0075              ; Save y
  883                           
  884   3309   A9 00                        lda #$00               ; Reset hb
  885   330B   85 71                        sta L0071
  886                           
  887   330D   98                           tya                    ; Invert Y 
  888   330E   49 FF                        eor #$FF
  889   3310   A8                           tay
  890   3311   38                           sec
  891   3312   E9 40                        sbc #64
  892                           
  893   3314   85 70                        sta L0070
  894   3316   06 70                        asl L0070
  895   3318   26 71                        rol L0071
  896   331A   06 70                        asl L0070
  897   331C   26 71                        rol L0071
  898   331E   06 70                        asl L0070
  899   3320   26 71                        rol L0071
  900   3322   06 70                        asl L0070
  901   3324   26 71                        rol L0071
  902   3326   06 70                        asl L0070
  903   3328   26 71                        rol L0071
  904                           
  905   332A   8A                           txa                    ; Set X-shift (0-3)
  906   332B   29 03                        and #$03
  907   332D   85 73                        sta L0073
  908                           
  909   332F   8A                           txa                    ; Set lb=x/4
  910   3330   4A                           lsr A
  911   3331   4A                           lsr A
  912   3332   18                           clc
  913   3333   65 70                        adc L0070
  914   3335   85 70                        sta L0070
  915   3337   A9 80                        lda #$80
  916   3339   65 71                        adc L0071
  917   333B   85 71                        sta L0071
  918   333D   60                           rts
  919                           
  920                           ;------------------------------------------------
  921                           ; Calculate sprite address from A int $76/$77
  922                           ; $76 = lb sprite addr
  923                           ; $77 = hb sprite addr
  924                           ; $78 = Height sprite databyte (pixels)
  925                           ; $79 = Width sprite databyte (pixels)
  926                           ; $7A = Width sprite databyte (bytes)
  927                           ;------------------------------------------------
  928                           
  929   333E   A0 00            L19D7:      ldy #$00               ; Spriteaddress = sprites + 4 * A
  930   3340   84 77                        sty L0077
  931   3342   0A                           asl A
  932   3343   26 77                        rol L0077
  933   3345   0A                           asl A
  934   3346   26 77                        rol L0077
  935   3348   69 03                        adc #<sprites
  936   334A   85 76                        sta L0076
  937   334C   A5 77                        lda L0077
  938   334E   69 2B                        adc #>sprites
  939   3350   85 77                        sta L0077
  940                           
  941   3352   B1 76                        lda (L0076),Y          ; Get width in pixels
  942   3354   85 79                        sta L0079              ; Store
  943                           
  944   3356   18                           clc                    ; Calc width in bytes = (pixels+7)/8
  945   3357   69 07                        adc #$07
  946   3359   4A                           lsr A
  947   335A   4A                           lsr A
  948   335B   4A                           lsr A
  949   335C   85 7A                        sta L007A              ; Store
  950                           
  951   335E   C8                           iny
  952   335F   B1 76                        lda (L0076),Y          ; Get height in pixels
  953   3361   85 78                        sta L0078              ; Store
  954                           
  955   3363   C8                           iny
  956   3364   B1 76                        lda (L0076),Y          ; Get lb spriteaddress
  957   3366   AA                           tax
  958   3367   C8                           iny
  959   3368   B1 76                        lda (L0076),Y          ; Get hb spriteaddress
  960   336A   86 76                        stx L0076              ; Store lb
  961   336C   85 77                        sta L0077              ; Store hb
  962   336E   60                           rts
  963                           
  964                           ;------------------------------------------------
  965                           ; Plot sprite A at X,Y (bytes)
  966                           ;------------------------------------------------
  967                           
  968   336F   48               L1A08:      pha                    ; Save spritenr
  969                           
  970   3370   8A                           txa                    ; x=x*8
  971   3371   0A                           asl A
  972   3372   0A                           asl A
  973   3373   0A                           asl A
  974   3374   AA                           tax
  975                           
  976   3375   98                           tya                    ; y=y*8
  977   3376   0A                           asl A
  978   3377   0A                           asl A
  979   3378   0A                           asl A
  980   3379   A8                           tay
  981                           
  982   337A   20 05 33                     jsr L1987              ; Calc screen address
  983   337D   68                           pla                    ; Get spritenr
  984   337E   20 3E 33                     jsr L19D7              ; Calc sprite address
  985   3381   20 8E 32                     jsr L1902              ; Plot sprite
  986   3384   60                           rts
  987                           
  988                           ;------------------------------------------------
  989                           ; Print string
  990                           ; X = lb stringaddress
  991                           ; Y = hb stringaddress
  992                           ; stringaddress: len,string
  993                           ;------------------------------------------------
  994                           
  995   3385                    L1A22:
  996   3385   86 70                    stx L0070              ; Set lb stringpointer
  997   3387   84 71                    sty L0071              ; Set hb stringpointer
  998   3389   20 67 56                 jsr PUTSTRING
  999   338C   60                       rts
 1000                           
 1001                           ;------------------------------------------------
 1002                           ; Wait for keypress 
 1003                           ;------------------------------------------------
 1004                           
 1005   338D                    L1A37:
 1006   338D   A9 28                    lda #$28     ; Key 'H'
 1007   338F   20 FF 51                 jsr scankey
 1008   3392   90 1A                    bcc L1A6A    ; No
 1009                           
 1010   3394                    L1A44:
 1011   3394   A9 28                    lda #$28     ; Key 'H'
 1012   3396   20 FF 51                 jsr scankey
 1013   3399   90 0C                    bcc L1A63    ; No
 1014                           
 1015   339B   A9 3B                    lda #$3b     ; Key ESC
 1016   339D   20 FF 51                 jsr scankey
 1017   33A0   90 05                    bcc L1A63    ; No
 1018                           
 1019   33A2   A9 80                    lda #$80     ; No key pressed
 1020   33A4   85 60                    sta L0060
 1021   33A6   60                       rts
 1022   33A7                    L1A63:
 1023   33A7   20 AE 33                 jsr L1A6A    ; Scan l,r,u,d,jump  keys
 1024   33AA   A5 60                    lda L0060
 1025   33AC   F0 E6                    beq L1A44
 1026   33AE                    L1A6A:
 1027   33AE   A9 00                    lda #$00     ; Mark no key read
 1028   33B0   85 60                    sta L0060  
 1029                           
 1030   33B2   A5 1B                    lda L001B    ; Check if joystick available
 1031   33B4   F0 08                    beq no_joy   ; If not scan keys
 1032   33B6   20 7C 57                 jsr joyget   ; Otherwise scan joystick
 1033   33B9   85 60                    sta L0060
 1034   33BB   4C DB 33                 jmp L1A80
 1035                           
 1036   33BE                    no_joy:
 1037   33BE   A9 01                    lda #$01
 1038   33C0   85 80                    sta L0080
 1039                           
 1040   33C2   A5 61                    lda L0061    ; Scan key right
 1041   33C4   20 DC 33                 jsr L1A8C
 1042   33C7   A5 62                    lda L0062    ; Scan key left
 1043   33C9   20 DC 33                 jsr L1A8C
 1044   33CC   A5 63                    lda L0063    ; Scan key down
 1045   33CE   20 DC 33                 jsr L1A8C
 1046   33D1   A5 64                    lda L0064    ; Scan key up
 1047   33D3   20 DC 33                 jsr L1A8C
 1048   33D6   A5 65                    lda L0065    ; Scan key jump
 1049   33D8   20 DC 33                 jsr L1A8C
 1050   33DB                    L1A80:
 1051   33DB   60                       rts
 1052   33DC                    L1A8C:
 1053   33DC   20 FF 51                 jsr scankey
 1054   33DF   90 06                    bcc L1A9D    ; No
 1055                           
 1056   33E1   A5 60                    lda L0060    ; Mark key read
 1057   33E3   05 80                    ora L0080
 1058   33E5   85 60                    sta L0060
 1059   33E7                    L1A9D:
 1060   33E7   06 80                    asl L0080
 1061   33E9   60                       rts
 1062                           
 1063                           ;------------------------------------------------
 1064                           ; Calculate random nr in $66
 1065                           ;------------------------------------------------
 1066                           
 1067   33EA   A5 66            L1AA0:      lda L0066
 1068   33EC   29 48                        and #$48
 1069   33EE   69 38                        adc #$38
 1070   33F0   0A                           asl A
 1071   33F1   0A                           asl A
 1072   33F2   26 69                        rol L0069
 1073   33F4   26 68                        rol L0068
 1074   33F6   26 67                        rol L0067
 1075   33F8   26 66                        rol L0066
 1076   33FA   60                           rts
 1077                           
 1078                           ;------------------------------------------------
 1079                           ; Update score in A to score byte X
 1080                           ;------------------------------------------------
 1081                           
 1082   33FB   A0 C0            L1AB1:      ldy #red               ; Color magenta
 1083   33FD   84 7F                        sty L007F
 1084                           
 1085   33FF   B4 28                        ldy L0028,X            ; Get score digit
 1086                           
 1087   3401   18                           clc                    ; Add A to scoredigit
 1088   3402   75 28                        adc L0028,X
 1089   3404   E0 03                        cpx #$03
 1090   3406   D0 02                        bne L1AC0
 1091                           
 1092   3408   E6 3E                        inc L003E              ; E6 3E
 1093   340A   C9 0A            L1AC0:      cmp #$0A               ; Scoredigit >10?
 1094   340C   90 0E                        bcc L1AD2              ; No
 1095                           
 1096   340E   38                           sec                    ; Yes
 1097   340F   E9 0A                        sbc #$0A
 1098   3411   95 28                        sta L0028,X            ; Store Scoredigit MOD 10
 1099   3413   20 1E 34                     jsr L1AD4              ; Print digit
 1100                           
 1101   3416   A9 01                        lda #$01
 1102   3418   CA                           dex                    ; Repeat until x=0
 1103   3419   10 E0                        bpl L1AB1
 1104   341B   60                           rts
 1105                           
 1106   341C   95 28            L1AD2:      sta L0028,X            ; Store Scoredigit
 1107                           
 1108   341E   E0 02            L1AD4:      cpx #$02               ; X>2
 1109   3420   B0 01                        bcs L1AD9              ; No
 1110   3422   60                           rts                    ; Yes
 1111                           
 1112   3423   85 8C            L1AD9:      sta L008C              ; Save new scoredigit
 1113   3425   86 8D                        stx L008D              ; Save digit nr
 1114   3427   84 8E                        sty L008E              ; Save old scoredigit
 1115                           
 1116   3429   A5 3F                        lda L003F              ; Get startposition scoredigit
 1117   342B   18                           clc                    ; Add 4 for every position
 1118   342C   69 04            L1AE2:      adc #$04
 1119   342E   CA                           dex
 1120   342F   10 FB                        bpl L1AE2
 1121                           
 1122   3431   85 8B                        sta L008B              ; Save position digit
 1123   3433   AA                           tax                    ; Set x-pos
 1124   3434   A5 8E                        lda L008E              ; Get old scoredigit
 1125   3436   A0 BE                        ldy #190               ; Set y-pos=190
 1126   3438   20 47 34                     jsr L1AFD              ; Erase number
 1127                           
 1128   343B   A5 8C                        lda L008C              ; Get new scoredigit
 1129   343D   A6 8B                        ldx L008B              ; Set x-pos
 1130   343F   A0 BE                        ldy #190               ; Set y-pos=190
 1131   3441   20 47 34                     jsr L1AFD              ; Print number
 1132   3444   A6 8D                        ldx L008D              ; Get digit nr
 1133   3446   60                           rts
 1134                           
 1135                           ;------------------------------------------------
 1136                           ; Print number in A at position X,Y
 1137                           ;------------------------------------------------
 1138                           
 1139   3447   48               L1AFD:      pha                    ; Save spritenr
 1140   3448   20 05 33                     jsr L1987              ; Calc screen address
 1141   344B   68                           pla                    ; Get spritenr
 1142   344C   18                           clc
 1143   344D   69 1F                        adc #$1F               ; Point to number sprite
 1144   344F   20 3E 33                     jsr L19D7              ; Calc sprite address
 1145   3452   20 C4 34                     jsr L1B82              ; Plot sprite
 1146   3455   60                           rts
 1147                           
 1148                           ;------------------------------------------------
 1149                           ; Copy screen $8000-$9800 into buffer $6000-$7800
 1150                           ;------------------------------------------------
 1151                           
 1152   3456                    L1B0C:
 1153   3456   A0 00                        ldy #$00
 1154   3458   84 70                        sty L0070
 1155   345A   84 7B                        sty L007B
 1156   345C   A9 80                        lda #$80
 1157   345E   85 71                        sta L0071
 1158   3460   A9 60                        lda #$60
 1159   3462   85 7C                        sta L007C
 1160   3464   B1 70            L1B1A:      lda (L0070),Y          ; Read $8000-$9800
 1161   3466   91 7B                        sta (L007B),Y          ; Save $6000-$7800
 1162   3468   C8                           iny
 1163   3469   D0 F9                        bne L1B1A
 1164   346B   E6 7C                        inc L007C
 1165   346D   E6 71                        inc L0071
 1166   346F   A5 71                        lda L0071
 1167   3471   C9 98                        cmp #$98
 1168   3473   D0 EF                        bne L1B1A
 1169   3475   60                           rts
 1170                           
 1171                           ;------------------------------------------------
 1172                           ; Erase sprite by copying background to screen
 1173                           ;------------------------------------------------
 1174                           
 1175   3476   20 8F 34         L1B2C:      jsr L1B56              ; Point background buffer
 1176                           
 1177   3479   A4 7A                        ldy L007A
 1178   347B   C8                       iny
 1179   347C   C8                       iny
 1180   347D   B1 7B            L1B37:      lda (L007B),Y          ; Load background
 1181   347F   91 70                        sta (L0070),Y          ; Plot over screen
 1182   3481   88                           dey
 1183   3482   10 F9                        bpl L1B37
 1184                           
 1185   3484   C6 78            L1B4B:      dec L0078
 1186   3486   F0 06                        beq L1B55
 1187   3488   20 F7 32                     jsr L196C              ; Calculate address next line
 1188   348B   4C 76 34                     jmp L1B2C
 1189   348E   60               L1B55:      rts
 1190                           
 1191                           ;------------------------------------------------
 1192                           ; Point to background buffer $7B/$7C
 1193                           ;------------------------------------------------
 1194                           
 1195   348F   A5 70            L1B56:      lda L0070              ; Get screen address
 1196   3491   85 7B                        sta L007B
 1197   3493   A5 71                        lda L0071
 1198   3495   38                           sec
 1199   3496   E9 20                        sbc #$20               ; Background = Screen - $2000
 1200   3498   85 7C                        sta L007C
 1201   349A   60                           rts
 1202                           
 1203                           ;------------------------------------------------
 1204                           ; Plot egg or seed
 1205                           ;------------------------------------------------
 1206                           
 1207   349B                    L1B62:
 1208   349B   8A                           txa                    ; x=x*8
 1209   349C   0A                           asl A
 1210   349D   0A                           asl A
 1211   349E   0A                           asl A
 1212   349F   AA                           tax
 1213                           
 1214   34A0   98                           tya                    ; y=y*8
 1215   34A1   0A                           asl A
 1216   34A2   0A                           asl A
 1217   34A3   0A                           asl A
 1218   34A4   A8                           tay
 1219   34A5   20 05 33                     jsr L1987              ; Calc screen address
 1220                           
 1221   34A8   20 8F 34                     jsr L1B56              ; Calc dest address
 1222   34AB   A2 02                        ldx #$02
 1223   34AD   A0 00                        ldy #0
 1224   34AF                    L1B7A:
 1225   34AF   A9 00                        lda #$00
 1226   34B1   91 70                        sta (L0070),Y
 1227   34B3   91 7B                        sta (L007B),Y
 1228   34B5   98                           tya
 1229   34B6   18                           clc
 1230   34B7   69 20                        adc #$20
 1231   34B9   A8                           tay
 1232   34BA   D0 F3                        bne L1B7A
 1233   34BC   E6 70                        inc L0070
 1234   34BE   E6 7B                        inc L007B
 1235   34C0   CA                           dex
 1236   34C1   D0 EC                        bne L1B7A
 1237   34C3   60                           rts
 1238                           
 1239                           ;------------------------------------------------
 1240                           ; Invert sprite
 1241                           ;------------------------------------------------
 1242                           
 1243   34C4                    L1B82:
 1244   34C4   A9 45                        lda #$45               ; Change OR in EOR
 1245   34C6   8D BE 32                     sta L1932              ; in plot routine
 1246   34C9   20 8E 32                     jsr L1902              ; Invert sprite
 1247   34CC   A9 05                        lda #$05               ; Change EOR in OR
 1248   34CE   8D BE 32                     sta L1932              ; in plot routine
 1249   34D1   60                           rts
 1250                           
 1251                           ;------------------------------------------------
 1252                           ; Read/write interval timer increments 100 times/sec
 1253                           ; Set framerate on 30000 usec
 1254                           ;------------------------------------------------
 1255                           
 1256   34D2                    L1B90:
 1257   34D2   AD 09 B8                 lda $b809
 1258   34D5   10 FB                    bpl L1B90
 1259   34D7   A9 30                    lda #<30000
 1260   34D9   8D 08 B8                 sta $b808
 1261   34DC   A9 75                    lda #>30000
 1262   34DE   8D 09 B8                 sta $b809
 1263                           
 1264   34E1   60                       rts
 1265                           
 1266                           ;------------------------------------------------
 1267                           ; Draw level
 1268                           ;------------------------------------------------
 1269                           
 1270   34E2                    L1BB3:
 1271   34E2   20 E2 51                 jsr clear4
 1272                           
 1273   34E5   20 6B 36                     jsr L1D3E              ; Draw score board
 1274                           
 1275   34E8   A5 5C                        lda L005C              ; Get address leveldata from pointertable at $0cc0
 1276   34EA   0A                           asl A
 1277   34EB   A8                           tay
 1278   34EC   B9 C6 4D                     lda L34C0,Y
 1279   34EF   85 51                        sta L0051
 1280   34F1   C8                           iny
 1281   34F2   B9 C6 4D                     lda L34C0,Y
 1282   34F5   85 52                        sta L0052
 1283                           
 1284   34F7   A0 00                        ldy #$00
 1285   34F9   B1 51                        lda (L0051),Y          ; Read nr of walls to plot (3 bytes per plot)
 1286   34FB   85 53                        sta L0053              ; Save at $53
 1287   34FD   C8                           iny
 1288   34FE   B1 51                        lda (L0051),Y          ; Read nr of ladders to plot (3 bytes per plot)
 1289   3500   85 54                        sta L0054              ; Save at $54
 1290   3502   C8                           iny
 1291   3503   B1 51                        lda (L0051),Y          ; Read elevator flag
 1292   3505   85 55                        sta L0055              ; Save at $55
 1293   3507   C8                           iny
 1294   3508   B1 51                        lda (L0051),Y          ; Read nr of seed to plot (2 bytes per plot)
 1295   350A   85 56                        sta L0056              ; Save at $56
 1296   350C   C8                           iny
 1297   350D   B1 51                        lda (L0051),Y          ; Read nr of birds
 1298   350F   85 57                        sta L0057              ; Save at $57
 1299                           
 1300   3511   A9 00                        lda #$00               ; Fill $600-$7FF with 0
 1301   3513   AA                           tax
 1302   3514   9D 00 06         L1BE7:      sta L0600,X
 1303   3517   9D 00 07                     sta L0700,X
 1304   351A   CA                           dex
 1305   351B   D0 F7                        bne L1BE7
 1306                           
 1307                           ; Plot walls  ---------------------------------------------------
 1308   351D   A9 C0                        lda #blue               ; Color green
 1309   351F   85 7F                        sta L007F
 1310                           
 1311   3521   A5 53                        lda L0053              ; Nr of wall sprites
 1312   3523   85 8A                        sta L008A
 1313                           
 1314   3525   84 89                        sty L0089              ; Save leveldata pointer
 1315                           
 1316   3527   A4 89            L1BFA:      ldy L0089              ; Get leveldata pointer
 1317   3529   C8                           iny
 1318   352A   B1 51                        lda (L0051),Y
 1319   352C   85 8B                        sta L008B              ; Sprite Y
 1320   352E   C8                           iny
 1321   352F   B1 51                        lda (L0051),Y
 1322   3531   85 8C                        sta L008C              ; Sprite X-start
 1323   3533   C8                           iny
 1324   3534   B1 51                        lda (L0051),Y          ; Sprite X-end
 1325   3536   38                           sec
 1326   3537   E5 8C                        sbc L008C
 1327   3539   85 8D                        sta L008D              ; Nr of sprites
 1328   353B   84 89                        sty L0089              ; Save leveldata pointer
 1329                           
 1330   353D   A9 01            L1C10:      lda #$01               ; Wall sprite
 1331   353F   A4 8B                        ldy L008B
 1332   3541   A6 8C                        ldx L008C
 1333   3543   20 C8 3D                     jsr L249F              ; Copy into background buffer
 1334                           
 1335   3546   A6 8C                        ldx L008C              ; Get x-pos 
 1336   3548   20 6F 33                     jsr L1A08              ; Plot sprite
 1337   354B   E6 8C                        inc L008C              ; Next x-pos screen
 1338   354D   C6 8D                        dec L008D              ; Decrement col-counter
 1339   354F   10 EC                        bpl L1C10              ; Repeat if not last column
 1340   3551   C6 8A                        dec L008A              ; Decrement row-counter
 1341   3553   D0 D2                        bne L1BFA              ; Repeat if not last row
 1342                           
 1343                           ; Plot ladders ----------------------------------------------------
 1344   3555   A9 C0                        lda #red               ; Color magenta
 1345   3557   85 7F                        sta L007F
 1346                           
 1347   3559   A5 54                        lda L0054              ; Nr of ladders
 1348   355B   85 8A                        sta L008A
 1349                           
 1350   355D   A4 89            L1C30:      ldy L0089              ; Get leveldata pointer
 1351   355F   C8                           iny
 1352   3560   B1 51                        lda (L0051),Y
 1353   3562   85 8B                        sta L008B              ; Sprite Y
 1354   3564   C8                           iny
 1355   3565   B1 51                        lda (L0051),Y
 1356   3567   85 8C                        sta L008C              ; Sprite X-start
 1357   3569   C8                           iny
 1358   356A   B1 51                        lda (L0051),Y          ; Sprite X-end
 1359   356C   38                           sec
 1360   356D   E5 8C                        sbc L008C
 1361   356F   85 8D                        sta L008D              ; Nr of sprites
 1362   3571   84 89                        sty L0089
 1363                           
 1364   3573   A6 8B            L1C46:      ldx L008B              ; Get x-pos
 1365   3575   A4 8C                        ldy L008C              ; Get y-pos
 1366   3577   20 B0 3D                     jsr L2487              ; Get background nr
 1367   357A   F0 07                        beq L1C56              ; F0 07
 1368   357C   A6 8B                        ldx L008B              ; A6 8B
 1369   357E   20 9B 34                     jsr L1B62              ; 20 62 1B
 1370                           
 1371   3581   A9 01                        lda #$01
 1372   3583   09 02            L1C56:      ora #$02               ; Set ladder
 1373   3585   A6 8B                        ldx L008B
 1374   3587   A4 8C                        ldy L008C
 1375   3589   20 C8 3D                     jsr L249F              ; Copy into background buffer
 1376                           
 1377   358C   A9 02                        lda #$02               ; Ladder sprite
 1378   358E   A6 8B                        ldx L008B
 1379   3590   A4 8C                        ldy L008C
 1380   3592   20 6F 33                     jsr L1A08              ; Plot sprite
 1381   3595   E6 8C                        inc L008C              ; Point to 1 position up
 1382   3597   C6 8D                        dec L008D              ; Decrement sprite counter
 1383   3599   10 D8                        bpl L1C46
 1384   359B   C6 8A                        dec L008A              ; Next ladder
 1385   359D   D0 BE                        bne L1C30
 1386                           
 1387                           ; Plot elevators ------------------------------------------------
 1388   359F   A5 55                        lda L0055              ; Get elevator flag
 1389   35A1   F0 0C                        beq L1C82              ; No elevator, skip
 1390   35A3   A4 89                        ldy L0089              ; Get x-pos
 1391   35A5   C8                           iny
 1392   35A6   B1 51                        lda (L0051),Y
 1393   35A8   84 89                        sty L0089              ; Save x-pos (bytes)
 1394   35AA   0A                           asl A
 1395   35AB   0A                           asl A
 1396   35AC   0A                           asl A
 1397   35AD   85 58                        sta L0058              ; Save x-pos (pixels)
 1398                           
 1399                           ; Plot eggs -----------------------------------------------------
 1400   35AF   A9 C0            L1C82:      lda #yellow               ; Color yellow
 1401   35B1   85 7F                        sta L007F
 1402                           
 1403   35B3   A9 00                        lda #$00
 1404   35B5   85 8A                        sta L008A              ; Reset egg counter
 1405   35B7   85 39                        sta L0039              ; 85 39
 1406   35B9   A5 4E                        lda L004E              ; Get leveldatapointer
 1407   35BB   85 88                        sta L0088              ; Save leveldatapointer
 1408   35BD   A4 89            L1C90:      ldy L0089
 1409   35BF   C8                           iny
 1410   35C0   B1 51                        lda (L0051),Y          ; Get x-pos
 1411   35C2   85 8B                        sta L008B
 1412   35C4   C8                           iny
 1413   35C5   B1 51                        lda (L0051),Y          ; Get y-pos
 1414   35C7   85 8C                        sta L008C
 1415   35C9   84 89                        sty L0089              ; Save leveldatapointer
 1416                           
 1417   35CB   A6 88                        ldx L0088              ; Load buffer pointer
 1418   35CD   BD 10 05                     lda L0510,X            ; Load background
 1419   35D0   D0 1A                        bne L1CBF 
 1420                           
 1421   35D2   A5 8A                        lda L008A              ; Marker=Egg counter *16
 1422   35D4   0A                           asl A
 1423   35D5   0A                           asl A
 1424   35D6   0A                           asl A
 1425   35D7   0A                           asl A
 1426   35D8   69 04                        adc #$04               ; First egg $04,$14,$24..
 1427   35DA   A6 8B                        ldx L008B
 1428   35DC   A4 8C                        ldy L008C
 1429   35DE   20 C8 3D                     jsr L249F              ; Copy into background buffer
 1430                           
 1431   35E1   A9 03                        lda #$03               ; Egg sprite
 1432   35E3   A6 8B                        ldx L008B
 1433   35E5   A4 8C                        ldy L008C
 1434   35E7   20 6F 33                     jsr L1A08              ; Plot sprite
 1435   35EA   E6 39                        inc L0039
 1436                           
 1437   35EC   E6 88            L1CBF:      inc L0088
 1438   35EE   E6 8A                        inc L008A              ; Inc egg counter
 1439   35F0   A5 8A                        lda L008A              ; Get egg counter
 1440   35F2   C9 0C                        cmp #$0C               ; Last egg nr 12?
 1441   35F4   90 C7                        bcc L1C90
 1442                           
 1443                           ; Plot seed -----------------------------------------------------
 1444   35F6   A9 C0                        lda #red               ; Color magenta
 1445   35F8   85 7F                        sta L007F
 1446                           
 1447   35FA   A9 00                        lda #$00
 1448   35FC   85 8A                        sta L008A
 1449   35FE   A5 4E                        lda L004E
 1450   3600   85 88                        sta L0088
 1451   3602   A4 89            L1CD5:      ldy L0089
 1452   3604   C8                           iny
 1453   3605   B1 51                        lda (L0051),Y          ; Read x-pos
 1454   3607   85 8B                        sta L008B
 1455   3609   C8                           iny
 1456   360A   B1 51                        lda (L0051),Y          ; Read y-pos
 1457   360C   85 8C                        sta L008C
 1458   360E   84 89                        sty L0089
 1459   3610   A6 88                        ldx L0088
 1460                           
 1461   3612   BD 20 05                     lda L0520,X
 1462   3615   D0 18                        bne L1D02
 1463                           
 1464   3617   A5 8A                        lda L008A              ; Number seed as $08,$18,$28 ....
 1465   3619   0A                           asl A
 1466   361A   0A                           asl A
 1467   361B   0A                           asl A
 1468   361C   0A                           asl A
 1469   361D   69 08                        adc #$08
 1470   361F   A6 8B                        ldx L008B
 1471   3621   A4 8C                        ldy L008C
 1472   3623   20 C8 3D                     jsr L249F              ; Copy into background buffer
 1473                           
 1474   3626   A9 04                        lda #$04               ; Seed sprite
 1475   3628   A6 8B                        ldx L008B
 1476   362A   A4 8C                        ldy L008C
 1477   362C   20 6F 33                     jsr L1A08              ; Plot sprite
 1478                           
 1479   362F   E6 88            L1D02:      inc L0088
 1480   3631   E6 8A                        inc L008A
 1481   3633   A5 8A                        lda L008A
 1482   3635   C5 56                        cmp L0056
 1483   3637   90 C9                        bcc L1CD5
 1484                           
 1485                           ; Plot duck cage ------------------------------------------------
 1486   3639   A9 C0                        lda #yellow            ; Plot duck cage in yellow
 1487   363B   85 7F                        sta L007F
 1488                           
 1489   363D   A2 00                        ldx #$00               ; X=0
 1490   363F   A0 A9                        ldy #169               ; Y=220
 1491   3641   20 05 33                     jsr L1987
 1492   3644   A2 13                        ldx #$13               ; Duck cage with duck
 1493   3646   A5 35                        lda L0035              ; Check for cage with or without duck
 1494   3648   F0 01                        beq L1D1E
 1495   364A   E8                           inx                    ; Duck cage without duck
 1496   364B   8A               L1D1E:      txa
 1497   364C   20 3E 33                     jsr L19D7
 1498   364F   20 8E 32                     jsr L1902              ; Plot cage
 1499                           
 1500                           ; Copy bird data into buffer------------------------------------
 1501   3652   A4 89                        ldy L0089              ; Get leveldatapointer
 1502   3654   A2 00                        ldx #$00
 1503   3656   C8               L1D29:      iny                    ; Copy birddata into buffer
 1504   3657   B1 51                        lda (L0051),Y          ; Get x-pos
 1505   3659   9D 0A 04                     sta L040A,X            ; Store x-pos
 1506   365C   C8                           iny
 1507   365D   B1 51                        lda (L0051),Y          ; Get y-pos
 1508   365F   9D 0F 04                     sta L040F,X            ; Store y-pos
 1509   3662   E8                           inx
 1510   3663   E0 05                        cpx #$05
 1511   3665   90 EF                        bcc L1D29
 1512                           
 1513   3667   20 56 34                     jsr L1B0C              ; Copy screen into buffer
 1514   366A   60                           rts                    ; 60
 1515                           
 1516                           ;------------------------------------------------
 1517                           ; Draw score board
 1518                           ;------------------------------------------------
 1519                           
 1520                           ; SCORE ------------------------------------------------
 1521                           
 1522   366B   A9 C0            L1D3E:      lda #red               ; Color magenta
 1523   366D   85 7F                        sta L007F
 1524                           
 1525   366F   A2 00                        ldx #$00               ; Print 'SCORE' at 0,191
 1526   3671   A0 BF                        ldy #191
 1527   3673   20 05 33                     jsr L1987              ; Calc screen address
 1528   3676   A9 29                        lda #$29               ; Sprite $29
 1529   3678   20 3E 33                     jsr L19D7              ; Calc sprite address
 1530   367B   20 8E 32                     jsr L1902              ; Plot sprite
 1531                           
 1532   367E   A6 5D                        ldx L005D              ; Calculate pos score
 1533   3680   A9 00                        lda #$00
 1534   3682   18                           clc
 1535   3683   69 1A            L1D56:      adc #26
 1536   3685   CA                           dex
 1537   3686   10 FB                        bpl L1D56
 1538   3688   38                           sec
 1539   3689   E9 02                        sbc #2
 1540   368B   AA                           tax                    ; x=player*26-2
 1541   368C   A0 BF                        ldy #191
 1542   368E   20 05 33                     jsr L1987
 1543   3691   A9 2A                        lda #$2A               ; Invert playerscore at x,191
 1544   3693   20 3E 33                     jsr L19D7
 1545   3696   20 8E 32                     jsr L1902
 1546                           
 1547   3699   A2 00                        ldx #$00               ; Print all player scores
 1548   369B   86 88                        stx L0088
 1549   369D   20 97 37         L1D70:      jsr L1E6A
 1550   36A0   E6 88                        inc L0088
 1551   36A2   A6 88                        ldx L0088
 1552   36A4   E4 5E                        cpx L005E              ; Max players
 1553   36A6   90 F5                        bcc L1D70
 1554                           
 1555                           ; PLAYER ------------------------------------------------
 1556                           
 1557   36A8   A9 C0                        lda #red               ; Color magenta
 1558   36AA   85 7F                        sta L007F
 1559                           
 1560   36AC   A2 00                        ldx #$00               ; Print 'Player' at 0,179
 1561   36AE   A0 B3                        ldy #179
 1562   36B0   20 05 33                     jsr L1987
 1563   36B3   A9 2B                        lda #$2B
 1564   36B5   20 3E 33                     jsr L19D7
 1565   36B8   20 8E 32                     jsr L1902
 1566                           
 1567   36BB   A2 19                        ldx #25               ; Print current playernr at 27,178
 1568   36BD   A0 B2                        ldy #178
 1569   36BF   20 05 33                     jsr L1987
 1570   36C2   A5 5D                        lda L005D
 1571   36C4   18                           clc
 1572   36C5   69 20                        adc #$20
 1573   36C7   20 3E 33                     jsr L19D7
 1574   36CA   20 C4 34                     jsr L1B82
 1575                           
 1576                           ; LEVEL ------------------------------------------------
 1577                           
 1578   36CD   A2 1E                        ldx #30               ; Print 'Level' at 34,179
 1579   36CF   A0 B3                        ldy #179
 1580   36D1   20 05 33                     jsr L1987
 1581   36D4   A9 2C                        lda #$2C
 1582   36D6   20 3E 33                     jsr L19D7
 1583   36D9   20 8E 32                     jsr L1902
 1584                           
 1585   36DC   A9 00                        lda #$00               ; Print levelnr xxx at 59,178
 1586   36DE   85 8B                        sta L008B
 1587   36E0   85 8C                        sta L008C
 1588                           
 1589   36E2   A6 50                        ldx L0050              ; Get levelnr
 1590   36E4   E8                           inx
 1591   36E5   86 8D                        stx L008D
 1592   36E7   A5 8D                        lda L008D
 1593                           
 1594   36E9   A2 00                        ldx #$00
 1595   36EB   C9 0A            L1DBE:      cmp #$0A
 1596   36ED   90 07                        bcc L1DC9
 1597   36EF   38                           sec
 1598   36F0   E9 0A                        sbc #$0A
 1599   36F2   E8                           inx
 1600   36F3   4C EB 36                     jmp L1DBE
 1601                           
 1602   36F6   85 8D            L1DC9:      sta L008D              ; Save digit1
 1603   36F8   8A                           txa
 1604   36F9   A2 00                        ldx #$00
 1605   36FB   C9 0A            L1DCE:      cmp #$0A
 1606   36FD   90 07                        bcc L1DD9
 1607   36FF   38                           sec
 1608   3700   E9 0A                        sbc #$0A
 1609   3702   E8                           inx
 1610   3703   4C FB 36                     jmp L1DCE
 1611                           
 1612   3706   85 8C            L1DD9:      sta L008C              ; Save digit2
 1613   3708   86 8B                        stx L008B              ; Save digit3
 1614   370A                     
 1615   370A   A5 8B                        lda L008B              ; Print digit3 at 55,178
 1616   370C   F0 07                        beq L1DE8              ; Skip if 0
 1617   370E   A2 2F                        ldx #47
 1618   3710   A0 B2                        ldy #178
 1619   3712   20 47 34                     jsr L1AFD
 1620                           
 1621   3715   A5 8C            L1DE8:      lda L008C              ; Print digit2 at 59,178
 1622   3717   A2 33                        ldx #51
 1623   3719   A0 B2                        ldy #178
 1624   371B   20 47 34                     jsr L1AFD
 1625                           
 1626   371E   A5 8D                        lda L008D              ; Print digit1 at 63,178
 1627   3720   A2 37                        ldx #55
 1628   3722   A0 B2                        ldy #178
 1629   3724   20 47 34                     jsr L1AFD
 1630                           
 1631                           ; BONUS ------------------------------------------------
 1632                           
 1633   3727   A2 3C                        ldx #60               ; Print 'Bonus' at 78,179
 1634   3729   A0 B3                        ldy #179
 1635   372B   20 05 33                     jsr L1987
 1636   372E   A9 2D                        lda #$2D
 1637   3730   20 3E 33                     jsr L19D7
 1638   3733   20 8E 32                     jsr L1902
 1639                           
 1640   3736   A5 3A            L1E09:      lda L003A              ; Print digit1 at 102,178
 1641   3738   A2 52                        ldx #82
 1642   373A   A0 B2                        ldy #178
 1643   373C   20 47 34                     jsr L1AFD
 1644                           
 1645   373F   A5 3B                        lda L003B              ; Print digit2 at 107,178
 1646   3741   A2 56                        ldx #86
 1647   3743   A0 B2                        ldy #178
 1648   3745   20 47 34                     jsr L1AFD
 1649                           
 1650   3748   A5 3C                        lda L003C              ; Print digit3 at 112,178
 1651   374A   A2 5A                        ldx #90
 1652   374C   A0 B2                        ldy #178
 1653   374E   20 47 34                     jsr L1AFD
 1654                           
 1655   3751   A9 00                        lda #$00               ; Print 0 at 117,178
 1656   3753   A2 5E                        ldx #94
 1657   3755   A0 B2                        ldy #178
 1658   3757   20 47 34                     jsr L1AFD
 1659                           
 1660                           ; TIME ------------------------------------------------
 1661                           
 1662   375A   A2 63            L1E2D:      ldx #99               ; Print 'Time' at 126,179
 1663   375C   A0 B3                        ldy #179
 1664   375E   20 05 33                     jsr L1987
 1665   3761   A9 2E                        lda #$2E
 1666   3763   20 3E 33                     jsr L19D7
 1667   3766   20 8E 32                     jsr L1902
 1668                           
 1669   3769   A5 4D                        lda L004D              ; Time depending of levelnr
 1670   376B   4A                           lsr A
 1671   376C   C9 08                        cmp #$08
 1672   376E   90 02                        bcc L1E45
 1673   3770   A9 08                        lda #$08
 1674   3772   49 FF            L1E45:      eor #$FF
 1675   3774   38                           sec
 1676   3775   69 09                        adc #$09
 1677   3777   85 1D                        sta L001D              ; Print Digit1 at 145,178
 1678   3779   A2 74                        ldx #116
 1679   377B   A0 B2                        ldy #178
 1680   377D   20 47 34                     jsr L1AFD
 1681                           
 1682   3780   A9 00                        lda #$00
 1683   3782   85 1E                        sta L001E              ; Print digit2 at 150,178
 1684   3784   A2 78                        ldx #120
 1685   3786   A0 B2                        ldy #178
 1686   3788   20 47 34                     jsr L1AFD
 1687                           
 1688   378B   A9 00                        lda #$00
 1689   378D   85 1F                        sta L001F              ; Print digit3 at 155,178
 1690   378F   A2 7C                        ldx #124
 1691   3791   A0 B2                        ldy #178
 1692   3793   20 47 34                     jsr L1AFD
 1693                           
 1694   3796   60                           rts
 1695                           
 1696                           ;------------------------------------------------
 1697                           ; Print score + lives sprites
 1698                           ;------------------------------------------------
 1699                           
 1700   3797   A9 00            L1E6A:      lda #$00               ; Calc player*$26
 1701   3799   18                           clc
 1702   379A   69 1A            L1E6D:      adc #26
 1703   379C   CA                           dex
 1704   379D   10 FB                        bpl L1E6D
 1705   379F   38                           sec
 1706   37A0   E9 02                        sbc #$02
 1707   37A2   85 8B                        sta L008B              ; Save player*$26-2
 1708                           
 1709   37A4   A9 C0                        lda #red               ; Color magenta
 1710   37A6   85 7F                        sta L007F
 1711                           
 1712   37A8   A5 88                        lda L0088              ; Get playernr
 1713   37AA   0A                           asl A
 1714   37AB   0A                           asl A
 1715   37AC   0A                           asl A
 1716   37AD   0A                           asl A
 1717   37AE   0A                           asl A
 1718   37AF   0A                           asl A
 1719   37B0   AA                           tax                    ; Calc offest
 1720   37B1   E8                           inx                    ; Inc offset
 1721   37B2   E8                           inx                    ; Inc offset
 1722   37B3   86 8D                        stx L008D              ; Save offset
 1723                           
 1724   37B5   A6 8B                        ldx L008B
 1725   37B7   E8                           inx
 1726   37B8   86 8C                        stx L008C              ; x-pos
 1727                           
 1728   37BA   A9 06                        lda #$06               ; Nr of digits
 1729   37BC   85 8E                        sta L008E
 1730                           
 1731   37BE   A6 8D            L1E91:      ldx L008D
 1732   37C0   BD 00 05                     lda L0500,X            ; Get digit
 1733                           
 1734   37C3   A6 8C                        ldx L008C              ; Get x-pos
 1735   37C5   A0 BE                        ldy #190               ; Set y-pos
 1736   37C7   20 47 34                     jsr L1AFD              ; Print digit
 1737                           
 1738   37CA   A5 8C                        lda L008C              ; xpos + 5
 1739   37CC   18                           clc
 1740   37CD   69 04                        adc #$04
 1741   37CF   85 8C                        sta L008C
 1742                           
 1743   37D1   E6 8D                        inc L008D              ; Inc offset
 1744                           
 1745   37D3   C6 8E                        dec L008E              ; Next digit
 1746   37D5   D0 E7                        bne L1E91
 1747                           
 1748   37D7   A9 C0                        lda #yellow            ; Color yellow
 1749   37D9   85 7F                        sta L007F
 1750                           
 1751   37DB   A6 88                        ldx L0088              ; Get playernr
 1752   37DD   B5 20                        lda L0020,X            ; Get lives
 1753   37DF   F0 29                        beq L1EDD              ; Skip if 0
 1754   37E1   C9 06                        cmp #$06
 1755   37E3   90 02                        bcc L1EBA              ; Limit to 6
 1756   37E5   A9 06                        lda #$06
 1757   37E7   85 8E            L1EBA:      sta L008E
 1758                           
 1759   37E9   A5 8B                        lda L008B              ; Get sprite pos
 1760   37EB   85 8C                        sta L008C
 1761                           
 1762   37ED   A6 8C            L1EC0:      ldx L008C              ; Get x-pos
 1763   37EF   A0 B6                        ldy #182               ; Get y-pos
 1764   37F1   20 05 33                     jsr L1987              ; Calc screen addr
 1765   37F4   A9 2F                        lda #$2F               ; Lives sprite
 1766   37F6   20 3E 33                     jsr L19D7              ; Calc sprite addr
 1767   37F9   20 8E 32                     jsr L1902              ; Plot sprite
 1768   37FC   C6 8E                        dec L008E              ; Next life
 1769   37FE   F0 0A                        beq L1EDD              ; if last, end
 1770   3800   A5 8C                        lda L008C              ; xpos + 4
 1771   3802   18                           clc
 1772   3803   69 04                        adc #$04
 1773   3805   85 8C                        sta L008C
 1774   3807   4C ED 37                     jmp L1EC0
 1775   380A   60               L1EDD:      rts
 1776                           
 1777                           ;------------------------------------------------
 1778                           ; Update man
 1779                           ;------------------------------------------------
 1780                           
 1781   380B   A9 00            L1EDE:      lda #$00
 1782   380D   85 46                        sta L0046              ; Reset x-dir
 1783   380F   85 47                        sta L0047              ; Reset y-dir
 1784                           
 1785   3811   A5 60                        lda L0060              ; Read key read flag
 1786   3813   4A                           lsr A
 1787   3814   90 02                        bcc L1EEB
 1788   3816   E6 46                        inc L0046              ; Key right pressed
 1789                           
 1790   3818   4A               L1EEB:      lsr A
 1791   3819   90 02                        bcc L1EF0
 1792   381B   C6 46                        dec L0046              ; Key left pressed
 1793                           
 1794   381D   4A               L1EF0:      lsr A
 1795   381E   90 02                        bcc L1EF5
 1796   3820   C6 47                        dec L0047              ; Key down pressed
 1797                           
 1798   3822   4A               L1EF5:      lsr A
 1799   3823   90 02                        bcc L1EFA
 1800   3825   E6 47                        inc L0047              ; Key up pressed
 1801   3827                    L1EFA:
 1802   3827   06 47                        asl L0047              ; Y-dir x 2
 1803                           
 1804   3829   A5 49                        lda L0049              ; Get movement man
 1805   382B   F0 16                        beq L1F16              ; Horizontal
 1806                           
 1807   382D   C9 02                        cmp #$02               ; Jump?
 1808   382F   D0 03                        bne L1F07              ; No
 1809   3831   4C 29 39                     jmp L1FFC              ; Yes
 1810                           
 1811   3834   B0 03            L1F07:      bcs L1F0C              ; Jumpstep=1?
 1812   3836   4C CA 38                     jmp L1F9D              ; Yes
 1813                           
 1814   3839   C9 03            L1F0C:      cmp #$03               ; Fall?
 1815   383B   D0 03                        bne L1F13              ; No
 1816   383D   4C 91 3A                     jmp L215E              ; Yes
 1817                           
 1818   3840                    L1F13:
 1819   3840   4C EC 3A                     jmp L21B9              ; Scan key jumped
 1820                           
 1821   3843                    L1F16:
 1822   3843   A5 60                        lda L0060
 1823   3845   29 10                        and #$10
 1824   3847   F0 03                        beq L1F1F
 1825   3849   4C 7E 3A                     jmp L214B              ; Key jump pressed
 1826                           
 1827                           ; Handle ladder climbing -----------------------------
 1828   384C   A5 47            L1F1F:      lda L0047              ; Get y-dir
 1829   384E   F0 30                        beq L1F53              ; Horizontal move
 1830                           
 1831   3850   A6 44                        ldx L0044              ; Check for ladder
 1832   3852   E0 03                        cpx #$03
 1833   3854   D0 2A                        bne L1F53              ; No
 1834                           
 1835   3856   A5 47                        lda L0047              ; Get y-dir
 1836   3858   30 0F                        bmi L1F3C              ; Going down
 1837                           
 1838   385A   A6 42                        ldx L0042              ; Check floor above man
 1839   385C   A4 43                        ldy L0043
 1840   385E   C8                           iny
 1841   385F   C8                           iny
 1842   3860   20 B0 3D                     jsr L2487              ; Get background nr
 1843   3863   29 02                        and #$02               ; Check for ladder
 1844   3865   F0 19                        beq L1F53              ; No ladder
 1845   3867   D0 0C                        bne L1F48              ; Ladder
 1846                           
 1847   3869   A6 42            L1F3C:      ldx L0042              ; Check floor under man
 1848   386B   A4 43                        ldy L0043
 1849   386D   88                           dey
 1850   386E   20 B0 3D                     jsr L2487              ; Get background nr
 1851   3871   29 02                        and #$02               ; Check for ladder
 1852   3873   F0 0B                        beq L1F53              ; No ladder
 1853                           
 1854   3875   A9 00            L1F48:      lda #$00               ; X-dir man=0
 1855   3877   85 46                        sta L0046
 1856   3879   A9 01                        lda #$01
 1857   387B   85 49                        sta L0049              ; Man climbing ladder
 1858   387D   4C C1 38                     jmp L1F94
 1859                           
 1860                           ; Handle horizontal move -----------------
 1861   3880   A9 00            L1F53:      lda #$00               ; Y-dir man=0
 1862   3882   85 47                        sta L0047
 1863                           
 1864   3884   A5 44                        lda L0044              ; Get x-pos man mod 8
 1865   3886   18                           clc
 1866   3887   65 46                        adc L0046              ; Add x-dir
 1867                           
 1868   3889   A6 42                        ldx L0042              ; Get x-pos man in bytes
 1869   388B   C9 00                        cmp #$00               ; Check left border byte
 1870   388D   10 01                        bpl L1F63              ; Next move in same tile
 1871   388F   CA                           dex                    ; Point to tile left from man
 1872   3890   C9 08            L1F63:      cmp #$08               ; Check right border byte
 1873   3892   30 01                        bmi L1F68              ; Next move in same tile
 1874   3894   E8                           inx                    ; Point to tile right from man
 1875                           
 1876   3895   A4 43            L1F68:      ldy L0043              ; Get y-pos man in bytes
 1877   3897   88                           dey                    ; Point tile below man
 1878   3898   20 B0 3D                     jsr L2487              ; Get background nr
 1879   389B   29 01                        and #$01               ; Check wall
 1880   389D   D0 19            L1F70:      bne L1F8B              ; Wall
 1881                           
 1882   389F   A8                           tay                    ; Y=0
 1883   38A0   A2 FF                        ldx #$FF               ; 
 1884   38A2   A5 46                        lda L0046              ; Get x-dir
 1885   38A4   18                           clc
 1886   38A5   65 44                        adc L0044              ; Add x-pos man mod 8
 1887   38A7   29 07                        and #$07
 1888   38A9   C9 04                        cmp #$04               ; Check 
 1889   38AB   B0 03                        bcs L1F83              ; B0 03
 1890   38AD   A2 01                        ldx #$01               ; A2 01
 1891   38AF   C8                           iny                    ; C8
 1892                           
 1893   38B0   86 4B            L1F83:      stx L004B              ; 86 4B
 1894   38B2   84 4A                        sty L004A              ; 84 4A
 1895   38B4   A9 03                        lda #$03
 1896   38B6   85 49                        sta L0049              ; Man falling
 1897   38B8                    L1F8B:
 1898   38B8   20 2C 3C                     jsr L2303              ; Check for tile under man for falling
 1899   38BB   90 04                        bcc L1F94              ; No tile, move horizontal while falling
 1900   38BD   A9 00                        lda #$00               ; Stop moving horizontal
 1901   38BF   85 46                        sta L0046
 1902                           
 1903   38C1   A5 46            L1F94:      lda L0046              ; Get x-dir man
 1904   38C3   F0 02                        beq L1F9A              ; Skip if no movement
 1905   38C5   85 4C                        sta L004C              ; If moving, save current dir
 1906   38C7                    L1F9A:
 1907   38C7   4C 29 3B                     jmp L21F6              ; Erase man
 1908                           
 1909                           ; Check jump key ----------------------------------
 1910   38CA   A5 60            L1F9D:      lda L0060
 1911   38CC   29 10                        and #$10
 1912   38CE   F0 03                        beq L1FA6              ; Key jump not pressed
 1913   38D0   4C 7E 3A                     jmp L214B              ; Key jump pressed
 1914                           
 1915   38D3   A5 46            L1FA6:      lda L0046              ; Get man x-dir
 1916   38D5   F0 1B                        beq L1FC5              ; Man not moving horizontal
 1917                           
 1918   38D7   A6 45                        ldx L0045              ; Get y-pos man mod 8
 1919   38D9   D0 17                        bne L1FC5              ; D0 17
 1920                           
 1921   38DB   A6 42                        ldx L0042              ; Get x-pos man in bytes
 1922   38DD   A4 43                        ldy L0043              ; Get y-pos man in bytes
 1923   38DF   88                           dey                    ; Point to tile below
 1924   38E0   20 B0 3D                     jsr L2487              ; Get background nr
 1925   38E3   29 01                        and #$01               ; Check if wall or end of ladder
 1926   38E5   F0 0B                        beq L1FC5              ; No wall or end of ladder
 1927                           
 1928   38E7   A9 00                        lda #$00               ; Stop moving vertical
 1929   38E9   85 47                        sta L0047
 1930   38EB   A9 00                        lda #$00               ; Stop moving horizontal
 1931   38ED   85 49                        sta L0049
 1932   38EF   4C 22 39                     jmp L1FF5
 1933                           
 1934   38F2   A9 00            L1FC5:      lda #$00
 1935   38F4   85 46                        sta L0046              ; Man x-dir = 0
 1936   38F6   A5 47                        lda L0047              ; Get man y-dir
 1937   38F8   F0 28                        beq L1FF5              ; F0 28
 1938                           
 1939   38FA   A5 45                        lda L0045              ; A5 45
 1940   38FC   D0 24                        bne L1FF5              ; D0 24
 1941   38FE   A5 47                        lda L0047              ; A5 47
 1942   3900   30 12                        bmi L1FE7              ; 30 12
 1943   3902   A6 42                        ldx L0042              ; A6 42
 1944   3904   A4 43                        ldy L0043              ; A4 43
 1945   3906   C8                           iny                    ; C8
 1946   3907   C8                           iny                    ; C8
 1947   3908   20 B0 3D                     jsr L2487              ; Get background nr
 1948   390B   29 02                        and #$02               ; 29 02
 1949   390D   D0 13                        bne L1FF5              ; D0 13
 1950   390F   85 47                        sta L0047              ; 85 47
 1951   3911   4C 22 39                     jmp L1FF5              ; 4C F5 1F
 1952   3914   A6 42            L1FE7:      ldx L0042              ; A6 42
 1953   3916   A4 43                        ldy L0043              ; A4 43
 1954   3918   88                           dey                    ; 88
 1955   3919   20 B0 3D                     jsr L2487              ; Get background nr
 1956   391C   29 02                        and #$02               ; 29 02
 1957   391E   D0 02                        bne L1FF5              ; D0 02
 1958   3920   85 47                        sta L0047              ; 85 47
 1959                           
 1960   3922   A9 00            L1FF5:      lda #$00               ; A9 00
 1961   3924   85 4C                        sta L004C              ; 85 4C
 1962   3926   4C 29 3B                     jmp L21F6              ; 4C F6 21
 1963                           
 1964                           ; Jumping routine ----------------------------------------
 1965   3929   A5 4B            L1FFC:      lda L004B              ; A5 4B
 1966   392B   85 46                        sta L0046              ; 85 46
 1967   392D   A5 47                        lda L0047              ; A5 47
 1968   392F   85 89                        sta L0089              ; 85 89
 1969   3931   A5 4A            L2004:      lda L004A              ; Get jump/fall distance
 1970   3933   4A                           lsr A
 1971   3934   4A                           lsr A                  ; Divide by 4
 1972   3935   C9 06                        cmp #$06               ; Check if 6
 1973   3937   90 02                        bcc L200E              ; Less then 6
 1974   3939   A9 06                        lda #$06               ; More then 6, limit to 6
 1975   393B   49 FF            L200E:      eor #$FF               ; Invert
 1976   393D   38                           sec                    ; 38
 1977   393E   69 02                        adc #$02               ; 69 02
 1978   3940   85 47                        sta L0047              ; 85 47
 1979   3942   E6 4A                        inc L004A              ; E6 4A
 1980   3944   A5 41                        lda L0041              ; A5 41
 1981   3946   C9 A9                        cmp #169               ; C9 DC
 1982   3948   90 0B                        bcc L2028              ; 90 0B
 1983   394A   A9 FF                        lda #$FF               ; A9 FF
 1984   394C   85 47                        sta L0047              ; 85 47
 1985   394E   A9 0C                        lda #$0C               ; A9 0C
 1986   3950   85 4A                        sta L004A              ; 85 4A
 1987   3952   4C 10 3A                     jmp L20DD              ; 4C DD 20
 1988                           
 1989   3955   A5 44            L2028:      lda L0044              ; A5 44
 1990   3957   18                           clc                    ; 18
 1991   3958   65 46                        adc L0046              ; 65 46
 1992   395A   C9 03                        cmp #$03               ; C9 03
 1993   395C   D0 66                        bne L2091              ; D0 60
 1994   395E   A5 89                        lda L0089              ; A5 89
 1995   3960   F0 62                        beq L2091              ; F0 5C
 1996   3962   30 37                        bmi L2068              ; 30 31
 1997                           
 1998                           ; Up must be pressed - jumping see if land on ladder ---------
 1999   3964   A6 42                        ldx L0042              ; Get x-pos man
 2000   3966   A4 43                        ldy L0043              ; Get y-pos above man
 2001   3968   C8                           iny
 2002   3969   20 B0 3D                     jsr L2487              ; Get background nr
 2003   396C   29 02                        and #$02               ; Ladder?
 2004   396E   D0 19                        bne L2056              ; Branch if a ladder, or platform ladder overlap (ok land on ladd
                            er) ---------
 2005   3970   A6 42            L2043:      ldx L0042              ; Get x-pos man
 2006   3972   A4 43            L2045:      ldy L0043              ; Get y-pos above man
 2007   3974   C8                           iny
 2008   3975   A5 45                        lda L0045              ; Check if man in upper half tile
 2009   3977   C9 04                        cmp #$04
 2010   3979   90 01                        bcc L204F              ; Man in lower half tile
 2011   397B   C8                           iny                    ; Man in upper half tile
 2012   397C   20 B0 3D         L204F:      jsr L2487              ; Get background nr
 2013   397F   29 02                        and #$02               ; Ladder?
 2014   3981   F0 41                        beq L2091              ; Branch if not a ladder, or platform ladder overlap (don't land 
                            on ladder)
 2015                           
 2016   3983   A5 4A                    lda L004A                  ; Solution to avoid jumping trough platforms on ladder
 2017   3985   C9 09                    cmp #$09
 2018   3987   B0 3B                    bcs L2091
 2019   3989                     
 2020                           ; Ok, land on ladder (going up) -----------------------------
 2021   3989                    L2056:
 2022   3989   A9 01                        lda #$01
 2023   398B   85 49                        sta L0049              ; Man climbing ladder
 2024   398D   A5 45                        lda L0045              ; A5 45
 2025   398F   18                           clc                    ; 18
 2026   3990   65 47                        adc L0047              ; 65 47
 2027   3992   29 01                        and #$01               ; 29 01
 2028   3994   F0 02                        beq L2065              ; F0 02
 2029   3996   E6 47                        inc L0047              ; E6 47
 2030   3998   4C 7B 3A         L2065:      jmp L2148              ; 4C 48 21
 2031                           
 2032                           ; Down must be pressed - jumping see if land on ladder ---------
 2033   399B   A6 42            L2068:      ldx L0042              ; Get x-pos man
 2034   399D   A4 43                        ldy L0043              ; Get y-pos man
 2035   399F   20 B0 3D                     jsr L2487              ; Get background nr
 2036   39A2   29 02                        and #$02               ; Ladder?
 2037   39A4   F0 1E                        beq L2091              ; Branch if not a ladder, or platform ladder overlap (can't land 
                            here then)
 2038   39A6   A6 42                        ldx L0042              ; Get x-pos man
 2039   39A8   A4 43                        ldy L0043              ; Get y-pos above man
 2040   39AA   C8                           iny
 2041   39AB   20 B0 3D                     jsr L2487              ; Get background nr
 2042   39AE   29 02                        and #$02               ; Ladder?
 2043   39B0   F0 12                        beq L2091              ; Branch if not a ladder, or platform ladder overlap (can't land 
                            here then)
 2044                           
 2045                           ; Ok, land on ladder (going down)
 2046   39B2   A9 01                        lda #$01
 2047   39B4   85 49                        sta L0049              ; Man climbing ladder
 2048   39B6   A5 45                        lda L0045              ; A5 45
 2049   39B8   18                           clc                    ; 18
 2050   39B9   65 47                        adc L0047              ; 65 47
 2051   39BB   29 01                        and #$01               ; 29 01
 2052   39BD   F0 02                        beq L208E              ; F0 02
 2053   39BF   C6 47                        dec L0047              ; C6 47
 2054   39C1   4C 7B 3A         L208E:      jmp L2148              ; 4C 48 21
 2055                           
 2056   39C4   A5 47            L2091:      lda L0047              ; A5 47
 2057   39C6   18                           clc                    ; 18
 2058   39C7   65 45                        adc L0045              ; 65 45
 2059   39C9   F0 1C                        beq L20B4              ; F0 1C
 2060   39CB   10 2D                        bpl L20C7              ; 10 2D
 2061   39CD   A6 42                        ldx L0042              ; A6 42
 2062   39CF   A4 43                        ldy L0043              ; A4 43
 2063   39D1   88                           dey                    ; 88
 2064   39D2   20 B0 3D                     jsr L2487              ; Get background nr
 2065   39D5   29 01                        and #$01               ; 29 01
 2066   39D7   F0 37                        beq L20DD              ; F0 37
 2067   39D9   A9 00                        lda #$00
 2068   39DB   85 49                        sta L0049              ; Man moving horizontal
 2069   39DD   A9 00                        lda #$00               ; A9 00
 2070   39DF   38                           sec                    ; 38
 2071   39E0   E5 45                        sbc L0045              ; E5 45
 2072   39E2   85 47                        sta L0047              ; 85 47
 2073   39E4   4C 10 3A                     jmp L20DD              ; 4C DD 20
 2074                           
 2075   39E7   A6 42            L20B4:      ldx L0042              ; A6 42
 2076   39E9   A4 43                        ldy L0043              ; A4 43
 2077   39EB   88                           dey                    ; 88
 2078   39EC   20 B0 3D                     jsr L2487              ; Get background nr
 2079   39EF   29 01                        and #$01               ; 29 01
 2080   39F1   F0 1D                        beq L20DD              ; F0 1D
 2081   39F3   A9 00                        lda #$00
 2082   39F5   85 49                        sta L0049              ; Man moving horizontal
 2083   39F7   4C 10 3A                     jmp L20DD              ; 4C DD 20
 2084                           
 2085   39FA   C9 08            L20C7:      cmp #$08               ; C9 08
 2086   39FC   D0 12                        bne L20DD              ; D0 12
 2087   39FE   A6 42                        ldx L0042              ; A6 42
 2088   3A00   A4 43                        ldy L0043              ; A4 43
 2089   3A02   20 B0 3D                     jsr L2487              ; Get background nr
 2090   3A05   29 01                        and #$01               ; 29 01
 2091   3A07   F0 07                        beq L20DD              ; F0 07
 2092   3A09   A9 00                        lda #$00
 2093   3A0B   85 49                        sta L0049              ; Man moving horizontal
 2094   3A0D   4C 10 3A                     jmp L20DD              ; 4C DD 20
 2095                           
 2096   3A10   A5 55            L20DD:      lda L0055              ; A5 55
 2097   3A12   F0 59                        beq L213A              ; F0 59
 2098   3A14   A5 58                        lda L0058              ; A5 58
 2099   3A16   38                           sec                    ; 38
 2100   3A17   E9 01                        sbc #$01               ; E9 01
 2101   3A19   C5 40                        cmp L0040              ; C5 40
 2102   3A1B   B0 50                        bcs L213A              ; B0 50
 2103   3A1D   69 0A                        adc #$0A               ; 69 0A
 2104   3A1F   C5 40                        cmp L0040              ; C5 40
 2105   3A21   90 4A                        bcc L213A              ; 90 4A
 2106   3A23   A5 41                        lda L0041              ; A5 41
 2107   3A25   38                           sec                    ; 38
 2108   3A26   E9 11                        sbc #$11               ; E9 11
 2109   3A28   85 8B                        sta L008B              ; 85 8B
 2110   3A2A   E9 02                        sbc #$02               ; E9 02
 2111   3A2C   18                           clc                    ; 18
 2112   3A2D   65 47                        adc L0047              ; 65 47
 2113   3A2F   85 8C                        sta L008C              ; 85 8C
 2114   3A31   A5 59                        lda L0059              ; A5 59
 2115   3A33   C5 8B                        cmp L008B              ; C5 8B
 2116   3A35   F0 06                        beq L210A              ; F0 06
 2117   3A37   B0 0E                        bcs L2114              ; B0 0E
 2118   3A39   C5 8C                        cmp L008C              ; C5 8C
 2119   3A3B   90 0A                        bcc L2114              ; 90 0A
 2120   3A3D   A6 5B            L210A:      ldx L005B              ; A6 5B
 2121   3A3F   D0 03                        bne L2111              ; D0 03
 2122   3A41   18                           clc                    ; 18
 2123   3A42   69 01                        adc #$01               ; 69 01
 2124   3A44   4C 5A 3A         L2111:      jmp L2127              ; 4C 27 21
 2125                           
 2126   3A47   A5 5A            L2114:      lda L005A              ; Get y-pos elevator high
 2127   3A49   C5 8B                        cmp L008B              ; C5 8B
 2128   3A4B   F0 06                        beq L2120              ; F0 06
 2129   3A4D   B0 1E                        bcs L213A              ; B0 1E
 2130   3A4F   C5 8C                        cmp L008C              ; C5 8C
 2131   3A51   90 1A                        bcc L213A              ; 90 1A
 2132                           
 2133   3A53   A6 5B            L2120:      ldx L005B              ; Get elevator flag
 2134   3A55   F0 03                        beq L2127              ; Flag was elevator low 
 2135   3A57   18                           clc                    ; Flag was elevator high
 2136   3A58   69 01                        adc #$01               ; 69 01
 2137   3A5A   38               L2127:      sec                    ; 38
 2138   3A5B   E5 8B                        sbc L008B              ; E5 8B
 2139   3A5D   18                           clc                    ; 18
 2140   3A5E   69 01                        adc #$01               ; 69 01
 2141   3A60   85 47                        sta L0047              ; 85 47
 2142                           
 2143   3A62   A9 00                        lda #$00               ; Set tone
 2144   3A64   85 4A                        sta L004A
 2145                           
 2146   3A66   A9 04                        lda #$04
 2147   3A68   85 49                        sta L0049              ; Man on elevator
 2148   3A6A   4C 7B 3A                     jmp L2148
 2149                           
 2150   3A6D   20 2C 3C         L213A:      jsr L2303              ; Check for wall under man for falling
 2151   3A70   90 09                        bcc L2148              ; No wall
 2152                           
 2153   3A72   A9 00                        lda #$00               ; Invert x-dir
 2154   3A74   38                           sec
 2155   3A75   E5 46                        sbc L0046
 2156   3A77   85 46                        sta L0046
 2157   3A79   85 4B                        sta L004B              ; Save x-dir
 2158   3A7B   4C 29 3B         L2148:      jmp L21F6
 2159                           
 2160                           ;------------------------------------------------
 2161                           ; Key jump pressed
 2162                           ;------------------------------------------------
 2163                           
 2164   3A7E   A9 00            L214B:      lda #$00               ; A9 00
 2165   3A80   85 4A                        sta L004A              ; 85 4A
 2166                           
 2167   3A82   A9 02                        lda #$02
 2168   3A84   85 49                        sta L0049              ; Man jump
 2169   3A86   A5 46                        lda L0046              ; Get x-direction
 2170   3A88   85 4B                        sta L004B              ; Set jump direction
 2171   3A8A   F0 02                        beq L215B              ; Branch if just jump straight up
 2172   3A8C   85 4C                        sta L004C              ; New x-movement (-1=left,0=up/down,1=right)
 2173   3A8E   4C 29 39         L215B:      jmp L1FFC
 2174                           
 2175   3A91   E6 4A            L215E:      inc L004A              ; E6 4A
 2176   3A93   A5 4A                        lda L004A              ; A5 4A
 2177   3A95   C9 04                        cmp #$04               ; C9 04
 2178   3A97   B0 0B                        bcs L2171              ; B0 0B
 2179   3A99   A5 4B                        lda L004B              ; A5 4B
 2180   3A9B   85 46                        sta L0046              ; 85 46
 2181   3A9D   A9 FF                        lda #$FF               ; A9 FF
 2182   3A9F   85 47                        sta L0047              ; 85 47
 2183   3AA1   4C B6 3A                     jmp L2183              ; 4C 83 21
 2184   3AA4   A9 00            L2171:      lda #$00               ; A9 00
 2185   3AA6   85 46                        sta L0046              ; 85 46
 2186   3AA8   A5 4A                        lda L004A              ; A5 4A
 2187   3AAA   4A                           lsr A                  ; 4A
 2188   3AAB   4A                           lsr A                  ; 4A
 2189   3AAC   C9 04                        cmp #$04               ; C9 04
 2190   3AAE   90 02                        bcc L217F              ; 90 02
 2191   3AB0   A9 03                        lda #$03               ; A9 03
 2192   3AB2   49 FF            L217F:      eor #$FF               ; 49 FF
 2193   3AB4   85 47                        sta L0047              ; 85 47
 2194   3AB6   A5 47            L2183:      lda L0047              ; A5 47
 2195   3AB8   18                           clc                    ; 18
 2196   3AB9   65 45                        adc L0045              ; 65 45
 2197   3ABB   F0 1C                        beq L21A6              ; F0 1C
 2198   3ABD   10 2A                        bpl L21B6              ; 10 2A
 2199   3ABF   A6 42                        ldx L0042              ; A6 42
 2200   3AC1   A4 43                        ldy L0043              ; A4 43
 2201   3AC3   88                           dey                    ; 88
 2202   3AC4   20 B0 3D                     jsr L2487              ; Get background nr
 2203   3AC7   29 01                        and #$01               ; 29 01
 2204   3AC9   F0 1E                        beq L21B6              ; F0 1E
 2205   3ACB   A9 00                        lda #$00
 2206   3ACD   85 49                        sta L0049              ; Man moving horizontal
 2207   3ACF   A9 00                        lda #$00               ; A9 00
 2208   3AD1   38                           sec                    ; 38
 2209   3AD2   E5 45                        sbc L0045              ; E5 45
 2210   3AD4   85 47                        sta L0047              ; 85 47
 2211   3AD6   4C E9 3A                     jmp L21B6              ; 4C B6 21
 2212   3AD9   A6 42            L21A6:      ldx L0042              ; A6 42
 2213   3ADB   A4 43                        ldy L0043              ; A4 43
 2214   3ADD   88                           dey                    ; 88
 2215   3ADE   20 B0 3D                     jsr L2487              ; Get background nr
 2216   3AE1   29 01                        and #$01               ; 29 01
 2217   3AE3   F0 04                        beq L21B6              ; F0 04
 2218   3AE5   A9 00                        lda #$00
 2219   3AE7   85 49                        sta L0049              ; Man moving horizontal
 2220   3AE9   4C 29 3B         L21B6:      jmp L21F6              ; 4C F6 21
 2221                           
 2222   3AEC   A5 60            L21B9:      lda L0060              ; Key jump pressed
 2223   3AEE   29 10                        and #$10
 2224   3AF0   F0 03                        beq L21C2              ; Yes
 2225   3AF2   4C 7E 3A                     jmp L214B              ; No
 2226                           
 2227   3AF5   A5 58            L21C2:      lda L0058              ; A5 58
 2228   3AF7   38                           sec                    ; 38
 2229   3AF8   E9 01                        sbc #$01               ; E9 01
 2230   3AFA   C5 40                        cmp L0040              ; C5 40
 2231   3AFC   B0 06                        bcs L21D1              ; B0 06
 2232   3AFE   69 0A                        adc #$0A               ; 69 0A
 2233   3B00   C5 40                        cmp L0040              ; C5 40
 2234   3B02   B0 0A                        bcs L21DB              ; B0 0A
 2235   3B04   A9 00            L21D1:      lda #$00               ; A9 00
 2236   3B06   85 4A                        sta L004A              ; 85 4A
 2237   3B08   85 4B                        sta L004B              ; 85 4B
 2238   3B0A   A9 03                        lda #$03
 2239   3B0C   85 49                        sta L0049              ; Man falling
 2240   3B0E   A9 01            L21DB:      lda #$01               ; A9 01
 2241   3B10   85 47                        sta L0047              ; 85 47
 2242   3B12   A5 46                        lda L0046              ; A5 46
 2243   3B14   F0 02                        beq L21E5              ; F0 02
 2244   3B16   85 4C                        sta L004C              ; 85 4C
 2245   3B18   20 2C 3C         L21E5:      jsr L2303              ; 20 03 23
 2246   3B1B   90 04                        bcc L21EE              ; 90 04
 2247   3B1D   A9 00                        lda #$00               ; A9 00
 2248   3B1F   85 46                        sta L0046              ; 85 46
 2249   3B21   A5 41            L21EE:      lda L0041              ; A5 41
 2250   3B23   C9 A9                        cmp #169               ; C9 DC
 2251   3B25   90 02                        bcc L21F6              ; 90 02
 2252   3B27   E6 4F                        inc L004F              ; E6 4F
 2253                           
 2254   3B29   A5 48            L21F6:      lda L0048              ; Get current sprite nr man
 2255   3B2B   20 3E 33                     jsr L19D7
 2256   3B2E   A6 40                        ldx L0040              ; Get x-pos man
 2257   3B30   A4 41                        ldy L0041              ; Get y-pos man
 2258   3B32   20 05 33                     jsr L1987
 2259   3B35   20 76 34                     jsr L1B2C              ; Erase man
 2260                           
 2261   3B38   A5 40                        lda L0040              ; Update x-pos man
 2262   3B3A   18                           clc
 2263   3B3B   65 46                        adc L0046              ; Step size/direction
 2264   3B3D   85 40                        sta L0040
 2265                           
 2266   3B3F   A5 44                        lda L0044              ; Get x-pos man mod 8
 2267   3B41   18                           clc
 2268   3B42   65 46                        adc L0046              ; Add x-dir
 2269   3B44   10 02                        bpl L2215              ; Check left border byte
 2270   3B46   C6 42                        dec L0042              ; Byte cross to the left
 2271   3B48   C9 08            L2215:      cmp #$08               ; Check right border byte
 2272   3B4A   30 02                        bmi L221B              ; No byte cross
 2273   3B4C   E6 42                        inc L0042              ; Byte cross to the right
 2274   3B4E   29 07            L221B:      and #$07               ; Mask byte
 2275   3B50   85 44                        sta L0044              ; Save x-pos man mod 8
 2276                           
 2277   3B52   A5 41                        lda L0041              ; Update y-pos man
 2278   3B54   18                           clc
 2279   3B55   65 47                        adc L0047              ; Step size/direction
 2280   3B57   85 41                        sta L0041
 2281                           
 2282   3B59   A5 45                        lda L0045              ; Get y-pos man mod 8
 2283   3B5B   18                           clc
 2284   3B5C   65 47                        adc L0047              ; Add y-dir
 2285   3B5E   10 02                        bpl L222F              ; Check low border byte
 2286   3B60   C6 43                        dec L0043              ; Byte cross down
 2287   3B62   C9 08            L222F:      cmp #$08               ; Check upper border byte
 2288   3B64   30 02                        bmi L2235              ; No byte cross
 2289   3B66   E6 43                        inc L0043              ; Byte cross up
 2290   3B68   29 07            L2235:      and #$07               ; Mask byte
 2291   3B6A   85 45                        sta L0045              ; Save y-pos man mod 8
 2292                           
 2293   3B6C   A2 06                        ldx #$06               ; Get sprite man stand right
 2294   3B6E   A5 4C                        lda L004C              ; Get current x-dir man
 2295   3B70   F0 0C                        beq L224B              ; Man on ladder
 2296   3B72   10 02                        bpl L2243              ; Man moving right
 2297                           
 2298   3B74   A2 09                        ldx #$09               ; Get sprite man stand left
 2299   3B76   86 88            L2243:      stx L0088              ; Save
 2300                           
 2301   3B78   A5 44                        lda L0044              ; Get x-pos man mod 8
 2302   3B7A   4A                           lsr A                  ; Shift 2 pixels to the right
 2303   3B7B   4C 85 3B                     jmp L2252              ; 4C 52 22
 2304                           
 2305   3B7E   A9 0C            L224B:      lda #$0C               ; Get sprite man climbing
 2306   3B80   85 88                        sta L0088              ; Save
 2307                           
 2308   3B82   A5 45                        lda L0045              ; Get y-pos man mod 8
 2309   3B84   4A                           lsr A                  ; Shift 2 pixels down
 2310                           
 2311   3B85   A2 02            L2252:      ldx #$02               ; A2 02
 2312   3B87   86 89                        stx L0089              ; 86 89
 2313   3B89   24 89                        bit L0089              ; 24 89
 2314   3B8B   F0 03                        beq L225D              ; F0 03
 2315   3B8D   29 01                        and #$01               ; 29 01
 2316   3B8F   0A                           asl A                  ; 0A
 2317                           
 2318   3B90   A6 49            L225D:      ldx L0049              ; Get movement man
 2319   3B92   E0 01                        cpx #$01               ; Man on ladder?
 2320   3B94   D0 09                        bne L226C              ; No
 2321                           
 2322   3B96   A6 47                        ldx L0047              ; Get man y-dir
 2323   3B98   D0 0B                        bne L2272              ; Man is moving vertical
 2324                           
 2325   3B9A   A9 00                        lda #$00               ; Man is moving horizontal
 2326   3B9C   4C A5 3B                     jmp L2272
 2327                           
 2328   3B9F   A6 46            L226C:      ldx L0046              ; Get man x-dir
 2329   3BA1   D0 02                        bne L2272              ; Man is moving vertical
 2330   3BA3   A9 00                        lda #$00
 2331                           
 2332   3BA5   18               L2272:      clc                    ; Calculate next sprite
 2333   3BA6   65 88                        adc L0088
 2334   3BA8   85 48                        sta L0048              ; Set current man sprite
 2335   3BAA   20 D6 3C                     jsr L23AD              ; Plot man
 2336   3BAD   A6 42                        ldx L0042              ; Get x-pos man in bytes
 2337   3BAF   A4 43                        ldy L0043              ; Get y-pos man in bytes
 2338   3BB1   A5 45                        lda L0045              ; Get ypos man mod 8
 2339   3BB3   C9 04                        cmp #$04               ; Check if man in upper or lower half tile
 2340   3BB5   90 01                        bcc L2285              ; Lower half, check tile below
 2341   3BB7   C8                           iny                    ; Upper half, check tile above
 2342                           
 2343   3BB8   84 89            L2285:      sty L0089              ; Save y-pointer
 2344   3BBA   20 B0 3D                     jsr L2487              ; Get background nr
 2345   3BBD   85 88                        sta L0088              ; Save background tilenr
 2346   3BBF   29 0C                        and #$0C               ; Check for egg or seed
 2347   3BC1   F0 68                        beq L2302              ; No egg or seed
 2348   3BC3   29 08                        and #$08
 2349   3BC5   D0 38                        bne L22D1              ; Was seed
 2350   3BC7   C6 39                        dec L0039              ; Was egg, decrement counter
 2351                           
 2352   3BC9   A9 01                    lda #1
 2353   3BCB   A0 01                    ldy #1
 2354   3BCD   A2 01                    ldx #1
 2355   3BCF   20 23 57                 jsr sound
 2356                           
 2357                           ;------------------------------------------------
 2358                           ; Erase seed
 2359                           ;------------------------------------------------
 2360   3BD2   A5 88                        lda L0088              ; Get background value
 2361   3BD4   4A                           lsr A
 2362   3BD5   4A                           lsr A
 2363   3BD6   4A                           lsr A
 2364   3BD7   4A                           lsr A
 2365   3BD8   18                           clc
 2366   3BD9   65 4E                        adc L004E
 2367   3BDB   AA                           tax                    ; Calc position in table
 2368   3BDC   DE 10 05                     dec L0510,X            ; Mark egg as taken ($ff)
 2369                           
 2370   3BDF   A9 04                        lda #$04               ; Erase seed sprite
 2371   3BE1   85 8F                        sta L008F              ; 85 8F
 2372   3BE3   A6 42                        ldx L0042              ; A6 42
 2373   3BE5   A4 89                        ldy L0089              ; A4 89
 2374   3BE7   20 B4 3C                     jsr L238B              ; Erase egg
 2375                           
 2376   3BEA   A5 50                        lda L0050              ; Calc value to add to score
 2377   3BEC   4A                           lsr A
 2378   3BED   4A                           lsr A
 2379   3BEE   18                           clc
 2380   3BEF   69 01                        adc #$01
 2381   3BF1   C9 0A                        cmp #$0A
 2382   3BF3   90 02                        bcc L22C9              ; If level<36 add (level/4+1)*10
 2383                           
 2384   3BF5   A9 0A                        lda #$0A               ; Add 100 to score
 2385   3BF7   A2 05            L22C9:      ldx #$05
 2386   3BF9   20 FB 33                     jsr L1AB1              ; Update score
 2387                           
 2388   3BFC   4C 2B 3C                     jmp L2302              ; 4C 02 23
 2389                           
 2390                           ;------------------------------------------------
 2391                           ; Erase seed
 2392                           ;------------------------------------------------
 2393                           
 2394   3BFF                    L22D1:
 2395   3BFF   A9 01                    lda #1
 2396   3C01   A0 01                    ldy #1
 2397   3C03   A2 01                    ldx #1
 2398   3C05   20 23 57                 jsr sound
 2399                           
 2400   3C08   A5 88                        lda L0088              ; Get background value
 2401   3C0A   4A                           lsr A
 2402   3C0B   4A                           lsr A
 2403   3C0C   4A                           lsr A
 2404   3C0D   4A                           lsr A
 2405   3C0E   18                           clc
 2406   3C0F   65 4E                        adc L004E
 2407   3C11   AA                           tax                    ; Calc position in table
 2408   3C12   DE 20 05                     dec L0520,X            ; Mark seed as taken ($ff)
 2409                           
 2410   3C15   A9 03                        lda #$03               ; A9 03
 2411   3C17   85 8F                        sta L008F              ; 85 8F
 2412   3C19   A6 42                        ldx L0042              ; Get x-pos
 2413   3C1B   A4 89                        ldy L0089              ; Get y-pos
 2414   3C1D   20 C5 3C                     jsr L239C              ; Erase seed
 2415                           
 2416   3C20   A9 05                        lda #$05               ; Add 50 to score
 2417   3C22   A2 06                        ldx #$06
 2418   3C24   20 FB 33                     jsr L1AB1              ; Update score
 2419                           
 2420   3C27   A9 14                        lda #$14               ; Timer
 2421   3C29   85 1C                        sta L001C
 2422                           
 2423   3C2B   60               L2302:      rts
 2424                           
 2425                           ;------------------------------------------------
 2426                           ; Check tile for falling
 2427                           ; - Carry clear, no wall
 2428                           ; - Carry set, wall
 2429                           ;------------------------------------------------
 2430                           
 2431   3C2C   A5 46            L2303:      lda L0046              ; Get x-dir man 
 2432   3C2E   30 04                        bmi L230B              ; Dir is left
 2433   3C30   D0 41                        bne L234A              ; Dir is right
 2434   3C32   18                           clc                    ; Man is standing still
 2435   3C33   60                           rts
 2436                           
 2437                           ; Man is falling to the left ------------------
 2438   3C34   A5 40            L230B:      lda L0040              ; Get x-pos man
 2439   3C36   C9 01                        cmp #$01               ; Check left limit screen
 2440   3C38   90 78                        bcc L2389              ; Man on left limit
 2441                           
 2442   3C3A   A5 44                        lda L0044              ; A5 44
 2443   3C3C   C9 02                        cmp #$02               ; C9 02
 2444   3C3E   B0 70                        bcs L2387              ; B0 70
 2445   3C40   A5 47                        lda L0047              ; A5 47
 2446   3C42   C9 02                        cmp #$02               ; C9 02
 2447   3C44   F0 6A                        beq L2387              ; F0 6A
 2448                           
 2449   3C46   A6 42                        ldx L0042              ; Get x-pos man in bytes
 2450   3C48   CA                           dex                    ; Point to tile left from man
 2451                           
 2452   3C49   A4 43                        ldy L0043              ; Get y-pos man in bytes
 2453   3C4B   A5 45                        lda L0045              ; Get y-pos man mod 8
 2454   3C4D   18                           clc 
 2455   3C4E   65 47                        adc L0047              ; Add dir-y
 2456   3C50   C9 08                        cmp #$08               ; Check upper byte border
 2457   3C52   90 07                        bcc L2332              ; Same tile
 2458   3C54   10 04                        bpl L2331              ; Point to tile above
 2459   3C56   88                           dey                    ; Point to tile below
 2460   3C57   4C 5B 3C                     jmp L2332
 2461                           
 2462   3C5A   C8               L2331:      iny
 2463   3C5B   20 B0 3D         L2332:      jsr L2487              ; Get background nr
 2464   3C5E   C9 01                        cmp #$01               ; Check wall
 2465   3C60   F0 50                        beq L2389              ; Yes
 2466                           
 2467   3C62   A5 47                        lda L0047              ; Get y-dir
 2468   3C64   10 4A                        bpl L2387              ; Was up
 2469                           
 2470   3C66   A6 42                        ldx L0042              ; Was down, load x-pos man in bytes
 2471   3C68   CA                           dex                    ; Point to tile left
 2472   3C69   C8                           iny                    ; Point to tile up
 2473   3C6A   20 B0 3D                     jsr L2487              ; Get background nr
 2474   3C6D   C9 01                        cmp #$01               ; Check wall
 2475   3C6F   F0 41                        beq L2389              ; Was wall
 2476   3C71   D0 3D                        bne L2387              ; No wall
 2477                           
 2478                           ; Man is falling to the right ------------------
 2479   3C73   A5 40            L234A:      lda L0040              ; Check x-man right border
 2480   3C75   C9 78                        cmp #120
 2481   3C77   B0 39                        bcs L2389              ; Man on right limit
 2482                           
 2483   3C79   A5 44                        lda L0044              ; A5 44
 2484   3C7B   C9 05                        cmp #$05               ; C9 05
 2485   3C7D   90 31                        bcc L2387              ; 90 31
 2486   3C7F   A5 47                        lda L0047              ; A5 47
 2487   3C81   C9 02                        cmp #$02               ; C9 02
 2488   3C83   F0 2B                        beq L2387              ; F0 2B
 2489                           
 2490   3C85   A6 42                        ldx L0042              ; Get x-pos man in bytes
 2491   3C87   E8                           inx                    ; Point to tile right from man
 2492                           
 2493   3C88   A4 43                        ldy L0043              ; Get y-pos man in bytes
 2494   3C8A   A5 45                        lda L0045              ; Get y-pos man mod 8
 2495   3C8C   18                           clc
 2496   3C8D   65 47                        adc L0047              ; Add dir-y
 2497   3C8F   C9 08                        cmp #$08               ; Check upper byte border
 2498   3C91   90 07                        bcc L2371              ; Same tile
 2499   3C93   10 04                        bpl L2370              ; Point to tile above
 2500   3C95   88                           dey                    ; Point to tile below
 2501   3C96   4C 9A 3C                     jmp L2371
 2502                           
 2503   3C99   C8               L2370:      iny
 2504   3C9A   20 B0 3D         L2371:      jsr L2487              ; Get background nr
 2505   3C9D   C9 01                        cmp #$01               ; Check wall
 2506   3C9F   F0 11                        beq L2389              ; Yes
 2507                           
 2508   3CA1   A5 47                        lda L0047              ; Get y-dir
 2509   3CA3   10 0B                        bpl L2387              ; Was up
 2510                           
 2511   3CA5   A6 42                        ldx L0042              ; Was down, load x-pos man in bytes
 2512   3CA7   E8                           inx                    ; Point to tile right
 2513   3CA8   C8                           iny                    ; Point to tile up
 2514   3CA9   20 B0 3D                     jsr L2487              ; Get background nr
 2515   3CAC   C9 01                        cmp #$01               ; Check wall
 2516   3CAE   F0 02                        beq L2389              ; Was wall
 2517                           
 2518   3CB0   18               L2387:      clc                    ; No wall under man while falling
 2519   3CB1   60                           rts
 2520                           
 2521   3CB2   38               L2389:      sec                    ; Wall under man while falling
 2522   3CB3   60                           rts
 2523                           
 2524                           ;------------------------------------------------
 2525                           ; Erase egg at position X
 2526                           ;------------------------------------------------
 2527                           
 2528   3CB4   8A               L238B:      txa                    ; Save x-pos
 2529   3CB5   48                           pha
 2530   3CB6   A9 00                        lda #$00
 2531   3CB8   20 C8 3D                     jsr L249F              ; Erase egg in background
 2532                           
 2533   3CBB   A9 C0                        lda #yellow            ; Color yellow
 2534   3CBD   85 7F                        sta L007F
 2535   3CBF   68                           pla                    ; Get x-pos
 2536   3CC0   AA                           tax
 2537   3CC1   20 9B 34                     jsr L1B62              ; Erase egg on screen
 2538   3CC4   60                           rts
 2539                           
 2540                           ;------------------------------------------------
 2541                           ; Erase seed at position X
 2542                           ;------------------------------------------------
 2543                           
 2544   3CC5   8A               L239C:      txa                    ; Save x-pos
 2545   3CC6   48                           pha
 2546   3CC7   A9 00                        lda #$00
 2547   3CC9   20 C8 3D                     jsr L249F              ; Erase seed in background
 2548                           
 2549   3CCC   A9 C0                        lda #red               ; Color magenta
 2550   3CCE   85 7F                        sta L007F
 2551   3CD0   68                           pla                    ; Get x-pos
 2552   3CD1   AA                           tax
 2553   3CD2   20 9B 34                     jsr L1B62              ; Erase seed on screen
 2554   3CD5   60                           rts
 2555                           
 2556                           ;------------------------------------------------
 2557                           ; Plot man in A
 2558                           ;------------------------------------------------
 2559                           
 2560   3CD6   A2 C0            L23AD:      ldx #yellow            ; Color yellow
 2561   3CD8   86 7F                        stx L007F
 2562   3CDA   20 3E 33                     jsr L19D7
 2563   3CDD   A6 40                        ldx L0040              ; Get x-pos
 2564   3CDF   A4 41                        ldy L0041              ; Get y-pos
 2565   3CE1   20 05 33                     jsr L1987
 2566   3CE4   20 8E 32                     jsr L1902
 2567   3CE7   60                           rts
 2568                           
 2569                           ;------------------------------------------------
 2570                           ; Plot duck in A+$f
 2571                           ;------------------------------------------------
 2572                           
 2573   3CE8   A2 C0            L23BF:      ldx #yellow            ; Color yellow
 2574   3CEA   86 7F                        stx L007F
 2575   3CEC   18                           clc
 2576   3CED   69 0F                        adc #$0F               ; Add 15 to spritenr
 2577   3CEF   20 3E 33                     jsr L19D7
 2578   3CF2   A6 30                        ldx L0030              ; Get x-pos
 2579   3CF4   A4 31                        ldy L0031              ; Get y-pos
 2580   3CF6   20 05 33                     jsr L1987
 2581   3CF9   20 8E 32                     jsr L1902
 2582   3CFC   60                           rts
 2583                           
 2584                           ;------------------------------------------------
 2585                           ; Plot bird in A+$15
 2586                           ;------------------------------------------------
 2587                           
 2588   3CFD   A2 C0            L23D4:      ldx #red               ; Color magenta
 2589   3CFF   86 7F                        stx L007F
 2590                           
 2591   3D01   A6 88                        ldx L0088              ; Get pointer
 2592   3D03   BD 19 04                     lda L0419,X            ; Get birdnr
 2593   3D06   18                           clc
 2594   3D07   69 15                        adc #$15               ; Add $15
 2595   3D09   48                           pha                    ; Save spritenr
 2596   3D0A   20 3E 33                     jsr L19D7              ; Calc sprite address
 2597   3D0D   A6 88                        ldx L0088              ; Get birdnr
 2598   3D0F   BD 00 04                     lda L0400,X            ; Get x-pos bird
 2599   3D12   BC 05 04                     ldy L0405,X            ; Get y-pos bird
 2600   3D15   AA                           tax
 2601   3D16   68                           pla
 2602   3D17   C9 1D                        cmp #$1D               ; If last sprite bird eat
 2603   3D19   90 04                        bcc L23F6
 2604   3D1B   8A                           txa                    ; Sprite is bird stand
 2605   3D1C   E9 08                        sbc #$08
 2606   3D1E   AA                           tax
 2607   3D1F   20 05 33         L23F6:      jsr L1987              ; Calc screen address
 2608   3D22   20 8E 32                     jsr L1902              ; Plot bird
 2609   3D25   60                           rts
 2610                           
 2611                           ;------------------------------------------------
 2612                           ;Erase duck in A +$f
 2613                           ;------------------------------------------------
 2614                           
 2615   3D26   18               L23FD:      clc                    ; Add $f to spritenr
 2616   3D27   69 0F                        adc #$0F
 2617   3D29   20 3E 33                     jsr L19D7              ; Calc sprite address
 2618   3D2C   A6 30                        ldx L0030              ; Get duck x-pos
 2619   3D2E   A4 31                        ldy L0031              ; Get duck y-pos
 2620   3D30   20 05 33                     jsr L1987              ; Calc screenaddress
 2621   3D33   20 76 34                     jsr L1B2C              ; Erase duck
 2622   3D36   60                           rts
 2623                           
 2624                           ;------------------------------------------------
 2625                           ; Erase Bird in A +$f
 2626                           ;------------------------------------------------
 2627                           
 2628   3D37   A6 88            L240E:      ldx L0088              ; Get bird pointer
 2629   3D39   BD 19 04                     lda L0419,X            ; Get Bird nr
 2630   3D3C   18                           clc
 2631   3D3D   69 15                        adc #$15               ; Add $15
 2632   3D3F   48                           pha
 2633   3D40   20 3E 33                     jsr L19D7
 2634   3D43   A6 88                        ldx L0088              ; Get bird pointer
 2635   3D45   BD 00 04                     lda L0400,X            ; Get x-pos
 2636   3D48   BC 05 04                     ldy L0405,X            ; Get y-pos
 2637   3D4B   AA                           tax
 2638   3D4C   68                           pla
 2639   3D4D   C9 1D                        cmp #$1D               ; Bird eating
 2640   3D4F   90 04                        bcc L242C
 2641   3D51   8A                           txa                    ; x=x-8
 2642   3D52   E9 08                        sbc #$08
 2643   3D54   AA                           tax
 2644                           
 2645   3D55   20 05 33         L242C:      jsr L1987              ; Calculate screenaddress
 2646   3D58   20 76 34                     jsr L1B2C              ; Erase bird
 2647   3D5B   60                           rts
 2648                           
 2649                           ;------------------------------------------------
 2650                           ; Plot elevator low + high
 2651                           ;------------------------------------------------
 2652                           
 2653   3D5C   A5 55            L2433:      lda L0055              ; Skip if no elevator
 2654   3D5E   F0 4F                        beq L2486
 2655                           
 2656   3D60   A4 59                        ldy L0059              ; Get y-pos elevator
 2657   3D62   A5 5B                        lda L005B
 2658   3D64   F0 02                        beq L243F
 2659   3D66   A4 5A                        ldy L005A
 2660                           
 2661   3D68   84 89            L243F:      sty L0089              ; Save y-pos elevator
 2662                           
 2663   3D6A   A9 C0                        lda #yellow            ; Color yellow
 2664   3D6C   85 7F                        sta L007F
 2665                           
 2666   3D6E   A9 05                        lda #$05               ; Erase elevator sprite
 2667   3D70   20 3E 33                     jsr L19D7
 2668   3D73   A6 58                        ldx L0058
 2669   3D75   A4 89                        ldy L0089
 2670   3D77   20 05 33                     jsr L1987              ; Calc sprite address
 2671   3D7A   20 76 34                     jsr L1B2C              ; Erase elevator
 2672                           
 2673   3D7D   E6 89                        inc L0089              ; Move elevator 2 pixels up
 2674   3D7F   E6 89                        inc L0089
 2675   3D81   A5 89                        lda L0089
 2676   3D83   C9 AA                        cmp #170               ; Top reached (Y=224)?
 2677   3D85   D0 04                        bne L2462
 2678   3D87   A9 06                        lda #$06               ; Start at bottom (Y=6)
 2679   3D89   85 89                        sta L0089
 2680   3D8B   A9 05            L2462:      lda #$05               ; Put elevator sprite
 2681   3D8D   20 3E 33                     jsr L19D7              ; Calc sprite address
 2682   3D90   A6 58                        ldx L0058
 2683   3D92   A4 89                        ldy L0089
 2684   3D94   20 05 33                     jsr L1987              ; Calc screen address
 2685   3D97   20 8E 32                     jsr L1902              ; Plot sprite
 2686                           
 2687   3D9A   A5 5B                        lda L005B              ; Get elevator toggle
 2688   3D9C   F0 07                        beq L247C
 2689   3D9E   A5 89                        lda L0089              ; Update y-pos elevator high
 2690   3DA0   85 5A                        sta L005A
 2691   3DA2   4C A9 3D                     jmp L2480
 2692                           
 2693   3DA5   A5 89            L247C:      lda L0089              ; Update y-pos elevator high
 2694   3DA7   85 59                        sta L0059
 2695                           
 2696   3DA9   A5 5B            L2480:      lda L005B              ; Toggle elevator high/low
 2697   3DAB   49 FF                        eor #$FF
 2698   3DAD   85 5B                        sta L005B
 2699   3DAF   60               L2486:      rts
 2700                           
 2701                           ;------------------------------------------------
 2702                           ; Get background nr
 2703                           ;------------------------------------------------
 2704                           
 2705   3DB0   C0 19            L2487:      cpy #$19               ; Check Y-limit
 2706   3DB2   B0 11                        bcs L249C
 2707   3DB4   E0 14                        cpx #20                ; Check X-limit
 2708   3DB6   B0 0D                        bcs L249C
 2709   3DB8   20 D5 3D                     jsr L24AC              ; Next block 1 line below
 2710   3DBB   B0 04                        bcs L2498
 2711                           
 2712   3DBD   BD 00 06                     lda L0600,X            ; Read spritenr upper screen
 2713   3DC0   60                           rts
 2714                           
 2715   3DC1   BD 00 07         L2498:      lda L0700,X            ; Read spritenr lower screen
 2716   3DC4   60                           rts
 2717                           
 2718   3DC5   A9 00            L249C:      lda #$00               ; Out of limits, return 0
 2719   3DC7   60                           rts
 2720                           
 2721                           ;------------------------------------------------
 2722                           ; Store A in temp area
 2723                           ;------------------------------------------------
 2724                           
 2725   3DC8   20 D5 3D         L249F:      jsr L24AC              ; Y=Y*20
 2726   3DCB   B0 04                        bcs L24A8              ; Check upper or lower screen
 2727   3DCD   9D 00 06                     sta L0600,X            ; Store in lowerscreen
 2728   3DD0   60                           rts
 2729   3DD1   9D 00 07         L24A8:      sta L0700,X            ; Store in upperscreen
 2730   3DD4   60                           rts
 2731                           
 2732                           ;------------------------------------------------
 2733                           ; Calculate offset in backgroundbuffer
 2734                           ; Exit with carry set=upperscreen, else lowerscreen
 2735                           ;------------------------------------------------
 2736                           
 2737   3DD5   48               L24AC:      pha                    ; Save A
 2738   3DD6   84 8E                        sty L008E              ; Calc Y*20
 2739   3DD8   98                           tya
 2740   3DD9   0A                           asl A
 2741   3DDA   0A                           asl A
 2742   3DDB   65 8E                        adc L008E
 2743   3DDD   0A                           asl A
 2744   3DDE   0A                           asl A
 2745   3DDF   08                           php                    ; Save carry
 2746   3DE0   18                           clc
 2747   3DE1   85 8E                        sta L008E              ; Set offset
 2748   3DE3   8A                           txa                    ; Add x to offset
 2749   3DE4   65 8E                        adc L008E
 2750   3DE6   AA                           tax
 2751   3DE7   B0 03                        bcs L24C3              ; If carry set, upperscreen
 2752   3DE9   28                           plp                    ; lowerscreen
 2753   3DEA   68                           pla
 2754   3DEB   60                           rts
 2755                           
 2756   3DEC   68               L24C3:      pla
 2757   3DED   68                           pla
 2758   3DEE   60                           rts
 2759                           
 2760                           ;------------------------------------------------
 2761                           ; Update duck position
 2762                           ;------------------------------------------------
 2763                           
 2764   3DEF                    L24C6:
 2765   3DEF   E6 38                        inc L0038              ; Get duck delay 
 2766   3DF1   A5 38                        lda L0038
 2767   3DF3   C9 08                        cmp #$08
 2768   3DF5   D0 09                        bne L24D7
 2769                           
 2770   3DF7   A9 00                        lda #$00               ; If delay ticker=8, reset
 2771   3DF9   85 38                        sta L0038
 2772   3DFB   A5 34                        lda L0034              ; Get duck sprite
 2773   3DFD   4C 26 3D                     jmp L23FD              ; Plot duck
 2774                           
 2775   3E00   C9 04            L24D7:      cmp #$04               ; If delay ticker=4
 2776   3E02   D0 03                        bne L24DE
 2777   3E04   4C 8A 40                     jmp L2760
 2778                           
 2779   3E07   C9 01            L24DE:      cmp #$01               ; If delay ticker=1
 2780   3E09   D0 03                        bne L24E5
 2781   3E0B   4C 11 3E                     jmp L24E8 
 2782                           
 2783   3E0E                    L24E5:
 2784   3E0E   4C A1 3E                     jmp L2578              ; Update bird position
 2785                           
 2786   3E11   A5 34            L24E8:      lda L0034              ; Get duckspritenr (0-1)
 2787   3E13   29 02                        and #$02
 2788   3E15   85 8B                        sta L008B
 2789                           
 2790   3E17   A5 35                        lda L0035              ; Check if duck in cage
 2791   3E19   F0 6A                        beq L255C              ; Yes
 2792                           
 2793   3E1B   A5 30                        lda L0030              ; Check x-pos+4 duck 
 2794   3E1D   18                           clc
 2795   3E1E   69 04                        adc #$04
 2796   3E20   C5 40                        cmp L0040              ; Check with man x-pos
 2797   3E22   B0 11                        bcs L250C              ; If man right from duck
 2798   3E24   E6 32                        inc L0032              ; Inc x-dir duck
 2799   3E26   A5 32                        lda L0032              ; Limit to 6
 2800   3E28   C9 06                        cmp #$06
 2801   3E2A   30 02                        bmi L2505
 2802   3E2C   C6 32                        dec L0032
 2803                           
 2804   3E2E   A9 00            L2505:      lda #$00               ; Set duck sprite right
 2805   3E30   85 8B                        sta L008B
 2806   3E32   4C 43 3E                     jmp L251A
 2807                           
 2808   3E35   C6 32            L250C:      dec L0032              ; Man left from duck, dec x-dir duck
 2809   3E37   A5 32                        lda L0032              ; Limit to -6
 2810   3E39   C9 FB                        cmp #$FB
 2811   3E3B   10 02                        bpl L2516
 2812   3E3D   E6 32                        inc L0032
 2813                           
 2814   3E3F   A9 02            L2516:      lda #$02               ; Set duck sprite left
 2815   3E41   85 8B                        sta L008B
 2816                           
 2817   3E43   A5 41            L251A:      lda L0041              ; Check y-pos+4 duck
 2818   3E45   18                           clc
 2819   3E46   69 04                        adc #$04
 2820   3E48   C5 31                        cmp L0031              ; Check with man y-pos
 2821   3E4A   90 0D                        bcc L2530              ; If man above duck
 2822   3E4C   E6 33                        inc L0033              ; Inc y-dir duck
 2823   3E4E   A5 33                        lda L0033              ; Limit to 6
 2824   3E50   C9 06                        cmp #$06
 2825   3E52   30 02                        bmi L252D
 2826   3E54   C6 33                        dec L0033
 2827   3E56   4C 63 3E         L252D:      jmp L253A
 2828                           
 2829   3E59   C6 33            L2530:      dec L0033              ; Man under duck, dec y-dir duck
 2830   3E5B   A5 33                        lda L0033              ; Limit to -6
 2831   3E5D   C9 FB                        cmp #$FB
 2832   3E5F   10 02                        bpl L253A
 2833   3E61   E6 33                        inc L0033
 2834                           
 2835   3E63   A5 31            L253A:      lda L0031              ; Check y-dir duck
 2836   3E65   18                           clc
 2837   3E66   65 33                        adc L0033
 2838   3E68   C9 20                        cmp #32                ; Check lower limit=32
 2839   3E6A   B0 08                        bcs L254B
 2840   3E6C   A5 33                        lda L0033              ; Invert y-dir
 2841   3E6E   49 FF                        eor #$FF
 2842   3E70   85 33                        sta L0033
 2843   3E72   E6 33                        inc L0033
 2844                           
 2845   3E74   A5 30            L254B:      lda L0030              ; Check x-dir duck
 2846   3E76   18                           clc
 2847   3E77   65 32                        adc L0032
 2848   3E79   C9 74                        cmp #116               ; Check right limit=112
 2849   3E7B   90 08                        bcc L255C
 2850   3E7D   A5 32                        lda L0032              ; Invert x-dir
 2851   3E7F   49 FF                        eor #$FF
 2852   3E81   85 32                        sta L0032
 2853   3E83   E6 32                        inc L0032
 2854                           
 2855   3E85   A5 30            L255C:      lda L0030              ; Get x-pos duck
 2856   3E87   18                           clc
 2857   3E88   65 32                        adc L0032              ; Add x-dir duck
 2858   3E8A   85 30                        sta L0030              ; Store x-pos duck
 2859                           
 2860   3E8C   A5 31                        lda L0031              ; Get y-pos duck
 2861   3E8E   18                           clc
 2862   3E8F   65 33                        adc L0033              ; Add y-dir duck
 2863   3E91   85 31                        sta L0031              ; Store y-pos duck
 2864                           
 2865   3E93   A5 34                        lda L0034              ; Animate ducksprite
 2866   3E95   29 01                        and #$01
 2867   3E97   49 01                        eor #$01
 2868   3E99   05 8B                        ora L008B
 2869   3E9B   85 34                        sta L0034
 2870   3E9D   20 E8 3C                     jsr L23BF              ; Plot duck
 2871   3EA0   60                           rts
 2872                           
 2873                           ;---------------------------------------------------
 2874                           ; Update bird positions 
 2875                           ;
 2876                           ;     8 4 2 1                  Call 266C - L008D  X
 2877                           ; 0 - 0 0 0 0 - Stand facing right           0    0
 2878                           ; 1 - 0 0 0 1 - Walk facing right            1    1
 2879                           ; 2 - 0 0 1 0 - Stand facing left            2    1
 2880                           ; 3 - 0 0 1 1 - Walk facing left             3    2
 2881                           ; 4 - 0 1 0 0 - Climb 1                      4    1
 2882                           ; 5 - 0 1 0 1 - Climb 2                      5    2
 2883                           ; 6 - 0 1 1 0 - Eat half facing right        6    2
 2884                           ; 7 - 0 1 1 1 - Eat down facing right        7    3
 2885                           ; 8 - 1 0 0 0 - Eat half facing left         8    1
 2886                           ; 9 - 1 0 0 1 - Eat down facing left         9    2
 2887                           ;---------------------------------------------------
 2888                           
 2889   3EA1                    L2578:
 2890   3EA1   C6 36                        dec L0036              ; Decrement delay
 2891   3EA3   A6 36                        ldx L0036
 2892   3EA5   10 04                        bpl L2582
 2893   3EA7   A6 37                        ldx L0037              ; If 0 reset delay
 2894   3EA9   86 36                        stx L0036
 2895                           
 2896   3EAB   E4 57            L2582:      cpx L0057              ; Check with nr of birds
 2897   3EAD   90 01                        bcc L2587
 2898   3EAF   60                           rts
 2899   3EB0                    L2587:
 2900   3EB0   86 88                        stx L0088              ; Save nr of birds
 2901   3EB2   BD 14 04                     lda L0414,X            ; Get bird sprite
 2902   3EB5   C9 01                        cmp #$01
 2903   3EB7   D0 03                        bne L2593
 2904   3EB9   4C DC 3F                     jmp L26B2              ; Bird walk right
 2905                           
 2906   3EBC   90 03            L2593:      bcc L2598              ; Bird left or climbing
 2907   3EBE   4C A2 3F                     jmp L2679              ; Bird stand right
 2908                           
 2909                           ; Bird left or climbing ------------------------------------------
 2910                           
 2911   3EC1                    L2598:
 2912   3EC1   BD 0A 04                     lda L040A,X            ; Get bird x-pos bytes
 2913   3EC4   85 8B                        sta L008B
 2914   3EC6   BD 0F 04                     lda L040F,X            ; Get bird y-pos bytes
 2915   3EC9   85 8C                        sta L008C
 2916                           
 2917   3ECB   A9 00                        lda #$00               ; Reset bird spritenr
 2918   3ECD   85 8D                        sta L008D
 2919                           
 2920   3ECF   A6 8B                        ldx L008B              ; Check floor left
 2921   3ED1   A4 8C                        ldy L008C
 2922   3ED3   CA                           dex
 2923   3ED4   20 B0 3D                     jsr L2487              ; Get background nr
 2924   3ED7   29 01                        and #$01
 2925   3ED9   F0 02                        beq L25B5              ; Floor left= air or ladder
 2926                           
 2927   3EDB   85 8D                        sta L008D              ; Bird sprite=walk
 2928                           
 2929   3EDD   A6 8B            L25B5:      ldx L008B              ; Check floor right
 2930   3EDF   A4 8C                        ldy L008C
 2931   3EE1   E8                           inx
 2932   3EE2   20 B0 3D                     jsr L2487              ; Get background nr
 2933   3EE5   29 01                        and #$01
 2934   3EE7   F0 06                        beq L25C8              ; Floor right= air or ladder
 2935                           
 2936   3EE9   A9 02                        lda #$02               ; Bird sprite=walk left
 2937   3EEB   05 8D                        ora L008D
 2938   3EED   85 8D                        sta L008D
 2939                           
 2940   3EEF   A6 8B            L25C8:      ldx L008B              ; Check floor below
 2941   3EF1   A4 8C                        ldy L008C
 2942                           
 2943   3EF3   20 B0 3D                     jsr L2487              ; Get background nr below
 2944   3EF6   29 02                        and #$02               ; Check ladder
 2945   3EF8   F0 06                        beq L25DA              ; Floor below=ladder
 2946                           
 2947   3EFA   A9 08                        lda #$08               ; Bird sprite=eat left
 2948   3EFC   05 8D                        ora L008D
 2949   3EFE   85 8D                        sta L008D
 2950                           
 2951   3F00   A6 8B            L25DA:      ldx L008B              ; Check floor above
 2952   3F02   A4 8C                        ldy L008C
 2953   3F04   C8                           iny
 2954   3F05   C8                           iny
 2955   3F06   C8                       iny
 2956   3F07   20 B0 3D                     jsr L2487              ; Get background nr
 2957   3F0A   29 02                        and #$02
 2958   3F0C   F0 06                        beq L25ED              ; Floor above is air or ladder
 2959                           
 2960   3F0E   A9 04                        lda #$04               ; Bird sprite=climb
 2961   3F10   05 8D                        ora L008D
 2962   3F12   85 8D                        sta L008D
 2963                           
 2964   3F14   20 95 3F         L25ED:      jsr L266C              ; 20 6C 26
 2965   3F17   E0 01                        cpx #$01               ; E0 01
 2966   3F19   D0 0A                        bne L25FE              ; D0 0A
 2967                           
 2968   3F1B   A5 8D                        lda L008D              ; Get sprite nr
 2969   3F1D   A6 88                        ldx L0088              ; Get bird nr
 2970   3F1F   9D 1E 04                     sta L041E,X            ; Save ???
 2971   3F22   4C 65 3F                     jmp L263E
 2972                           
 2973   3F25   A6 88            L25FE:      ldx L0088              ; Get bird nr
 2974   3F27   BD 1E 04                     lda L041E,X            ; Get spritenr
 2975   3F2A   C9 04                        cmp #$04               ; 
 2976   3F2C   B0 05                        bcs L260C              ; B0 05
 2977   3F2E   49 FC                        eor #$FC               ; Bird eat/climb -> stand
 2978   3F30   4C 35 3F                     jmp L260E
 2979                           
 2980   3F33   49 F3            L260C:      eor #$F3               ; Bird stand -> eat
 2981                           
 2982   3F35   25 8D            L260E:      and L008D              ; 25 8D
 2983   3F37   85 8D                        sta L008D              ; 85 8D
 2984   3F39   20 95 3F                     jsr L266C              ; 20 6C 26
 2985   3F3C   E0 01                        cpx #$01               ; E0 01
 2986   3F3E   D0 0A                        bne L2623              ; D0 0A
 2987                           
 2988   3F40   A6 88                        ldx L0088              ; Get bird nr
 2989   3F42   A5 8D                        lda L008D              ; Get sprite nr
 2990   3F44   9D 1E 04                     sta L041E,X            ; Save ???
 2991   3F47   4C 65 3F                     jmp L263E
 2992                           
 2993   3F4A   A5 8D            L2623:      lda L008D              ; Get sprite nr
 2994   3F4C   85 8E                        sta L008E              ; Save 
 2995                           
 2996   3F4E   20 EA 33         L2627:      jsr L1AA0              ; Get random nr
 2997   3F51   A5 66                        lda L0066              ; A5 66
 2998   3F53   25 8E                        and L008E              ; 25 8E
 2999   3F55   85 8D                        sta L008D              ; 85 8D
 3000   3F57   20 95 3F                     jsr L266C              ; 20 6C 26
 3001   3F5A   E0 01                        cpx #$01               ; E0 01
 3002   3F5C   D0 F0                        bne L2627              ; D0 F0
 3003                           
 3004   3F5E   A6 88                        ldx L0088              ; A6 88
 3005   3F60   A5 8D                        lda L008D              ; A5 8D
 3006   3F62   9D 1E 04                     sta L041E,X            ; 9D 1E 04
 3007                           
 3008   3F65   A6 88            L263E:      ldx L0088              ; A6 88
 3009   3F67   BD 1E 04                     lda L041E,X            ; BD 1E 04
 3010   3F6A   29 03                        and #$03               ; 29 03
 3011   3F6C   F0 6E                        beq L26B2              ; F0 6B
 3012   3F6E   29 01                        and #$01               ; 29 01
 3013   3F70   F0 0C                        beq L2656              ; F0 0B
 3014                           
 3015   3F72   A6 8B                        ldx L008B              ; Get background left from bird
 3016   3F74   A4 8C                        ldy L008C
 3017   3F76   CA                           dex
 3018   3F77   C8                       iny                        ; UPDATE FOR EATING SEED LEFT
 3019   3F78   20 B0 3D                     jsr L2487              ; Get background nr
 3020   3F7B   4C 87 3F                     jmp L265E
 3021                           
 3022   3F7E   A6 8B            L2656:      ldx L008B              ; Get background right from bird
 3023   3F80   A4 8C                        ldy L008C
 3024   3F82   E8                           inx
 3025   3F83   C8                       iny                        ; UPDATE FOR EATING SEED RIGHT
 3026   3F84   20 B0 3D                     jsr L2487              ; Get background nr
 3027                           
 3028   3F87   29 08            L265E:      and #$08               ; Check if background=seed
 3029   3F89   F0 51                        beq L26B2              ; No seed
 3030                           
 3031   3F8B   A6 88                        ldx L0088              ; Update bird sprite
 3032   3F8D   A9 02                        lda #$02
 3033   3F8F   9D 14 04                     sta L0414,X
 3034   3F92   4C DC 3F                     jmp L26B2
 3035                           
 3036                           ;------------------------------------------------
 3037                           ; Check nr of 1's in spritenr.
 3038                           ;------------------------------------------------
 3039                           
 3040   3F95   A2 00            L266C:      ldx #$00               ; A2 00
 3041   3F97   A5 8D                        lda L008D              ; A5 8D
 3042   3F99   4A               L2670:      lsr A                  ; 4A
 3043   3F9A   90 01                        bcc L2674              ; 90 01
 3044   3F9C   E8                           inx                    ; E8
 3045   3F9D   C9 00            L2674:      cmp #$00               ; C9 00
 3046   3F9F   D0 F8                        bne L2670              ; D0 F8
 3047   3FA1   60                           rts                    ; 60
 3048                           
 3049                           ; Bird right ---------------------------------------------
 3050                           
 3051   3FA2   C9 04            L2679:      cmp #$04               ; C9 04
 3052   3FA4   D0 36                        bne L26B2              ; D0 35
 3053   3FA6   BD 1E 04                     lda L041E,X            ; BD 1E 04
 3054   3FA9   BC 0A 04                     ldy L040A,X            ; BC 0A 04
 3055   3FAC   84 8B                        sty L008B              ; 84 8B
 3056   3FAE   BC 0F 04                     ldy L040F,X            ; BC 0F 04
 3057                           
 3058   3FB1   C8                       iny                        ; UPDATE ERASE SEED RIGHT
 3059   3FB2   84 8C                        sty L008C              ; Save Y
 3060   3FB4   A6 8B                        ldx L008B
 3061   3FB6   CA                           dex
 3062   3FB7   29 01                        and #$01               ; 29 01
 3063   3FB9   D0 02                        bne L2693              ; D0 02
 3064   3FBB   E8                           inx                    ; E8
 3065   3FBC   E8                           inx                    ; E8
 3066   3FBD   86 8D            L2693:      stx L008D              ; Save X
 3067   3FBF   20 B0 3D                     jsr L2487              ; Get background nr
 3068   3FC2   85 89                        sta L0089
 3069   3FC4   29 08                        and #$08               ; Check if background=seed
 3070   3FC6   F0 14                        beq L26B2              ; No seed
 3071                           
 3072   3FC8   A5 89                        lda L0089              ; Calculate seed pointer
 3073   3FCA   4A                           lsr A
 3074   3FCB   4A                           lsr A
 3075   3FCC   4A                           lsr A
 3076   3FCD   4A                           lsr A
 3077   3FCE   18                           clc
 3078   3FCF   65 4E                        adc L004E
 3079   3FD1   AA                           tax
 3080   3FD2   DE 20 05                     dec L0520,X            ; Mark seed as taken
 3081   3FD5   A6 8D                        ldx L008D
 3082   3FD7   A4 8C                        ldy L008C
 3083   3FD9   20 C5 3C                     jsr L239C              ; Erase seed
 3084                           
 3085   3FDC   20 37 3D         L26B2:      jsr L240E              ; Plot bird
 3086   3FDF   A6 88                        ldx L0088              ; Get bird nr
 3087   3FE1   BD 14 04                     lda L0414,X            ; Get bird sprite
 3088   3FE4   C9 02                        cmp #$02               ; Bird stand left?
 3089   3FE6   B0 7A                        bcs L2738              ; No, was bird right
 3090                           
 3091   3FE8   BD 1E 04                     lda L041E,X            ; BD 1E 04
 3092   3FEB   4A                           lsr A                  ; 4A
 3093   3FEC   B0 32                        bcs L26F6              ; B0 32
 3094   3FEE   4A                           lsr A                  ; 4A
 3095   3FEF   B0 45                        bcs L270C              ; B0 45
 3096   3FF1   4A                           lsr A                  ; 4A
 3097   3FF2   B0 16                        bcs L26E0              ; B0 16
 3098                           
 3099   3FF4   BD 05 04                     lda L0405,X            ; BD 05 04
 3100   3FF7   38                           sec                    ; 38
 3101   3FF8   E9 04                        sbc #$04               ; E9 04
 3102   3FFA   9D 05 04                     sta L0405,X            ; 9D 05 04
 3103   3FFD   BD 14 04                     lda L0414,X            ; BD 14 04
 3104   4000   F0 03                        beq L26DB              ; F0 03
 3105   4002   DE 0F 04                     dec L040F,X            ; DE 0F 04
 3106   4005   A9 04            L26DB:      lda #$04               ; A9 04
 3107   4007   4C 4C 40                     jmp L2722              ; 4C 22 27
 3108                           
 3109   400A   BD 05 04         L26E0:      lda L0405,X            ; BD 05 04
 3110   400D   18                           clc                    ; 18
 3111   400E   69 04                        adc #$04               ; 69 04
 3112   4010   9D 05 04                     sta L0405,X            ; 9D 05 04
 3113   4013   BD 14 04                     lda L0414,X            ; BD 14 04
 3114   4016   F0 03                        beq L26F1              ; F0 03
 3115   4018   FE 0F 04                     inc L040F,X            ; FE 0F 04
 3116   401B   A9 04            L26F1:      lda #$04               ; A9 04
 3117   401D   4C 4C 40                     jmp L2722              ; 4C 22 27
 3118                           
 3119   4020   BD 00 04         L26F6:      lda L0400,X            ; BD 00 04
 3120   4023   38                           sec                    ; 38
 3121   4024   E9 04                        sbc #$04               ; E9 04
 3122   4026   9D 00 04                     sta L0400,X            ; 9D 00 04
 3123   4029   BD 14 04                     lda L0414,X            ; BD 14 04
 3124   402C   F0 03                        beq L2707              ; F0 03
 3125   402E   DE 0A 04                     dec L040A,X            ; DE 0A 04
 3126   4031   A9 02            L2707:      lda #$02               ; A9 02
 3127   4033   4C 4C 40                     jmp L2722              ; 4C 22 27
 3128                           
 3129   4036   BD 00 04         L270C:      lda L0400,X            ; BD 00 04
 3130   4039   18                           clc                    ; 18
 3131   403A   69 04                        adc #$04               ; 69 04
 3132   403C   9D 00 04                     sta L0400,X            ; 9D 00 04
 3133   403F   BD 14 04                     lda L0414,X            ; BD 14 04
 3134   4042   F0 03                        beq L271D              ; F0 03
 3135   4044   FE 0A 04                     inc L040A,X            ; FE 0A 04
 3136   4047   A9 00            L271D:      lda #$00               ; A9 00
 3137   4049   4C 4C 40                     jmp L2722              ; 4C 22 27
 3138   404C   9D 19 04         L2722:      sta L0419,X            ; 9D 19 04
 3139   404F   BD 14 04                     lda L0414,X            ; BD 14 04
 3140   4052   49 01                        eor #$01               ; 49 01
 3141   4054   9D 14 04                     sta L0414,X            ; 9D 14 04
 3142   4057   18                           clc                    ; 18
 3143   4058   7D 19 04                     adc L0419,X            ; 7D 19 04
 3144   405B   9D 19 04                     sta L0419,X            ; 9D 19 04
 3145   405E   20 FD 3C                     jsr L23D4              ; 20 D4 23
 3146   4061   60                           rts                    ; 60
 3147                           
 3148   4062   BD 14 04         L2738:      lda L0414,X            ; BD 14 04
 3149   4065   0A                           asl A                  ; 0A
 3150   4066   29 1F                        and #$1F               ; 29 1F
 3151   4068   9D 14 04                     sta L0414,X            ; 9D 14 04
 3152   406B   F0 02                        beq L2745              ; F0 02
 3153   406D   A9 06                        lda #$06               ; A9 06
 3154   406F   BC 1E 04         L2745:      ldy L041E,X            ; BC 1E 04
 3155   4072   C0 01                        cpy #$01               ; C0 01
 3156   4074   D0 03                        bne L274F              ; D0 03
 3157   4076   18                           clc                    ; 18
 3158   4077   69 02                        adc #$02               ; 69 02
 3159   4079   BC 14 04         L274F:      ldy L0414,X            ; BC 14 04
 3160   407C   C0 08                        cpy #$08               ; C0 08
 3161   407E   D0 03                        bne L2759              ; D0 03
 3162   4080   18                           clc                    ; 18
 3163   4081   69 01                        adc #$01               ; 69 01
 3164   4083   9D 19 04         L2759:      sta L0419,X            ; 9D 19 04
 3165   4086   20 FD 3C                     jsr L23D4              ; 20 D4 23
 3166   4089   60                           rts                    ; 60
 3167                           
 3168                           ;------------------------------------------------
 3169                           ; Update timer
 3170                           ;------------------------------------------------
 3171                           
 3172   408A                    L2760:
 3173   408A   A9 C0                        lda #red               ; Color magenta
 3174   408C   85 7F                        sta L007F
 3175   408E   A5 1C                        lda L001C
 3176   4090   F0 03                        beq L276B
 3177   4092   C6 1C                        dec L001C              ; If timer counter>0 decrement
 3178   4094   60                           rts
 3179                           
 3180   4095   A2 02            L276B:      ldx #$02               ; A2 02
 3181   4097   86 88                        stx L0088              ; 86 88
 3182   4099   20 EF 40         L276F:      jsr L27C5              ; 20 C5 27
 3183   409C   A6 88                        ldx L0088              ; A6 88
 3184   409E   D6 1D                        dec L001D,X            ; D6 1D
 3185   40A0   08                           php                    ; 08
 3186   40A1   10 04                        bpl L277D              ; 10 04
 3187   40A3   A9 09                        lda #$09               ; A9 09
 3188   40A5   95 1D                        sta L001D,X            ; 95 1D
 3189   40A7   20 EF 40         L277D:      jsr L27C5              ; 20 C5 27
 3190   40AA   C6 88                        dec L0088              ; C6 88
 3191   40AC   28                           plp                    ; 28
 3192   40AD   30 EA                        bmi L276F              ; 30 EA
 3193   40AF   18                           clc                    ; 18
 3194   40B0   A5 1D                        lda L001D              ; A5 1D
 3195   40B2   65 1E                        adc L001E              ; 65 1E
 3196   40B4   65 1F                        adc L001F              ; 65 1F
 3197   40B6   D0 03                        bne L2791              ; D0 03
 3198   40B8   E6 4F                        inc L004F              ; E6 4F
 3199   40BA   60                           rts                    ; 60
 3200                           
 3201   40BB   A5 1F            L2791:      lda L001F              ; A5 1F
 3202   40BD   F0 05                        beq L279A              ; F0 05
 3203   40BF   C9 05                        cmp #$05               ; C9 05
 3204   40C1   F0 01                        beq L279A              ; F0 01
 3205   40C3   60                           rts                    ; 60
 3206                           
 3207   40C4   A5 3D            L279A:      lda L003D              ; A5 3D
 3208   40C6   F0 01                        beq L279F              ; F0 01
 3209   40C8   60                           rts                    ; 60
 3210                           
 3211                           ;------------------------------------------------
 3212                           ; Update bonus
 3213                           ;------------------------------------------------
 3214                           
 3215   40C9   A2 02            L279F:      ldx #$02               ; A2 02
 3216   40CB   86 88                        stx L0088              ; 86 88
 3217                           
 3218   40CD   20 00 41         L27A3:      jsr L27D8              ; 20 D8 27
 3219   40D0   A6 88                        ldx L0088              ; A6 88
 3220   40D2   D6 3A                        dec L003A,X            ; D6 3A
 3221   40D4   08                           php                    ; 08
 3222   40D5   10 04                        bpl L27B1              ; 10 04
 3223   40D7   A9 09                        lda #$09               ; A9 09
 3224   40D9   95 3A                        sta L003A,X            ; 95 3A
 3225   40DB   20 00 41         L27B1:      jsr L27D8              ; 20 D8 27
 3226   40DE   C6 88                        dec L0088              ; C6 88
 3227   40E0   28                           plp                    ; 28
 3228   40E1   30 EA                        bmi L27A3              ; 30 EA
 3229   40E3   18                           clc                    ; 18
 3230   40E4   A5 3A                        lda L003A              ; A5 3A
 3231   40E6   65 3B                        adc L003B              ; 65 3B
 3232   40E8   65 3C                        adc L003C              ; 65 3C
 3233   40EA   D0 02                        bne L27C4              ; D0 02
 3234   40EC   E6 3D                        inc L003D              ; E6 3D
 3235   40EE   60               L27C4:      rts                    ; 60
 3236                           
 3237   40EF   A5 88            L27C5:      lda L0088              ; Update time
 3238   40F1   A8                           tay                    ; A8
 3239   40F2   0A                           asl A                  ; 0A
 3240   40F3   0A                           asl A                  ; 0A
 3241   40F4   69 74                        adc #116               ; 69 91
 3242   40F6   AA                           tax                    ; AA
 3243   40F7   B9 1D 00                     lda L001D,Y            ; Get time digit
 3244   40FA   A0 B2                        ldy #178               ; A0 E7
 3245   40FC   20 47 34                     jsr L1AFD              ; 20 FD 1A
 3246   40FF   60                           rts                    ; 60
 3247                           
 3248   4100   A5 88            L27D8:      lda L0088              ; Update bonus
 3249   4102   A8                           tay                    ; A8
 3250   4103   0A                           asl A                  ; 0A
 3251   4104   0A                           asl A                  ; 0A
 3252   4105   69 52                        adc #82               ; 69 66
 3253   4107   AA                           tax                    ; AA
 3254   4108   B9 3A 00                     lda L003A,Y            ; Get bonus digit
 3255   410B   A0 B2                        ldy #178
 3256   410D   20 47 34                     jsr L1AFD              ; Print
 3257   4110   60                           rts
 3258                           
 3259   4111   A5 57            L27EB:      lda L0057              ; A5 57
 3260   4113   F0 2C                        beq L281B              ; F0 2C
 3261   4115   A9 00                        lda #$00               ; A9 00
 3262   4117   85 8A                        sta L008A              ; 85 8A
 3263   4119   A6 8A            L27F3:      ldx L008A              ; A6 8A
 3264   411B   BD 00 04                     lda L0400,X            ; BD 00 04
 3265   411E   38                           sec                    ; 38
 3266   411F   E5 40                        sbc L0040              ; E5 40
 3267   4121   18                           clc                    ; 18
 3268   4122   69 05                        adc #$05               ; 69 05
 3269   4124   C9 0B                        cmp #$0B               ; C9 0B
 3270   4126   B0 11                        bcs L2813              ; B0 11
 3271   4128   BD 05 04                     lda L0405,X            ; BD 05 04
 3272   412B   38                           sec                    ; 38
 3273   412C   E9 01                        sbc #$01               ; E9 01
 3274   412E   E5 41                        sbc L0041              ; E5 41
 3275   4130   18                           clc                    ; 18
 3276   4131   69 0E                        adc #$0E               ; 69 0E
 3277   4133   C9 1D                        cmp #$1D               ; C9 1D
 3278   4135   B0 02                        bcs L2813              ; B0 02
 3279   4137   E6 4F                        inc L004F              ; E6 4F
 3280   4139   E6 8A            L2813:      inc L008A              ; E6 8A
 3281   413B   A5 8A                        lda L008A              ; A5 8A
 3282   413D   C5 57                        cmp L0057              ; C5 57
 3283   413F   90 D8                        bcc L27F3              ; 90 D8
 3284   4141   A5 35            L281B:      lda L0035              ; A5 35
 3285   4143   F0 1F                        beq L283E              ; F0 1F
 3286   4145   A5 30                        lda L0030              ; A5 30
 3287   4147   18                           clc                    ; 18
 3288   4148   69 04                        adc #$04               ; 69 04
 3289   414A   38                           sec                    ; 38
 3290   414B   E5 40                        sbc L0040              ; E5 40
 3291   414D   18                           clc                    ; 18
 3292   414E   69 05                        adc #$05               ; 69 05
 3293   4150   C9 0B                        cmp #$0B               ; C9 0B
 3294   4152   B0 10                        bcs L283E              ; B0 10
 3295   4154   A5 31                        lda L0031              ; A5 31
 3296   4156   38                           sec                    ; 38
 3297   4157   E9 05                        sbc #$05               ; E9 05
 3298   4159   E5 41                        sbc L0041              ; E5 41
 3299   415B   18                           clc                    ; 18
 3300   415C   69 0E                        adc #$0E               ; 69 0E
 3301   415E   C9 1D                        cmp #$1D               ; C9 1D
 3302   4160   B0 02                        bcs L283E              ; B0 02
 3303   4162   E6 4F                        inc L004F              ; E6 4F
 3304   4164   60               L283E:      rts                    ; 60
 3305                           
 3306                           ;------------------------------------------------
 3307                           ; Calculate address high score from X in $76/$77
 3308                           ;------------------------------------------------
 3309                           
 3310   4165   A9 00            L283F:      lda #$00
 3311   4167   85 77                        sta L0077
 3312   4169   CA                           dex
 3313   416A   8A                           txa
 3314   416B   0A                           asl A
 3315   416C   0A                           asl A
 3316   416D   0A                           asl A
 3317   416E   26 77                        rol L0077
 3318   4170   0A                           asl A
 3319   4171   26 77                        rol L0077
 3320   4173   18                           clc
 3321   4174   69 30                        adc #$30
 3322   4176   85 76                        sta L0076
 3323   4178   A5 77                        lda L0077
 3324   417A   69 04                        adc #$04
 3325   417C   85 77                        sta L0077
 3326   417E   60                           rts
 3327                           
 3328                           ;------------------------------------------------
 3329                           ; Fill 10x high score names with A&F
 3330                           ; $430 0,0,0,0,1,0,0,0,A&F.....
 3331                           ; $440 0,0,0,0,1,0,0,0,A&F.....
 3332                           ;  ..             ..
 3333                           ; $4C0 0,0,0,0,1,0,0,0,A&F.....
 3334                           ;------------------------------------------------
 3335                           
 3336   417F   A9 0A            L2859:      lda #$0A               ; A9 0A
 3337   4181   85 8A                        sta L008A              ; 85 8A
 3338                           
 3339   4183   A6 8A            L285D:      ldx L008A              ; A6 8A
 3340   4185   20 65 41                     jsr L283F              ; 20 3F 28
 3341   4188   A0 0F                        ldy #$0F               ; A0 0F
 3342   418A   A9 20                        lda #" "               ; A9 20
 3343   418C   91 76            L2866:      sta (L0076),Y          ; 91 76
 3344   418E   88                           dey                    ; 88
 3345   418F   C0 0A                        cpy #$0A               ; C0 0A
 3346   4191   D0 F9                        bne L2866              ; D0 F9
 3347   4193   A9 46                        lda #$46               ; A9 46
 3348   4195   91 76                        sta (L0076),Y          ; 91 76
 3349   4197   88                           dey                    ; 88
 3350   4198   A9 26                        lda #$26               ; A9 26
 3351   419A   91 76                        sta (L0076),Y          ; 91 76
 3352   419C   88                           dey                    ; 88
 3353   419D   A9 41                        lda #$41               ; A9 41
 3354   419F   91 76                        sta (L0076),Y          ; 91 76
 3355   41A1   88                           dey                    ; 88
 3356   41A2   A9 00                        lda #$00               ; A9 00
 3357   41A4   91 76            L287E:      sta (L0076),Y          ; 91 76
 3358   41A6   88                           dey                    ; 88
 3359   41A7   10 FB                        bpl L287E              ; 10 FB
 3360   41A9   A9 01                        lda #$01               ; A9 01
 3361   41AB   A0 04                        ldy #$04               ; A0 04
 3362   41AD   91 76                        sta (L0076),Y          ; 91 76
 3363   41AF   C6 8A                        dec L008A              ; C6 8A
 3364   41B1   D0 D0                        bne L285D              ; D0 D0
 3365   41B3   60                           rts                    ; 60
 3366                           ;------------------------------------------------
 3367                           ; Lookup score in High Score table
 3368                           ; - Fill in score
 3369                           ; - Erase name
 3370                           ;------------------------------------------------
 3371                           
 3372   41B4   A9 01            L288E:      lda #$01               ; Entry High score table
 3373   41B6   85 8A                        sta L008A
 3374                           
 3375   41B8   A6 8A            L2892:      ldx L008A
 3376   41BA   20 65 41                     jsr L283F              ; Calc High Score address in X
 3377                           
 3378   41BD   A0 00                        ldy #$00               ; Compare score with High Score
 3379   41BF   B1 76            L2899:      lda (L0076),Y          ; B1 76
 3380   41C1   D9 28 00                     cmp L0028,Y            ; D9 28 00
 3381   41C4   30 10                        bmi L28B0              ; 30 10
 3382   41C6   D0 05                        bne L28A7              ; D0 05
 3383   41C8   C8                           iny                    ; C8
 3384   41C9   C0 08                        cpy #$08               ; C0 08
 3385   41CB   D0 F2                        bne L2899              ; D0 F2
 3386   41CD   E6 8A            L28A7:      inc L008A              ; E6 8A
 3387   41CF   A5 8A                        lda L008A              ; A5 8A
 3388   41D1   C9 0B                        cmp #$0B               ; C9 0B
 3389   41D3   90 E3                        bcc L2892              ; 90 E3
 3390   41D5   60                           rts                    ; 60
 3391                           
 3392   41D6   20 EF 41         L28B0:      jsr L28C9              ; 20 C9 28
 3393                           
 3394   41D9   A0 07                        ldy #$07               ; Fill score in High Score table
 3395   41DB   B9 28 00         L28B5:      lda L0028,Y
 3396   41DE   91 76                        sta (L0076),Y
 3397   41E0   88                           dey
 3398   41E1   10 F8                        bpl L28B5
 3399                           
 3400   41E3   A0 0F                        ldy #$0F               ; Clear High Score name
 3401   41E5   A9 20                        lda #$20
 3402   41E7   91 76            L28C1:      sta (L0076),Y
 3403   41E9   88                           dey
 3404   41EA   C0 07                        cpy #$07
 3405   41EC   D0 F9                        bne L28C1
 3406   41EE   60                           rts
 3407                           
 3408                           ;------------------------------------------------
 3409                           ; Insert new High Score entry
 3410                           ;------------------------------------------------
 3411                           
 3412   41EF   A9 09            L28C9:      lda #$09               ; A9 09
 3413   41F1   85 8B                        sta L008B              ; 85 8B
 3414   41F3   A6 8B            L28CD:      ldx L008B              ; A6 8B
 3415   41F5   E4 8A                        cpx L008A              ; E4 8A
 3416   41F7   90 22                        bcc L28F5              ; 90 22
 3417   41F9   20 65 41                     jsr L283F              ; Calc High Score address in X
 3418                           
 3419   41FC   A0 0F                        ldy #$0F               ; A0 0F
 3420   41FE   B1 76            L28D8:      lda (L0076),Y          ; B1 76
 3421   4200   99 30 00                     sta L0030,Y            ; 99 30 00
 3422   4203   88                           dey                    ; 88
 3423   4204   10 F8                        bpl L28D8              ; 10 F8
 3424   4206   A6 8B                        ldx L008B              ; A6 8B
 3425   4208   E8                           inx                    ; E8
 3426   4209   20 65 41                     jsr L283F              ; Calc High Score address in X
 3427                           
 3428   420C   A0 0F                        ldy #$0F               ; A0 0F
 3429   420E   B9 30 00         L28E8:      lda L0030,Y            ; B9 30 00
 3430   4211   91 76                        sta (L0076),Y          ; 91 76
 3431   4213   88                           dey                    ; 88
 3432   4214   10 F8                        bpl L28E8              ; 10 F8
 3433   4216   C6 8B                        dec L008B              ; C6 8B
 3434   4218   4C F3 41                     jmp L28CD              ; 4C CD 28
 3435                           
 3436   421B   A6 8A            L28F5:      ldx L008A              ; A6 8A
 3437   421D   20 65 41                     jsr L283F              ; Calc High Score address in X
 3438   4220   60                           rts                    ; 60
 3439                           
 3440                           ;------------------------------------------------
 3441                           ; Print intro screen with high scores
 3442                           ;------------------------------------------------
 3443                           
 3444   4221   A9 01            L28FB:      lda #$01
 3445   4223   85 8A                        sta L008A              ; Reset counter
 3446                           
 3447   4225   A2 3C                        ldx #<L2A02            ; Print 'HIGH SCORES'
 3448   4227   A0 43                        ldy #>L2A02
 3449   4229   20 85 33                     jsr L1A22
 3450   422C                    L2910:
 3451   422C   A5 8A                        lda L008A              ; Set y-pos
 3452   422E   18                           clc
 3453   422F   69 08                        adc #8
 3454   4231   8D 4C 43                     sta L2A1A+1
 3455                           
 3456   4234   A9 20                        lda #$20               ; Set entry nr
 3457   4236   A6 8A                        ldx L008A
 3458   4238   86 8B                        stx L008B
 3459   423A   E0 0A                        cpx #$0A
 3460   423C   D0 06                        bne L2927
 3461   423E   A9 31                        lda #$31
 3462   4240   A2 00                        ldx #$00
 3463   4242   86 8B                        stx L008B
 3464   4244   8D 4D 43         L2927:      sta L2A1A+2            ; Set 1st digit entry
 3465   4247   A5 8B            L292A:      lda L008B
 3466   4249   18                           clc
 3467   424A   69 30                        adc #$30
 3468   424C   8D 4E 43                     sta L2A1A+3            ; Set 2nd digit entry
 3469                           
 3470   424F   A6 8A                        ldx L008A
 3471   4251   20 65 41                     jsr L283F              ; Calc score entry in $76/$77
 3472                           
 3473   4254   A0 00                        ldy #$00               ; Print score
 3474   4256   84 8B                        sty L008B
 3475   4258   B1 76            L293B:      lda (L0076),Y
 3476   425A   D0 09                        bne L2948
 3477   425C   A6 8B                        ldx L008B
 3478   425E   D0 05                        bne L2948
 3479   4260   A9 20                        lda #$20               ; Skip leading 0
 3480   4262   4C 6A 42                     jmp L294D
 3481   4265   18               L2948:      clc
 3482   4266   69 30                        adc #$30
 3483   4268   E6 8B                        inc L008B
 3484   426A                    L294D:
 3485   426A   99 50 43                     sta L2A1A+5,y
 3486   426D   C8                           iny
 3487   426E   C0 08                        cpy #$08
 3488   4270   90 E6                        bcc L293B
 3489                           
 3490   4272   B1 76            L295A:      lda (L0076),Y
 3491   4274   99 51 43                     sta L2A1A+6,y
 3492   4277   C8                           iny
 3493   4278   C0 10                        cpy #$10
 3494   427A   90 F6                        bcc L295A
 3495                           
 3496   427C   A2 4B                        ldx #<L2A1A            ; Print string $2A1A
 3497   427E   A0 43                        ldy #>L2A1A
 3498   4280   20 85 33                     jsr L1A22
 3499                           
 3500   4283   E6 8A                        inc L008A              ; If <11, next entry
 3501   4285   A5 8A                        lda L008A
 3502   4287   C9 0B                        cmp #$0B
 3503   4289   F0 03                        beq L2980
 3504   428B   4C 2C 42                     jmp L2910
 3505                           
 3506   428E   60               L2980:      rts
 3507                           
 3508                           ;------------------------------------------------
 3509                           ; Input High Score name
 3510                           ;------------------------------------------------
 3511                           
 3512   428F   20 B4 41         L2981:      jsr L288E              ; Look up score in High Score table
 3513   4292   A5 8A                        lda L008A
 3514   4294   C9 0B                        cmp #$0B               ; If in High Score table branch
 3515   4296   D0 01                        bne L298B
 3516   4298   60                           rts
 3517                           
 3518   4299   85 88            L298B:      sta L0088              ; Save High Score entry
 3519                           
 3520   429B   18                       clc                        ; Set cursor pos
 3521   429C   69 08                    adc #8
 3522   429E   8D 6C 43                 sta L2A29+1
 3523                           
 3524   42A1                    L29B3:
 3525   42A1   A5 5D                        lda L005D              ; Set Playernr
 3526   42A3   18                           clc
 3527   42A4   69 31                        adc #$31
 3528   42A6   8D 8B 43                     sta L2A2D+9
 3529                           
 3530   42A9   A9 A0                        lda #<$82a0
 3531   42AB   85 90                        sta $90
 3532   42AD   A9 82                        lda #>$82a0
 3533   42AF   85 91                        sta $91
 3534   42B1   A9 00                        lda #0
 3535   42B3   20 EA 51                     jsr clear
 3536                           
 3537   42B6   A2 70                        ldx #<L2A2C            ; Print 'ENTER YOUR NAME Player '
 3538   42B8   A0 43                        ldy #>L2A2C
 3539   42BA   20 85 33                     jsr L1A22
 3540                           
 3541   42BD   20 21 42                     jsr L28FB              ; Print High Scores
 3542                           
 3543   42C0   A2 6B                        ldx #<L2A29            ; Locate cursor and print '>'
 3544   42C2   A0 43                        ldy #>L2A29
 3545   42C4   20 85 33                     jsr L1A22
 3546                           
 3547   42C7   A2 00                    ldx #0
 3548   42C9   8E 3B 43                 stx tmp_x
 3549   42CC                    L29B5:
 3550   42CC   AC 6C 43                 ldy L2A29+1
 3551   42CF   AD 3B 43                 lda tmp_x
 3552   42D2   18                       clc
 3553   42D3   69 12                    adc #18
 3554   42D5   AA                       tax
 3555   42D6   A9 7F                    lda #127
 3556   42D8   20 B2 56                 jsr PUTCHAR
 3557                           
 3558   42DB   20 94 FE                 jsr $fe94   ; Get character
 3559   42DE   AE 3B 43                 ldx tmp_x
 3560   42E1   9D 93 43                 sta L2A65,x
 3561   42E4   C9 0D                    cmp #$0d    ; Return pressed, end input
 3562   42E6   F0 23                    beq L29B6
 3563   42E8   C9 7F                    cmp #$7f    ; Backspace pressed
 3564   42EA   F0 35                    beq L2A00
 3565                           
 3566   42EC   48                       pha
 3567   42ED   AC 6C 43                 ldy L2A29+1
 3568   42F0   AD 3B 43                 lda tmp_x
 3569   42F3   18                       clc
 3570   42F4   69 12                    adc #18
 3571   42F6   AA                       tax
 3572   42F7   68                       pla
 3573   42F8   20 B2 56                 jsr PUTCHAR
 3574                           
 3575   42FB   EE 3B 43                 inc tmp_x
 3576   42FE   AD 3B 43                 lda tmp_x
 3577   4301   C9 09                    cmp #9
 3578   4303   D0 C7                    bne L29B5
 3579   4305   CE 3B 43                 dec tmp_x
 3580   4308   4C CC 42                 jmp L29B5
 3581   430B                    L29B6:
 3582   430B   A6 88                        ldx L0088              ; Calculate High Score table Address
 3583   430D   20 65 41                     jsr L283F
 3584                           
 3585                           
 3586   4310   A0 08                        ldy #$08               ; Copy name into High Score table
 3587   4312   B9 8B 43         L29F3:      lda L2A65-8,Y
 3588   4315   C9 0D                        cmp #$0D
 3589   4317   F0 07                        beq L2A01
 3590   4319   91 76                        sta (L0076),Y
 3591   431B   C8                           iny
 3592   431C   C0 10                        cpy #$10
 3593   431E   90 F2                        bcc L29F3
 3594   4320   60               L2A01:      rts
 3595                           
 3596   4321                    L2A00:
 3597   4321   AD 3B 43                 lda tmp_x  ; Handle backspace
 3598   4324   F0 A6                    beq L29B5
 3599                           
 3600   4326   AC 6C 43                 ldy L2A29+1
 3601   4329   AD 3B 43                 lda tmp_x
 3602   432C   18                       clc
 3603   432D   69 12                    adc #18
 3604   432F   AA                       tax
 3605   4330   A9 20                    lda #' '
 3606   4332   20 B2 56                 jsr PUTCHAR
 3607   4335   CE 3B 43                 dec tmp_x
 3608   4338   4C CC 42                 jmp L29B5
 3609                           
 3610   433B   00               tmp_x:      .db 0
 3611                           
 3612   433C   CA 06 48 49 47   L2A02:      .byte yellow+10,6,'HIGH SCORES',0,$ff
        4341   48 20 53 43 4F 
        4346   52 45 53 00 FF 
 3613                           
 3614   434B   C6 07 20 31 20   L2A1A:      .byte red+6,7,' 1     1000 A&F     ',0,$ff
        4350   20 20 20 20 31 
        4355   30 30 30 20 41 
        435A   26 46 20 20 20 
        435F   20 20 00 FF 
 3615                           
 3616   4363   0A               L2A21:      .byte $0A
 3617   4364   12 00 03                     .byte $12,$00,$03
 3618   4367   19 04 A0 02                  .byte $19,$04,$A0,$02
 3619                           
 3620   436B   D1 00 3E 00 FF   L2A29:      .byte yellow+17,0,'>',0,$ff
 3621                           
 3622   4370   C8 15 45 4E 54   L2A2C:      .byte yellow+8,21,'ENTER YOUR NAME',0
        4375   45 52 20 59 4F 
        437A   55 52 20 4E 41 
        437F   4D 45 00 
 3623   4382   CC 16 50 6C 61   L2A2D:      .byte red+12,22,'Player 1',0,$ff
        4387   79 65 72 20 31 
        438C   00 FF 
 3624                           
 3625   438E   65 2A 08 20 7F   L2A60:      .byte $65,$2A,$08,$20,$7F
 3626   4393   20 20 20 20 20   L2A65:      .byte $20,$20,$20,$20,$20,$20,$20,$20,$20 ; Name input
        4398   20 20 20 20 
 3627                           
 3628                           ;------------------------------------------------
 3629                           ;PROGRAM ENTRY
 3630                           ;------------------------------------------------
 3631   439C                    program_entry:
 3632                           
 3633   439C                    L2A6E:
 3634   439C   20 EB 44                 jsr L2BA5   ; Init
 3635   439F                    L2A71:
 3636   439F   20 F2 45                 jsr L2D4A   ; Loop screens until keypress
 3637                           
 3638   43A2   20 E2 51                 jsr clear4
 3639   43A5   20 2B 45                 jsr L2C68   ; Input 'How many players?'
 3640                           
 3641   43A8   A9 00                    lda #0      ; HACK--------------------
 3642   43AA   85 50                    sta L0050   ; HACK--------------------
 3643                           
 3644   43AC                    L2A77:
 3645   43AC   20 E2 51                 jsr clear4
 3646   43AF   A2 BF                    ldx #<L2B80 ; Print 'Get Ready'
 3647   43B1   A0 44                    ldy #>L2B80
 3648   43B3   20 85 33                 jsr L1A22
 3649                           
 3650   43B6   A2 CE                    ldx #<L2B97 ; Print 'Player '
 3651   43B8   A0 44                    ldy #>L2B97
 3652   43BA   20 85 33                 jsr L1A22
 3653                           
 3654   43BD   A5 5D                    lda L005D   ; Print playernr
 3655   43BF   18                       clc
 3656   43C0   69 31                    adc #$31
 3657   43C2   A2 13                    ldx #19
 3658   43C4   A0 0C                    ldy #12
 3659   43C6   20 B2 56                 jsr PUTCHAR
 3660                           
 3661   43C9   A9 0A                    lda #$0A    ; Wachtloop
 3662   43CB   20 E1 45                 jsr L2D39
 3663   43CE                    L2A92:
 3664   43CE   20 44 47                 jsr L2EA5   ; Init level + vars
 3665                           
 3666   43D1   20 E2 34                 jsr L1BB3   ; Draw level
 3667   43D4   20 18 48                 jsr L2F79   ; Draw sprites
 3668                           
 3669   43D7                    L2AA0:
 3670   43D7   20 8D 33                 jsr L1A37   ; Read keys
 3671   43DA   20 0B 38                 jsr L1EDE   ; Move man
 3672                           
 3673   43DD   20 F9 4C                     jsr L33E4              ; Movement sound
 3674                           
 3675   43E0   20 5C 3D                     jsr L2433              ; Update elevators
 3676   43E3   20 EF 3D                     jsr L24C6              ; Update duck+bird position
 3677                           
 3678   43E6   20 D9 48                     jsr L3030              ; 20 30 30
 3679   43E9   20 11 41                     jsr L27EB              ; 20 EB 27
 3680   43EC   20 D2 34                     jsr L1B90              ; 20 90 1B
 3681   43EF   A5 4F                        lda L004F              ; A5 4F
 3682   43F1   D0 4D                        bne L2B09              ; D0 4D
 3683                           
 3684   43F3   A5 41                        lda L0041              ; Get y-pos man
 3685   43F5   C9 11                        cmp #17
 3686   43F7   90 47                        bcc L2B09              ; If >17
 3687                           
 3688   43F9   A5 39                        lda L0039              ; Check eggs on screen
 3689   43FB   F0 07                        beq L2ACD              ; All gone
 3690   43FD   A5 60                        lda L0060              ; 
 3691   43FF   30 9E                        bmi L2A71              ; 
 3692   4401   4C D7 43                     jmp L2AA0
 3693   4404                    L2ACD:
 3694   4404   20 12 45                     jsr L2C4F              ; 20 4F 2C
 3695   4407   A5 3D                        lda L003D              ; A5 3D
 3696   4409   D0 27                        bne L2AFB              ; D0 27
 3697   440B   A5 3C                        lda L003C              ; A5 3C
 3698   440D   F0 1E                        beq L2AF6              ; F0 1E
 3699                           
 3700   440F   85 8A            L2AD8:      sta L008A              ; Set counter
 3701                           
 3702   4411   A2 06                        ldx #$06
 3703   4413   20 FB 33                     jsr L1AB1              ; Update score
 3704                           
 3705   4416   20 C9 40         L2ADF:      jsr L279F              ; Update bonus
 3706   4419   C6 8A                        dec L008A              ; C6 8A
 3707   441B   D0 F9                        bne L2ADF              ; D0 F9
 3708   441D   20 D9 48                     jsr L3030              ; 20 30 30
 3709                           
 3710   4420   A9 05                    lda #5
 3711   4422   A0 01                    ldy #1
 3712   4424   A2 09                    ldx #9
 3713   4426   20 23 57                 jsr sound
 3714                           
 3715   4429   A5 3D                        lda L003D              ; A5 3D
 3716   442B   D0 05                        bne L2AFB              ; D0 05
 3717                           
 3718   442D   A9 0A            L2AF6:      lda #$0A               ; Add 10000 to score
 3719   442F   4C 0F 44                     jmp L2AD8              ; Update score
 3720                           
 3721   4432   E6 50            L2AFB:      inc L0050              ; Increment levelnr
 3722   4434   20 F1 47                     jsr L2F52              ; Save playerdata
 3723   4437   20 84 47                     jsr L2EE5              ; Init playerdata
 3724   443A   20 B3 47                     jsr L2F14              ; Get playerdata
 3725   443D   4C CE 43                     jmp L2A92              ; Start new level
 3726   4440                    L2B09:
 3727   4440   20 12 45                     jsr L2C4F              ; Plot birds and duck
 3728   4443   20 F1 47                     jsr L2F52              ; Save playerdata
 3729                           
 3730                           ; PLAY TUNE MUST BE INSERTED HERE ----------------------------------------------
 3731   4446   20 0C 49                 jsr L3063
 3732                           
 3733   4449   A6 5D                        ldx L005D              ; Get player nr
 3734   444B   D6 20                        dec L0020,X            ; Decrement live
 3735   444D   D0 2B                        bne L2B48              ; Check if end game
 3736                           
 3737   444F   A2 94                        ldx #<L2B62            ; Print 'GAME OVER'
 3738   4451   A0 44                        ldy #>L2B62
 3739   4453   20 85 33                     jsr L1A22
 3740                           
 3741   4456   A2 CE                        ldx #<L2B97            ; Print 'PLAYER'
 3742   4458   A0 44                        ldy #>L2B97
 3743   445A   20 85 33                     jsr L1A22
 3744                           
 3745   445D   A5 5D                        lda L005D              ; Print player number
 3746   445F   18                           clc
 3747   4460   69 31                        adc #$31
 3748   4462   A2 13                        ldx #19
 3749   4464   A0 0C                        ldy #12
 3750   4466   20 B2 56                     jsr PUTCHAR
 3751                           
 3752   4469   A9 0A                        lda #$0A               ; Wait 1 sec
 3753   446B   20 E1 45                     jsr L2D39
 3754                           
 3755   446E   20 8F 42                     jsr L2981              ; Input high score name
 3756                           
 3757   4471   A9 05                        lda #$05               ; Wait 0,5 sec
 3758   4473   20 E1 45                     jsr L2D39
 3759                           
 3760   4476   C6 5F                        dec L005F              ; Decrement playernr
 3761   4478   F0 17                        beq L2B5F              ; Check end game
 3762                           
 3763   447A   A6 5D            L2B48:      ldx L005D              ; Set next player nr
 3764   447C   E8                           inx
 3765   447D   8A                           txa
 3766   447E   29 03            L2B4C:      and #$03
 3767   4480   85 5D                        sta L005D
 3768   4482   C5 5E                        cmp L005E              ; Check overflow max players
 3769   4484   B0 F4                        bcs L2B48              ; Next playernr
 3770                           
 3771   4486   AA                           tax                    ; Get player nr
 3772   4487   B5 20                        lda L0020,X            ; Get lives
 3773   4489   F0 EF                        beq L2B48              ; If zero, next player
 3774   448B   20 B3 47                     jsr L2F14              ; Get playerdata
 3775   448E   4C AC 43                     jmp L2A77              ; Start game with next player
 3776                           
 3777   4491   4C 9F 43         L2B5F:      jmp L2A71              ; Game over back to intro
 3778                           
 3779   4494   CA 09 20 20 20   L2B62:      .byte yellow+10,9,'           ',0
        4499   20 20 20 20 20 
        449E   20 20 20 00 
 3780   44A2   CA 0A 20 47 41               .byte yellow+10,10,' GAME OVER ',0
        44A7   4D 45 20 4F 56 
        44AC   45 52 20 00 
 3781   44B0   CA 0B 20 20 20               .byte yellow+10,11,'           ',0,$ff
        44B5   20 20 20 20 20 
        44BA   20 20 20 00 FF 
 3782   44BF                    L2B80:
 3783   44BF   CA 0A 20 47 65               .byte yellow+10,10,' Get Ready ',0,$ff
        44C4   74 20 52 65 61 
        44C9   64 79 20 00 FF 
 3784   44CE                    L2B97:
 3785   44CE   CA 0C 20 50 6C               .byte blue+10,12,' Player    ',0
        44D3   61 79 65 72 20 
        44D8   20 20 20 00 
 3786   44DC   CA 0D 20 20 20               .byte blue+10,13,'           ',0,$ff
        44E1   20 20 20 20 20 
        44E6   20 20 20 00 FF 
 3787   44EB                     
 3788                           ;------------------------------------------------
 3789                           ; INIT
 3790                           ;
 3791                           ; - Relocate code from $3100-$38ff to $900-$10ff
 3792                           ; - Select MODE 5
 3793                           ; - Set vars
 3794                           ; - Fill high score names $430-$4C0 with 0000100A&F.....
 3795                           ; - Redefine logical colors 0,1,2,3
 3796                           ;------------------------------------------------
 3797                           
 3798   44EB                    L2BA5:
 3799   44EB   A9 F0                    lda #clearmode             ; Clear4 color
 3800   44ED   8D 00 B0                 sta $b000
 3801   44F0   20 E2 51                 jsr clear4
 3802                           
 3803   44F3   A9 00                        lda #$00               ; Jump key SPACE
 3804   44F5   85 65                        sta L0065
 3805   44F7   A9 21                        lda #$21               ; Up key A
 3806   44F9   85 64                        sta L0064
 3807   44FB   A9 3A                        lda #$3a               ; Down key Z
 3808   44FD   85 63                        sta L0063
 3809   44FF   A9 1C                        lda #$1c               ; Left key <
 3810   4501   85 62                        sta L0062
 3811   4503   A9 1E                        lda #$1e               ; Right key >
 3812   4505   85 61                        sta L0061
 3813                           
 3814   4507   20 7F 41                     jsr L2859              ; Fill high score names with A&F
 3815                           
 3816   450A   A9 00                    lda #0
 3817   450C   85 1B                    sta L001B              ; Reset joystickflag
 3818   450E   20 6E 57                 jsr joyinit
 3819                           
 3820   4511   60                           rts
 3821                           
 3822                           ;------------------------------------------------
 3823                           ; Plot birds and duck
 3824                           ;------------------------------------------------
 3825                           
 3826   4512   A5 48            L2C4F:      lda L0048              ; Get spritenr
 3827   4514   20 D6 3C                     jsr L23AD              ; Plot sprite
 3828   4517   A5 57                        lda L0057              ; Get birdnr
 3829   4519   85 88                        sta L0088
 3830   451B   C6 88            L2C58:      dec L0088
 3831   451D   30 06                        bmi L2C62
 3832   451F   20 FD 3C                     jsr L23D4              ; Plot bird
 3833   4522   4C 1B 45                     jmp L2C58              ; Next bird
 3834                           
 3835   4525   A5 34            L2C62:      lda L0034              ; Plot duck
 3836   4527   20 E8 3C                     jsr L23BF
 3837   452A   60                           rts
 3838                           
 3839                           ;------------------------------------------------
 3840                           ; Scan for keys 1,2,3,4 and print result
 3841                           ;------------------------------------------------
 3842                           
 3843   452B   A2 CB            L2C68:      ldx #<L2D1F            ; Print string
 3844   452D   A0 45                        ldy #>L2D1F
 3845   452F   20 85 33                     jsr L1A22
 3846                           
 3847   4532   A9 00                        lda #$00               ; A9 00
 3848   4534   85 8B                        sta L008B              ; 85 8B
 3849   4536   A9 64                        lda #$64               ; A9 64
 3850   4538   85 8C                        sta L008C              ; 85 8C
 3851                           
 3852   453A                    L2C77:
 3853   453A   A9 11                    lda #$11     ; Key '1'
 3854   453C   20 FF 51                 jsr scankey
 3855   453F   90 05                    bcc L2C89    ; no
 3856   4541   A9 01                    lda #$01
 3857   4543   4C 77 45                 jmp L2CCC
 3858                           
 3859   4546                    L2C89:
 3860   4546   A9 12                    lda #$12     ; Key '2'
 3861   4548   20 FF 51                 jsr scankey
 3862   454B   90 05                    bcc L2C9B    ; no
 3863   454D   A9 02                    lda #$02
 3864   454F   4C 77 45                 jmp L2CCC
 3865                           
 3866   4552                    L2C9B:
 3867   4552   A9 13                    lda #$13     ; Key '3'
 3868   4554   20 FF 51                 jsr scankey
 3869   4557   90 05                    bcc L2CAD    ; no
 3870   4559   A9 03                    lda #$03
 3871   455B   4C 77 45                 jmp L2CCC
 3872                           
 3873   455E                    L2CAD:
 3874   455E   A9 14                    lda #$14     ; Key '4'
 3875   4560   20 FF 51                 jsr scankey
 3876   4563   90 05                    bcc L2CBF    ; no
 3877   4565   A9 04                    lda #$04
 3878   4567   4C 77 45                 jmp L2CCC
 3879                           
 3880   456A   C6 8B            L2CBF:      dec L008B              ; Repeat 256000 times
 3881   456C   D0 CC                        bne L2C77
 3882   456E   C6 8C                        dec L008C
 3883   4570   D0 C8                        bne L2C77
 3884                           
 3885   4572   68                           pla                    ; No key pressed, return
 3886   4573   68                           pla
 3887   4574   4C 9F 43                     jmp L2A71
 3888                           
 3889   4577   85 5E            L2CCC:      sta L005E              ; Save player count
 3890   4579   85 5F                        sta L005F
 3891   457B   18                           clc
 3892   457C   69 30                        adc #$30
 3893                           
 3894   457E   A2 18                    ldx #24 ; Print selection
 3895   4580   A0 0C                    ldy #12
 3896   4582   20 B2 56                 jsr PUTCHAR
 3897                           
 3898   4585   A9 05                        lda #$05               ; Wait 0,5 sec
 3899   4587   20 E1 45                     jsr L2D39
 3900                           
 3901                           ;------------------------------------------------
 3902                           ; Fill player table at $500
 3903                           ;------------------------------------------------
 3904                           
 3905   458A   A2 03            L2CDB:      ldx #$03
 3906   458C   A9 00            L2CDD:      lda #$00               ; Level=0
 3907   458E   95 24                        sta L0024,X
 3908   4590   A9 05                        lda #$05               ; Lives=5
 3909   4592   95 20                        sta L0020,X
 3910   4594   CA                           dex
 3911   4595   10 F5                        bpl L2CDD
 3912                           
 3913   4597   A2 03                        ldx #$03               ; A2 03
 3914   4599   86 88                        stx L0088              ; 86 88
 3915   459B   8A               L2CEC:      txa                    ; 8A
 3916   459C   0A                           asl A                  ; 0A
 3917   459D   0A                           asl A                  ; 0A
 3918   459E   0A                           asl A                  ; 0A
 3919   459F   0A                           asl A                  ; 0A
 3920   45A0   0A                           asl A                  ; 0A
 3921   45A1   0A                           asl A                  ; 0A
 3922   45A2   AA                           tax                    ; AA
 3923   45A3   A0 07                        ldy #$07               ; A0 07
 3924   45A5   A9 00                        lda #$00               ; A9 00
 3925   45A7   9D 00 05         L2CF8:      sta L0500,X            ; 9D 00 05
 3926   45AA   E8                           inx                    ; E8
 3927   45AB   88                           dey                    ; 88
 3928   45AC   10 F9                        bpl L2CF8              ; 10 F9
 3929   45AE   C6 88                        dec L0088              ; C6 88
 3930   45B0   A6 88                        ldx L0088              ; A6 88
 3931   45B2   10 E7                        bpl L2CEC              ; 10 E7
 3932                           
 3933   45B4   A9 00                        lda #$00               ; Init levelnr
 3934   45B6   85 50                        sta L0050
 3935   45B8   A9 04                        lda #$04               ; Init max players
 3936   45BA   85 5D                        sta L005D
 3937   45BC   C6 5D            L2D0D:      dec L005D              ; C6 5D
 3938   45BE   20 84 47                     jsr L2EE5              ; 20 E5 2E
 3939   45C1   A5 5D                        lda L005D              ; A5 5D
 3940   45C3   D0 F7                        bne L2D0D              ; D0 F7
 3941   45C5   20 B3 47                     jsr L2F14              ; 20 14 2F
 3942                           
 3943   45C8   A9 1A                        lda #$1A               ; Restore default window
 3944   45CA   60                           rts                    ; 60
 3945                           
 3946                           ;------------------------------------------------
 3947                           ;------------------------------------------------
 3948   45CB   C6 0C 48 6F 77   L2D1F:      .byte yellow+6,12,'How many players? ',0,$ff
        45D0   20 6D 61 6E 79 
        45D5   20 70 6C 61 79 
        45DA   65 72 73 3F 20 
        45DF   00 FF 
 3949                           
 3950                           ;------------------------------------------------
 3951                           ; Wait loop A * 0,1 sec
 3952                           ;------------------------------------------------
 3953                           
 3954   45E1   85 8A            L2D39:      sta L008A              ; $85,$8A
 3955   45E3   A0 00            L2D3B:      ldy #$00               ; A0 00
 3956   45E5   A2 00                        ldx #$00               ; A2 00
 3957   45E7   CA               L2D3F:      dex                    ; CA
 3958   45E8   D0 FD                        bne L2D3F              ; D0 FD
 3959   45EA   88                           dey                    ; 88
 3960   45EB   D0 FA                        bne L2D3F              ; D0 FA
 3961   45ED   C6 8A                        dec L008A              ; C6 8A
 3962   45EF   D0 F2                        bne L2D3B              ; D0 F2
 3963   45F1   60                           rts                    ; 60
 3964                           
 3965                           ;------------------------------------------------
 3966                           ; Loop screens until keypress
 3967                           ; - Introscreen High Score list
 3968                           ; - Random level
 3969                           ; - Introscreen keys
 3970                           ; - Random level
 3971                           ; - Pause between screen ca.6 sec
 3972                           ;------------------------------------------------
 3973                           
 3974   45F2                    L2D4A:
 3975   45F2   20 5D 46                 jsr L2DB3   ; Set vars
 3976                           
 3977   45F5                    L2D50:
 3978   45F5   20 E2 51                 jsr clear4  ; Clear screen
 3979   45F8   20 6A 46                 jsr L2DC0   ; Print CHUCKIE EGG
 3980   45FB   20 21 42                 jsr L28FB   ; Print High Score list
 3981   45FE   20 C9 46                 jsr L2E1F   ; Print footer intro screen
 3982                           
 3983   4601   A9 0F                    lda #15     ; Wait ca.6 sec
 3984   4603   85 8A                    sta L008A
 3985   4605                    L2D62:
 3986   4605   20 28 47                 jsr L2E8B   ; Scan for K and S
 3987   4608   B0 40                    bcs L2DA0
 3988   460A   C6 8A                    dec L008A
 3989   460C   D0 F7                    bne L2D62
 3990                           
 3991   460E   20 4B 46                 jsr L2DA1   ; Show gamelevel
 3992                           
 3993   4611   A9 0F                    lda #15     ; Wait for ca.6 sec
 3994   4613   85 8A                    sta L008A
 3995   4615                    L2D70:
 3996   4615   20 28 47                 jsr L2E8B   ; Scan for K and S
 3997   4618   B0 30                    bcs L2DA0
 3998   461A   C6 8A                    dec L008A
 3999   461C   D0 F7                    bne L2D70
 4000                           
 4001   461E   20 E2 51                 jsr clear4
 4002   4621   20 6A 46                 jsr L2DC0   ; Print CHUCKIE EGG
 4003   4624   20 B3 49                 jsr L3100   ; Print keys in use
 4004                           
 4005   4627   20 C9 46                 jsr L2E1F   ; Print footer intro screen
 4006   462A   A9 0F                    lda #15     ; Wait ca.6 sec
 4007   462C   85 8A                    sta L008A
 4008   462E                    L2D89:
 4009   462E   20 28 47                 jsr L2E8B   ; Scan for K and S
 4010   4631   B0 17                    bcs L2DA0
 4011   4633   C6 8A                    dec L008A
 4012   4635   D0 F7                    bne L2D89
 4013                           
 4014   4637   20 4B 46                 jsr L2DA1   ; Show gamelevel
 4015                           
 4016   463A   A9 0F                    lda #15     ; Wait for ca.6 sec
 4017   463C   85 8A                    sta L008A
 4018   463E                    L2D97:
 4019   463E   20 28 47                 jsr L2E8B   ; Scan for K and S
 4020   4641   B0 07                    bcs L2DA0
 4021   4643   C6 8A                    dec L008A
 4022   4645   D0 F7                    bne L2D97
 4023   4647                    L2D9E:
 4024   4647   4C F5 45                 jmp L2D50
 4025                           
 4026   464A                    L2DA0:
 4027   464A   60                       rts
 4028                           ;------------------------------------------------
 4029                           ; Show gamelevel
 4030                           ;------------------------------------------------
 4031                           
 4032   464B   20 EA 33         L2DA1:      jsr L1AA0              ; Get random levelnr
 4033   464E   A5 66                        lda L0066
 4034   4650   29 07                        and #$07
 4035   4652   85 50                        sta L0050              ; Levelnr
 4036   4654   85 5C                        sta L005C
 4037   4656   20 E2 34                     jsr L1BB3              ; Draw level
 4038   4659   20 18 48                     jsr L2F79              ; Draw sprites
 4039   465C   60                           rts
 4040                           
 4041                           ;------------------------------------------------
 4042                           ; Set max players to 4 and create table
 4043                           ;------------------------------------------------
 4044                           
 4045   465D   A9 04            L2DB3:      lda #$04
 4046   465F   85 5E                        sta L005E              ; Max players
 4047   4661   85 5F                        sta L005F              ; Max players
 4048   4663   20 8A 45                     jsr L2CDB              ; Fill 4 player table
 4049   4666   20 44 47                     jsr L2EA5              ; Init level + vars
 4050   4669   60                           rts
 4051                           
 4052                           ;------------------------------------------------
 4053                           ; Print CHUCKIE EGG on screen
 4054                           ;------------------------------------------------
 4055                           
 4056   466A   A9 C0            L2DC0:      lda #yellow               ; Color yellow
 4057   466C   85 7F                        sta L007F
 4058                           
 4059   466E   A9 30                        lda #$30               ; Letter C
 4060   4670   A2 00                        ldx #$00
 4061   4672   A0 B8                        ldy #184
 4062   4674   20 38 47                     jsr L2E99
 4063                           
 4064   4677   A9 31                        lda #$31               ; Letter H
 4065   4679   A2 0D                        ldx #13
 4066   467B   A0 B8                        ldy #184
 4067   467D   20 38 47                     jsr L2E99
 4068                           
 4069   4680   A9 32                        lda #$32               ; Letter U
 4070   4682   A2 19                        ldx #25
 4071   4684   A0 B8                        ldy #184
 4072   4686   20 38 47                     jsr L2E99
 4073                           
 4074   4689   A9 30                        lda #$30               ; Letter C
 4075   468B   A2 26                        ldx #38
 4076   468D   A0 B8                        ldy #184
 4077   468F   20 38 47                     jsr L2E99
 4078                           
 4079   4692   A9 33                        lda #$33               ; Letter K
 4080   4694   A2 33                        ldx #51
 4081   4696   A0 B8                        ldy #184
 4082   4698   20 38 47                     jsr L2E99
 4083                           
 4084   469B   A9 34                        lda #$34               ; Letter I
 4085   469D   A2 40                        ldx #64
 4086   469F   A0 B8                        ldy #184
 4087   46A1   20 38 47                     jsr L2E99
 4088                           
 4089   46A4   A9 35                        lda #$35               ; Letter E
 4090   46A6   A2 45                        ldx #69
 4091   46A8   A0 B8                        ldy #184
 4092   46AA   20 38 47                     jsr L2E99
 4093                           
 4094   46AD   A9 35                        lda #$35               ; Letter E
 4095   46AF   A2 5A                        ldx #90
 4096   46B1   A0 B8                        ldy #184
 4097   46B3   20 38 47                     jsr L2E99
 4098                           
 4099   46B6   A9 36                        lda #$36               ; Letter G
 4100   46B8   A2 67                        ldx #103
 4101   46BA   A0 B8                        ldy #184
 4102   46BC   20 38 47                     jsr L2E99
 4103                           
 4104   46BF   A9 36                        lda #$36               ; Letter G
 4105   46C1   A2 74                        ldx #116
 4106   46C3   A0 B8                        ldy #184
 4107   46C5   20 38 47                     jsr L2E99
 4108   46C8   60                           rts
 4109                           
 4110                           
 4111                           ;------------------------------------------------
 4112                           ; Print footer in intro screen
 4113                           ;------------------------------------------------
 4114                           
 4115   46C9   A2 D1            L2E1F:      ldx #<L2E27            ; Print footer
 4116   46CB   A0 46                        ldy #>L2E27
 4117   46CD   20 85 33                     jsr L1A22
 4118   46D0   60                           rts
 4119                           
 4120                           L2E27:   ;Press fire or S to start
 4121   46D1   C9 16 20 74 61              .byte yellow+9,22,' tart, or ',0
        46D6   72 74 2C 20 6F 
        46DB   72 20 00 
 4122   46DE   C9 16 53 00                 .byte red+9,22,'S',0
 4123   46E2   D3 16 46 69 72              .byte red+19,22,'Fire',0
        46E7   65 00 
 4124                           
 4125   46E9   C8 17 20 20 74              .byte yellow+8,23,'  to change keys',0
        46EE   6F 20 63 68 61 
        46F3   6E 67 65 20 6B 
        46F8   65 79 73 00 
 4126   46FC   C8 17 4B 00                 .byte red+8,23,'K',0
 4127   4700   FF                          .byte $ff
 4128                           
 4129                           ;------------------------------------------------
 4130                           ; Wait keypress K or S or fire
 4131                           ;------------------------------------------------
 4132                           
 4133   4701                    L2E63:
 4134   4701   A9 33                    lda #$33    ; Key "S"
 4135   4703   20 FF 51                 jsr scankey
 4136   4706   90 02                    bcc L2E74   ; no
 4137   4708   38                       sec
 4138   4709   60                       rts
 4139                           
 4140   470A                    L2E74:
 4141   470A   A9 2B                    lda #$2b    ; Key "K"
 4142   470C   20 FF 51                 jsr scankey
 4143   470F   90 08                    bcc L2E82   ; no
 4144   4711   20 B6 49                 jsr L3103  ; Redefine keys
 4145   4714   68                       pla
 4146   4715   68                       pla
 4147   4716   4C F5 45                 jmp L2D50
 4148   4719                    L2E82:
 4149   4719   20 7C 57                 jsr joyget  ; Scan firebutton joystick
 4150   471C   29 10                    and #$10
 4151   471E   F0 06                    beq L2E75   ; no
 4152   4720   A9 01                    lda #1      ; Set joystickflag
 4153   4722   85 1B                    sta L001B
 4154   4724   38                       sec
 4155   4725   60                       rts
 4156   4726                    L2E75:
 4157   4726   18                       clc
 4158   4727   60                       rts
 4159                           
 4160                           ;------------------------------------------------
 4161                           ; Scan for S or K and wait ca. 6 sec
 4162                           ;------------------------------------------------
 4163                           
 4164   4728                    L2E8B:
 4165   4728   A0 FF                        ldy #$ff
 4166   472A                    L2E92:
 4167   472A   20 01 47                     jsr L2E63              ; Scan keys
 4168   472D   B0 08                    bcs L2E93
 4169                           
 4170   472F   A2 E0                        ldx #$e0               ; Wait
 4171   4731                    L2E94:
 4172   4731   CA                           dex
 4173   4732   D0 FD                        bne L2E94
 4174   4734   88                           dey
 4175   4735   D0 F3                        bne L2E92
 4176   4737                    L2E93:
 4177   4737   60                           rts
 4178                           
 4179                           ;------------------------------------------------
 4180                           ; Plot sprite A at X,Y
 4181                           ;------------------------------------------------
 4182                           
 4183   4738   48               L2E99:      pha                    ; Save spritenr
 4184   4739   20 05 33                     jsr L1987              ; Calc Screen address  $70/$71
 4185   473C   68                           pla                    ; Get Spritenr
 4186   473D   20 3E 33                     jsr L19D7              ; Calc Sprite adddress $76/$77
 4187   4740   20 8E 32                     jsr L1902              ; Plot sprite
 4188   4743   60                           rts
 4189                           
 4190                           ;------------------------------------------------
 4191                           ; Init level + vars
 4192                           ;------------------------------------------------
 4193                           
 4194   4744   A5 50            L2EA5:      lda L0050              ; Get levelnr
 4195   4746   29 07                        and #$07
 4196   4748   85 5C                        sta L005C              ; Levelnibble low
 4197                           
 4198   474A   A5 50                        lda L0050              ; Get levelnr
 4199   474C   4A                           lsr A
 4200   474D   4A                           lsr A
 4201   474E   4A                           lsr A
 4202   474F   85 4D                        sta L004D              ; Levelnibble high
 4203                           
 4204   4751   A9 00                        lda #$00               ; Check levelnr
 4205   4753   85 35                        sta L0035
 4206   4755   A5 4D                        lda L004D
 4207   4757   F0 02                        beq L2EBC              ; Level 1-8 Duck in cage
 4208   4759   E6 35                        inc L0035              ; Level >8 Duck out cage
 4209                           
 4210   475B   A9 01            L2EBC:      lda #$01
 4211   475D   85 38                        sta L0038
 4212                           
 4213   475F   A9 00                        lda #$00               ; Reset bird delay
 4214   4761   85 36                        sta L0036
 4215                           
 4216   4763   A9 07                        lda #$07
 4217   4765   A6 4D                        ldx L004D              ; Levelnibble high
 4218   4767   E0 04                        cpx #$04               ; Level 33 onwards
 4219   4769   90 02                        bcc L2ECE
 4220   476B   A9 05                        lda #$05
 4221   476D   85 37            L2ECE:      sta L0037              ; Bird delay=7 or 5 (level>32)
 4222                           
 4223   476F   A9 00                        lda #$00               ; Reset
 4224   4771   85 3E                        sta L003E              ; ??
 4225   4773   85 4F                        sta L004F              ; ??
 4226   4775   85 1C                        sta L001C              ; Timer
 4227   4777   85 8F                        sta L008F              ; ??
 4228                           
 4229   4779   A9 76                        lda #$76               ; ??
 4230   477B   85 66                        sta L0066              ; ??
 4231   477D   85 67                        sta L0067              ; ??
 4232   477F   85 68                        sta L0068              ; ??
 4233   4781   85 69                        sta L0069              ; ??
 4234   4783   60                           rts                    ; 60
 4235                           
 4236                           ;------------------------------------------------
 4237                           ; Init savedata player
 4238                           ;------------------------------------------------
 4239                           
 4240   4784   A5 5D            L2EE5:      lda L005D              ; Get playernr
 4241   4786   0A                           asl A
 4242   4787   0A                           asl A
 4243   4788   0A                           asl A
 4244   4789   0A                           asl A
 4245   478A   0A                           asl A
 4246   478B   0A                           asl A
 4247   478C   AA                           tax                    ; Point to savedata
 4248                           
 4249   478D   A5 50                        lda L0050              ; Get levelnr
 4250   478F   18                           clc
 4251   4790   69 01                        adc #$01
 4252   4792   C9 0A                        cmp #$0A               ; If >10 store levelnr
 4253   4794   90 02                        bcc L2EF9
 4254   4796   A9 09                        lda #$09               ; Else store 9
 4255   4798   9D 08 05         L2EF9:      sta L0508,X            ; Store bonus
 4256   479B   A9 00                        lda #$00
 4257   479D   9D 09 05                     sta L0509,X
 4258   47A0   9D 0A 05                     sta L050A,X
 4259   47A3   9D 0B 05                     sta L050B,X
 4260                           
 4261   47A6   A0 10                        ldy #$10
 4262   47A8   9D 10 05         L2F09:      sta L0510,X            ; Clear eggs flags
 4263   47AB   9D 20 05                     sta L0520,X            ; Clear seeds flag
 4264   47AE   E8                           inx
 4265   47AF   88                           dey
 4266   47B0   D0 F6                        bne L2F09
 4267   47B2   60                           rts
 4268                           
 4269                           ;------------------------------------------------
 4270                           ; Get playerdata player x
 4271                           ; - Levelnr
 4272                           ; - Score
 4273                           ; - Bonus
 4274                           ;------------------------------------------------
 4275                           
 4276   47B3   A6 5D            L2F14:      ldx L005D              ; Current playernr
 4277   47B5   B5 24                        lda L0024,X            ; Get levelnr
 4278   47B7   85 50                        sta L0050              ; Save levelnr
 4279                           
 4280   47B9   8A                           txa
 4281   47BA   0A                           asl A
 4282   47BB   0A                           asl A
 4283   47BC   0A                           asl A
 4284   47BD   0A                           asl A 
 4285   47BE   0A                           asl A
 4286   47BF   0A                           asl A
 4287   47C0   85 4E                        sta L004E              ; Savepos player x
 4288   47C2   AA                           tax                    ; x=Playernr*64
 4289                           
 4290   47C3   A0 00                        ldy #$00
 4291   47C5   BD 00 05         L2F26:      lda L0500,X            ; Get saved player score
 4292   47C8   99 28 00                     sta L0028,Y            ; Store into current Score
 4293   47CB   E8                           inx
 4294   47CC   C8                           iny
 4295   47CD   C0 08                        cpy #$08
 4296   47CF   90 F4                        bcc L2F26
 4297                           
 4298   47D1   A6 4E                        ldx L004E
 4299   47D3   A0 00                        ldy #$00
 4300   47D5   BD 08 05         L2F36:      lda L0508,X            ; Get saved player bonus
 4301   47D8   99 3A 00                     sta L003A,Y            ; Store into current bonus
 4302   47DB   E8                           inx
 4303   47DC   C8                           iny
 4304   47DD   C0 04                        cpy #$04
 4305   47DF   90 F4                        bcc L2F36
 4306                           
 4307   47E1   A6 5D                        ldx L005D              ; $3F=left lives position player
 4308   47E3   A9 00                        lda #$00
 4309   47E5   18                           clc
 4310   47E6   69 1A            L2F47:      adc #26
 4311   47E8   CA                           dex
 4312   47E9   10 FB                        bpl L2F47
 4313   47EB   38                           sec
 4314   47EC   E9 0D                        sbc #9+4
 4315   47EE   85 3F                        sta L003F
 4316   47F0   60                           rts
 4317                           
 4318                           ;------------------------------------------------
 4319                           ; Save playerdata player x
 4320                           ; - Levelnr
 4321                           ; - Score
 4322                           ; - Bonus
 4323                           ;------------------------------------------------
 4324                           
 4325   47F1   A6 5D            L2F52:      ldx L005D              ; Save current levelnr
 4326   47F3   A5 50                        lda L0050
 4327   47F5   95 24                        sta L0024,X
 4328                           
 4329   47F7   A6 4E                        ldx L004E              ; Save score
 4330   47F9   A0 00                        ldy #$00
 4331   47FB   B9 28 00         L2F5C:      lda L0028,Y
 4332   47FE   9D 00 05                     sta L0500,X
 4333   4801   E8                           inx
 4334   4802   C8                           iny
 4335   4803   C0 08                        cpy #$08
 4336   4805   90 F4                        bcc L2F5C
 4337                           
 4338   4807   A6 4E                        ldx L004E              ; Save bonus
 4339   4809   A0 00                        ldy #$00
 4340   480B   B9 3A 00         L2F6C:      lda L003A,Y
 4341   480E   9D 08 05                     sta L0508,X
 4342   4811   E8                           inx
 4343   4812   C8                           iny
 4344   4813   C0 04                        cpy #$04
 4345   4815   90 F4                        bcc L2F6C
 4346   4817   60                           rts
 4347                           
 4348                           ;------------------------------------------------
 4349                           ; Draw sprites
 4350                           ;------------------------------------------------
 4351                           
 4352                           ; Plot elevator --------------------------------------------
 4353                           
 4354   4818   A5 55            L2F79:      lda L0055              ; A5 55
 4355   481A   F0 2E                        beq L2FAB              ; F0 2E
 4356   481C                     
 4357   481C   A9 08                        lda #$08               ; y-pos elevator low
 4358   481E   85 59                        sta L0059
 4359   4820   A9 5A                        lda #$5A               ; y-pos elevator high
 4360   4822   85 5A                        sta L005A
 4361   4824   A9 00                        lda #$00               ; elevator flag
 4362   4826   85 5B                        sta L005B
 4363                           
 4364   4828   A9 C0                        lda #yellow            ; Color yellow
 4365   482A   85 7F                        sta L007F
 4366   482C   A9 05                        lda #$05               ; Elevator sprite
 4367   482E   20 3E 33                     jsr L19D7
 4368   4831   A6 58                        ldx L0058
 4369   4833   A4 59                        ldy L0059              ; y=8
 4370   4835   20 05 33                     jsr L1987
 4371   4838   20 8E 32                     jsr L1902              ; Plot elevator1
 4372                           
 4373   483B   A9 05                        lda #$05               ; Elevator sprite
 4374   483D   20 3E 33                     jsr L19D7
 4375   4840   A6 58                        ldx L0058
 4376   4842   A4 5A                        ldy L005A              ; y=90
 4377   4844   20 05 33                     jsr L1987
 4378   4847   20 8E 32                     jsr L1902              ; Plot elevator2
 4379                           
 4380                           ; Plot duck ------------------------------------------------
 4381                           
 4382   484A   A9 04            L2FAB:      lda #$04               ; x-pos duck
 4383   484C   85 30                        sta L0030
 4384   484E   A9 9A                        lda #154               ; y-pos duck
 4385   4850   85 31                        sta L0031
 4386   4852   A9 00                        lda #$00               ; A9 00
 4387   4854   85 32                        sta L0032              ; 85 32
 4388   4856   85 33                        sta L0033              ; 85 33
 4389   4858   85 34                        sta L0034              ; 85 34
 4390   485A   20 E8 3C                     jsr L23BF              ; 20 BF 23
 4391                           
 4392                           ; Plot birds ------------------------------------------------
 4393                           
 4394   485D   A2 FF                        ldx #$FF               ; A2 FF
 4395   485F   86 88                        stx L0088              ; 86 88
 4396                           
 4397   4861   A5 4D                        lda L004D              ; Load levelnibble high
 4398   4863   C9 01                        cmp #$01               ; Level between 9 and 16?
 4399   4865   D0 04                        bne L2FCC
 4400   4867   A2 00                        ldx #$00               ; 0 birds
 4401   4869   86 57                        stx L0057
 4402                           
 4403   486B   C9 03            L2FCC:      cmp #$03               ; Level > 25?
 4404   486D   90 04                        bcc L2FD4
 4405   486F   A2 05                        ldx #$05               ; 5 birds
 4406   4871   86 57                        stx L0057
 4407                           
 4408   4873   E6 88            L2FD4:      inc L0088              ; E6 88
 4409   4875   A6 88                        ldx L0088              ; A6 88
 4410   4877   E4 57                        cpx L0057              ; Nr of birds =0?
 4411   4879   B0 28                        bcs L3004
 4412                           
 4413   487B   BD 0A 04                     lda L040A,X            ; Load x-pos bird
 4414   487E   0A                           asl A
 4415   487F   0A                           asl A
 4416   4880   0A                           asl A
 4417   4881   9D 00 04                     sta L0400,X            ; Store x-pos*16
 4418                           
 4419   4884   BD 0F 04                     lda L040F,X            ; Load y-pos bird
 4420   4887   0A                           asl A
 4421   4888   0A                           asl A
 4422   4889   0A                           asl A
 4423   488A   18                           clc
 4424   488B   69 14                        adc #$14               ; Store y-pos+20
 4425   488D   9D 05 04                     sta L0405,X
 4426                           
 4427   4890   A9 00                        lda #$00               ; Reset birdnr
 4428   4892   9D 14 04                     sta L0414,X
 4429   4895   9D 19 04                     sta L0419,X
 4430                           
 4431   4898   A9 02                        lda #$02               ; A9 02
 4432   489A   9D 1E 04                     sta L041E,X            ; 9D 1E 04
 4433   489D   20 FD 3C                     jsr L23D4              ; 20 D4 23
 4434   48A0   4C 73 48                     jmp L2FD4              ; 4C D4 2F
 4435                           
 4436                           ; Plot man ------------------------------------------------
 4437                           
 4438   48A3                    L3004:
 4439   48A3   A9 03                        lda #$03               ; Wait 0,3 sec
 4440   48A5   20 E1 45                     jsr L2D39
 4441   48A8                    L3005:
 4442   48A8   A9 34                        lda #$3C-8            ; RC3 for all levels
 4443   48AA                    L3006:
 4444   48AA   85 40                        sta L0040              ; x-pos man
 4445   48AC   A9 18                        lda #$18               ; y-pos man
 4446   48AE   85 41                        sta L0041              ; 85 41
 4447                           
 4448   48B0   A9 06            L3011:      lda #$06               ; Man stand right
 4449   48B2   85 48                        sta L0048
 4450   48B4   20 D6 3C                     jsr L23AD              ; Plot sprite
 4451                           
 4452   48B7   A5 40                    lda L0040
 4453   48B9   18                       clc     
 4454   48BA   69 03                    adc #$03
 4455   48BC   29 07                    and #7
 4456   48BE   85 44                    sta L0044                  ; Set x-pos man mod 8
 4457   48C0   A5 40                    lda L0040
 4458   48C2   4A                       lsr a
 4459   48C3   4A                       lsr a
 4460   48C4   4A                       lsr a
 4461   48C5   85 42                    sta L0042                  ; Set x-pos man bytes
 4462                           
 4463   48C7   A9 02                        lda #$02
 4464   48C9   85 43                        sta L0043              ; Set y-pos man bytes
 4465                           
 4466   48CB   A9 00                        lda #$00
 4467   48CD   85 45                        sta L0045              ; Set y-pos man mod 8
 4468   48CF   85 49                        sta L0049              ; Man moving horizontal
 4469                           
 4470                           ; Erase life ------------------------------------------------
 4471   48D1   A9 01                        lda #$01
 4472   48D3   85 4C                        sta L004C
 4473   48D5   20 EA 48                     jsr L3041              ; Erase life
 4474   48D8   60                           rts
 4475                           
 4476                           ;------------------------------------------------
 4477                           ;------------------------------------------------
 4478                           
 4479   48D9                    L3030:
 4480   48D9   A5 3E                        lda L003E              ; Get ?????
 4481   48DB   D0 01                        bne L3035
 4482   48DD   60                           rts
 4483                           
 4484   48DE                    L3035:
 4485   48DE   A9 00                        lda #$00               ; Reset ??
 4486   48E0   85 3E                        sta L003E
 4487   48E2   20 EA 48                     jsr L3041              ; Plot lives left
 4488                           
 4489   48E5   A6 5D                        ldx L005D              ; Get playernr
 4490   48E7   F6 20                        inc L0020,X            ; Increment live
 4491   48E9   60                           rts
 4492                           
 4493                           ;------------------------------------------------
 4494                           ; Plot lives left (max 6)
 4495                           ;------------------------------------------------
 4496                           
 4497   48EA   A9 C0            L3041:      lda #yellow            ; Color yellow
 4498   48EC   85 7F                        sta L007F
 4499   48EE   A6 5D                        ldx L005D
 4500   48F0   B5 20                        lda L0020,X            ; Load nr of lives for current player
 4501   48F2   C9 06                        cmp #$06               ; Max 6
 4502   48F4   90 01                        bcc L304E 
 4503   48F6   60                           rts
 4504                           
 4505   48F7   0A               L304E:      asl A                  ; Calculate lives position
 4506   48F8   0A                           asl A 
 4507   48F9   65 3F                        adc L003F
 4508   48FB   69 07                    adc #7
 4509   48FD   AA                           tax
 4510   48FE   A0 B6                        ldy #182               ; y=182
 4511   4900   20 05 33                     jsr L1987
 4512   4903   A9 2F                        lda #$2F               ; Lives sprite
 4513   4905   20 3E 33                     jsr L19D7
 4514   4908   20 C4 34                     jsr L1B82              ; Plot sprite
 4515   490B   60                           rts
 4516                           
 4517                           ;------------------------------------------------
 4518                           ; Play sound pointed at in X,Y
 4519                           ;------------------------------------------------
 4520                           
 4521   490C                    L3063:
 4522   490C   A9 00                    lda #0
 4523   490E   85 80                    sta $80
 4524   4910                    tune_loop:
 4525   4910   A6 80                    ldx $80
 4526   4912   BD 31 49                 lda L308D,x
 4527   4915   48                       pha
 4528   4916   BD 32 49                 lda L308D+1,x
 4529   4919   48                       pha
 4530   491A   BD 33 49                 lda L308D+2,x
 4531   491D   A8                       tay
 4532   491E   68                       pla
 4533   491F   AA                       tax
 4534   4920   68                       pla
 4535   4921   20 23 57                 jsr sound
 4536   4924   E6 80                    inc $80
 4537   4926   E6 80                    inc $80
 4538   4928   E6 80                    inc $80
 4539   492A   A5 80                    lda $80
 4540   492C   C9 30                    cmp #48
 4541   492E   D0 E0                    bne tune_loop
 4542   4930   60                       rts
 4543                           
 4544                           ;------------------------------------------------
 4545                           ; Sound data die tune
 4546                           ; 1st byte is tone, 2nd byte is duration
 4547                           ;------------------------------------------------
 4548                           
 4549   4931                    L308D:
 4550   4931   28 12 04                 .db 40,18,4  ; G''4
 4551   4934   14 10 04                 .db 20,16,4  ; A''2
 4552   4937   28 12 04                 .db 40,18,4  ; G''4
 4553   493A   14 14 04                 .db 20,20,4  ; F''2
 4554   493D   28 16 04                 .db 40,22,4  ; E''4
 4555   4940   14 1C 04                 .db 20,28,4  ; C''2
 4556   4943   28 18 04                 .db 40,24,4  ; D''4
 4557   4946   14 0E 08                 .db 20,14,8  ; B'2
 4558   4949   78 1C 04                 .db 120,28,4 ; C''12
 4559   494C   0A 1C 04                 .db 10,28,4  ; C''1
 4560   494F   0A 18 04                 .db 10,24,4  ; D''1
 4561   4952   0A 16 04                 .db 10,22,4  ; E''1
 4562   4955   0A 14 04                 .db 10,20,4  ; F''1
 4563   4958   0A 12 04                 .db 10,18,4  ; G''1
 4564   495B   0A 1D 02                 .db 10,29,2  ; B''1
 4565   495E   0A 1C 02                 .db 10,28,2  ; C'''1
 4566                           
 4567                           ;            .byte $10 ; 16 tones
 4568                           ;            .byte $21,$04 ; G''4
 4569                           ;            .byte $29,$02 ; A''2
 4570                           ;            .byte $21,$04 ; G''4
 4571                           ;            .byte $19,$02 ; F''2
 4572                           ;            .byte $15,$04 ; E''4
 4573                           ;            .byte $05,$02 ; C''2
 4574                           ;            .byte $0D,$04 ; D''4
 4575                           ;            .byte $01,$02 ; B'2
 4576                           ;            .byte $05,$0C ; C''12
 4577                           ;            .byte $05,$01 ; C''1
 4578                           ;            .byte $0D,$01 ; D''1
 4579                           ;            .byte $15,$01 ; E''1
 4580                           ;            .byte $19,$01 ; F''1
 4581                           ;            .byte $21,$01 ; G''1
 4582                           ;            .byte $31,$01 ; B''1
 4583                           ;            .byte $35,$01 ; C'''1
 4584                           
 4585                           ;------------------------------------------------
 4586                           
 4587   4961   01 01 00 00 00   L30AE:      .byte $01,$01,$00,$00,$00,$00,$00
        4966   00 00 
 4588   4968   00 7E CE 00 00               .byte $00,$7E,$CE,$00,$00,$64,$00,$02
        496D   64 00 02 
 4589   4970   01 00 00 00 00               .byte $01,$00,$00,$00,$00,$00,$00,$7E
        4975   00 00 7E 
 4590   4978   FE 00 FB 7E 64               .byte $FE,$00,$FB,$7E,$64,$03,$01,$00
        497D   03 01 00 
 4591   4980   00 00 00 00 00               .byte $00,$00,$00,$00,$00,$32,$00,$00
        4985   32 00 00 
 4592   4988   E7 64 00                     .byte $E7,$64,$00
 4593                           
 4594   498B   0A                           .byte $0A
 4595   498C   43 6F 70 79 72               .byte 'Copyright (C) A&F Software Ltd. 1984'
        4991   69 67 68 74 20 
        4996   28 43 29 20 41 
        499B   26 46 20 53 6F 
        49A0   66 74 77 61 72 
        49A5   65 20 4C 74 64 
        49AA   2E 20 31 39 38 
        49AF   34 
 4596   49B0   0A 0D 00                     .byte $0A,$0D,$00
 4597                           
 4598                           ;------------------------------------------------
 4599                           ;Relocatable code from $3100 to $0900
 4600                           ;------------------------------------------------
 4601                           
 4602   49B3   4C 7B 4C         L3100:      jmp L3344
 4603                           
 4604   49B6                    L3103:
 4605   49B6   A9 F0                    lda #clearmode             ; Clear screen
 4606   49B8   8D 00 B0                 sta $b000
 4607   49BB   20 E2 51                 jsr clear4
 4608                           
 4609   49BE   A9 FF                    lda #$ff
 4610   49C0   85 61                    sta L0061
 4611   49C2   85 62                    sta L0062
 4612   49C4   85 63                    sta L0063
 4613   49C6   85 64                    sta L0064
 4614   49C8   85 65                    sta L0065
 4615                           
 4616   49CA   A2 9C                        ldx #<L3272            ; Print KEY SELECTION
 4617   49CC   A0 4B                        ldy #>L3272
 4618   49CE   20 85 33                     jsr L1A22
 4619                           
 4620   49D1   A9 00                        lda #$00               ; Reset key pressed flag
 4621   49D3   85 60                        sta L0060
 4622   49D5   A9 54                        lda #$54               ; 'T'??
 4623   49D7   85 28                        sta L0028
 4624                           
 4625   49D9   A2 B9                        ldx #<L329C            ; Print Up ..
 4626   49DB   A0 4B                        ldy #>L329C
 4627   49DD   20 85 33                     jsr L1A22
 4628                           
 4629   49E0   20 1B 4A                     jsr L314F              ; Input key and print on screen
 4630   49E3   85 64                        sta L0064              ; Store key up
 4631                           
 4632   49E5   A2 C3                        ldx #<L32A9            ; Print down ..
 4633   49E7   A0 4B            L3120:      ldy #>L32A9
 4634   49E9   20 85 33                     jsr L1A22
 4635   49EC   20 1B 4A                     jsr L314F              ; Input key and print on screen
 4636   49EF   85 63                        sta L0063              ; Store key down
 4637                           
 4638   49F1   A2 CF                        ldx #<L32B8
 4639   49F3   A0 4B                        ldy #>L32B8
 4640   49F5   20 85 33                     jsr L1A22
 4641   49F8   20 1B 4A                     jsr L314F              ; Input key and print on screen
 4642   49FB   85 62                        sta L0062              ; Store key left
 4643                           
 4644   49FD   A2 DB                        ldx #<L32C7
 4645   49FF   A0 4B                        ldy #>L32C7
 4646   4A01   20 85 33                     jsr L1A22
 4647   4A04   20 1B 4A                     jsr L314F              ; Input key and print on screen
 4648   4A07   85 61                        sta L0061              ; Store key right
 4649                           
 4650   4A09   A2 E8                        ldx #<L32D7
 4651   4A0B   A0 4B                        ldy #>L32D7
 4652   4A0D   20 85 33                     jsr L1A22
 4653   4A10   20 1B 4A                     jsr L314F              ; Input key and print on screen
 4654   4A13   85 65                        sta L0065              ; Store key jump
 4655                           
 4656   4A15   60                           rts
 4657                           
 4658                           ;------------------------------------------------
 4659                           ; Redefine keys
 4660                           ;------------------------------------------------
 4661                           
 4662   4A16                    L314E:
 4663   4A16   A9 07                    lda #7      ; Beep
 4664   4A18   20 F4 FF                 jsr $fff4
 4665                           
 4666   4A1B                    L314F:
 4667   4A1B   20 71 FE                 jsr waitkey ; Wait for key release
 4668   4A1E   C0 FF                    cpy #$ff
 4669   4A20   D0 F9                    bne L314F
 4670                           
 4671   4A22   AD 01 B0                 lda $b001   ; Wait for release CTRL/SHIFT
 4672   4A25   29 C0                    and #$c0
 4673   4A27   C9 C0                    cmp #$c0
 4674   4A29   D0 F0                    bne L314F
 4675                           
 4676   4A2B   AD 02 B0                 lda $b002   ; Wait for release REPT
 4677   4A2E   29 40                    and #$40
 4678   4A30   F0 E9                    beq L314F
 4679                           
 4680   4A32   A0 FF                    ldy #$ff
 4681   4A34                    L3150:
 4682   4A34   AD 01 B0                 lda $b001   ; Scan SHIFT
 4683   4A37   29 80                    and #$80
 4684   4A39   D0 05                    bne L315E
 4685   4A3B   A0 82                    ldy #$82    ; SHIFT pressed
 4686   4A3D   4C 5F 4A                 jmp L3176
 4687   4A40                    L315E:
 4688   4A40   AD 01 B0                 lda $b001   ; Scan CTRL
 4689   4A43   29 40                    and #$40
 4690   4A45   D0 05                    bne L315F
 4691   4A47   A0 80                    ldy #$80    ; CTRL pressed
 4692   4A49   4C 5F 4A                 jmp L3176
 4693   4A4C                    L315F:
 4694   4A4C   AD 02 B0                 lda $b002   ; Scan REPT
 4695   4A4F   29 40                    and #$40
 4696   4A51   D0 05                    bne L316D
 4697   4A53   A0 81                    ldy #$81    ; REPT pressed
 4698   4A55   4C 5F 4A                 jmp L3176
 4699   4A58                    L316D:
 4700   4A58   20 71 FE                 jsr waitkey ; Scan any key
 4701   4A5B   C0 FF                    cpy #$ff
 4702   4A5D   F0 D5                    beq L3150   ; Loop if no key pressed
 4703                           
 4704   4A5F                    L3176: 
 4705   4A5F   84 89                    sty L0089   ; Save key
 4706   4A61   98                       tya
 4707   4A62   A0 04                    ldy #4
 4708   4A64                    L3177:
 4709   4A64   D9 61 00                 cmp L0061,y ; Check if not in use
 4710   4A67   F0 B2                    beq L314F
 4711   4A69   88                       dey
 4712   4A6A   10 F8                    bpl L3177
 4713                           
 4714   4A6C   4C 6F 4A                 jmp L31CF   ; Print code
 4715                           
 4716                           ; Print key, add #3A to scancode ---------
 4717   4A6F                    L31CF:
 4718   4A6F   C9 01                    cmp #$01                ; Check [
 4719   4A71   D0 06                    bne L31D0
 4720   4A73                    L31D2:
 4721   4A73   18                       clc
 4722   4A74   69 3A                    adc #$3a
 4723   4A76   4C 72 4B                 jmp L3265
 4724   4A79                    L31D0:
 4725   4A79   C9 02                    cmp #$02                ; Check \
 4726   4A7B   D0 03                    bne L31D1
 4727   4A7D   4C 73 4A                 jmp L31D2
 4728   4A80                    L31D1:
 4729   4A80   C9 03                    cmp #$03                ; Check ]
 4730   4A82   D0 03                    bne L31D4
 4731   4A84   4C 73 4A                 jmp L31D2
 4732                           
 4733                           ; Print key, add #10 to scancode ---------
 4734   4A87                    L31D4:
 4735   4A87   C9 1C                    cmp #$1c                ; Check ,
 4736   4A89   D0 06                    bne L31D6
 4737   4A8B                    L31D5:
 4738   4A8B   18                       clc
 4739   4A8C   69 F0                    adc #$f0
 4740   4A8E   4C 72 4B                 jmp L3265
 4741   4A91                    L31D6:
 4742   4A91   C9 1D                    cmp #$1d                ; Check -
 4743   4A93   D0 03                    bne L31D7
 4744   4A95   4C 8B 4A                 jmp L31D5
 4745   4A98                    L31D7:
 4746   4A98   C9 1E                    cmp #$1e                ; Check .
 4747   4A9A   D0 03                    bne L31D8
 4748   4A9C   4C 8B 4A                 jmp L31D5
 4749   4A9F                    L31D8:
 4750   4A9F   C9 1F                    cmp #$1f                ; Check /
 4751   4AA1   D0 03                    bne L31D9
 4752   4AA3   4C 8B 4A                 jmp L31D5
 4753   4AA6                    L31D9:
 4754                           
 4755                           ; Print key, special keys->print text --
 4756                           
 4757   4AA6   C9 06                        cmp #$06               ; Check left-right arrow
 4758   4AA8   D0 0D                        bne L3209
 4759   4AAA   AD 91 00                 lda YPOS
 4760   4AAD   8D 24 4C                 sta L330B+1
 4761   4AB0   A2 23                        ldx #<L330B            ; Print
 4762   4AB2   A0 4C                        ldy #>L330B
 4763   4AB4   4C 96 4B                     jmp L326C
 4764                           
 4765   4AB7   C9 07            L3209:      cmp #$07               ; Check up-down arrow
 4766   4AB9   D0 0D                        bne L3214
 4767   4ABB   AD 91 00                 lda YPOS
 4768   4ABE   8D 30 4C                 sta L3316+1
 4769   4AC1   A2 2F                        ldx #<L3316            ; Print
 4770   4AC3   A0 4C                        ldy #>L3316
 4771   4AC5   4C 96 4B         L3211:      jmp L326C
 4772                           
 4773   4AC8   C9 04            L3214:      cmp #$04               ; Check up arrow
 4774   4ACA   D0 0D                        bne L321F
 4775   4ACC   AD 91 00                 lda YPOS
 4776   4ACF   8D 45 4C                 sta L332D+1
 4777   4AD2   A2 44                        ldx #<L332D            ; Print
 4778   4AD4   A0 4C                        ldy #>L332D
 4779   4AD6   4C 96 4B                     jmp L326C
 4780                           
 4781   4AD9   C9 05            L321F:      cmp #$05               ; Check lock arrow
 4782   4ADB   D0 0D                        bne L322A
 4783   4ADD   AD 91 00                 lda YPOS
 4784   4AE0   8D 3D 4C                 sta L3322+1
 4785   4AE3   A2 3C                        ldx #<L3322            ; Print
 4786   4AE5   A0 4C                        ldy #>L3322
 4787   4AE7   4C 96 4B                     jmp L326C
 4788                           
 4789   4AEA   C9 3B            L322A:      cmp #$3b               ; Check Escape
 4790   4AEC   D0 0D                        bne L3240
 4791   4AEE   AD 91 00                 lda YPOS
 4792   4AF1   8D F5 4B                 sta L32EB+1
 4793   4AF4   A2 F4                        ldx #<L32EB            ; Print
 4794   4AF6   A0 4B                        ldy #>L32EB
 4795   4AF8   4C 96 4B                     jmp L326C
 4796                           
 4797   4AFB   C9 0E            L3240:      cmp #$0e               ; Check Copy
 4798   4AFD   D0 0D                        bne L324B
 4799   4AFF   AD 91 00                 lda YPOS
 4800   4B02   8D 1C 4C                 sta L3306+1
 4801   4B05   A2 1B                        ldx #<L3306            ; Print
 4802   4B07   A0 4C                        ldy #>L3306
 4803   4B09   4C 96 4B                     jmp L326C
 4804                           
 4805   4B0C   C9 0D            L324B:      cmp #$0d               ; Check Return
 4806   4B0E   D0 0D                        bne L3256
 4807   4B10   AD 91 00                 lda YPOS
 4808   4B13   8D 12 4C                 sta L32FF+1
 4809   4B16   A2 11                        ldx #<L32FF            ; Print
 4810   4B18   A0 4C                        ldy #>L32FF
 4811   4B1A   4C 96 4B                     jmp L326C
 4812                           
 4813   4B1D   C9 0F            L3256:      cmp #$0f               ; Check Delete
 4814   4B1F   D0 0D                        bne L3261
 4815   4B21   AD 91 00                 lda YPOS
 4816   4B24   8D 08 4C                 sta L32F8+1
 4817   4B27   A2 07                        ldx #<L32F8            ; Print
 4818   4B29   A0 4C                        ldy #>L32F8
 4819   4B2B   4C 96 4B                     jmp L326C
 4820                           
 4821   4B2E   C9 00            L3261:      cmp #$00               ; Check Space
 4822   4B30   D0 0D                        bne L3262
 4823   4B32   AD 91 00                 lda YPOS
 4824   4B35   8D FF 4B                 sta L32F2+1
 4825   4B38   A2 FE                        ldx #<L32F2            ; Print
 4826   4B3A   A0 4B                        ldy #>L32F2
 4827   4B3C   4C 96 4B                     jmp L326C
 4828                           
 4829   4B3F   C9 80            L3262:      cmp #$80               ; Check Control
 4830   4B41   D0 0D                        bne L3263
 4831   4B43   AD 91 00                 lda YPOS
 4832   4B46   8D 62 4C                 sta L333C+1
 4833   4B49   A2 61                        ldx #<L333C            ; Print
 4834   4B4B   A0 4C                        ldy #>L333C
 4835   4B4D   4C 96 4B                     jmp L326C
 4836                           
 4837   4B50   C9 81            L3263:      cmp #$81               ; Check Rept
 4838   4B52   D0 0D                        bne L3264
 4839   4B54   AD 91 00                 lda YPOS
 4840   4B57   8D 5A 4C                 sta L3337+1
 4841   4B5A   A2 59                        ldx #<L3337            ; Print
 4842   4B5C   A0 4C                        ldy #>L3337
 4843   4B5E   4C 96 4B                     jmp L326C
 4844                           
 4845   4B61   C9 82            L3264:      cmp #$82               ; Check Shift
 4846   4B63   D0 0D                        bne L3265
 4847   4B65   AD 91 00                 lda YPOS
 4848   4B68   8D 51 4C                 sta L3336+1
 4849   4B6B   A2 50                        ldx #<L3336            ; Print
 4850   4B6D   A0 4C                        ldy #>L3336
 4851   4B6F   4C 96 4B                     jmp L326C
 4852                           
 4853                           ; Print key, add #20 to scancode ---------
 4854   4B72                    L3265:
 4855   4B72   18                       clc                        ; Print '+ Key +'
 4856   4B73   69 20                    adc #$20
 4857   4B75   48                       pha
 4858   4B76   A9 27                    lda #$27
 4859   4B78   AC 91 00                 ldy YPOS
 4860   4B7B   A2 0E                    ldx #14
 4861   4B7D   20 B2 56                 jsr PUTCHAR
 4862   4B80   68                       pla
 4863   4B81   AC 91 00                 ldy YPOS
 4864   4B84   A2 0F                    ldx #15
 4865   4B86   20 B2 56                 jsr PUTCHAR
 4866   4B89   A9 27                    lda #$27
 4867   4B8B   AC 91 00                 ldy YPOS
 4868   4B8E   A2 10                    ldx #16
 4869   4B90   20 B2 56                 jsr PUTCHAR
 4870                           
 4871   4B93   4C 99 4B                     jmp L326F
 4872                           
 4873   4B96   20 85 33         L326C:      jsr L1A22              ; Print string
 4874                           
 4875   4B99                    L326F:
 4876   4B99   A5 89                        lda L0089
 4877   4B9B   60                           rts
 4878                           
 4879                           ;------------------------------------------------
 4880                           ; Textstrings
 4881                           ;------------------------------------------------
 4882                           
 4883   4B9C   CD 01 4B 20 45   L3272:      .byte yellow+13,1,'K E Y',0
        4BA1   20 59 00 
 4884   4BA4   C7 03 53 20 45               .byte yellow+7,3,'S E L E C T I O N',0,$ff
        4BA9   20 4C 20 45 20 
        4BAE   43 20 54 20 49 
        4BB3   20 4F 20 4E 00 
        4BB8   FF 
 4885                           
 4886   4BB9   C8 08 55 70 20   L329C:      .byte red+8,8,'Up .. ',0,$ff
        4BBE   2E 2E 20 00 FF 
 4887                           
 4888   4BC3   C6 0A 44 6F 77   L32A9:      .byte red+6,10,'Down .. ',0,$ff
        4BC8   6E 20 2E 2E 20 
        4BCD   00 FF 
 4889                           
 4890   4BCF   C6 0C 4C 65 66   L32B8:      .byte red+6,12,'Left .. ',0,$ff
        4BD4   74 20 2E 2E 20 
        4BD9   00 FF 
 4891                           
 4892   4BDB   C5 0E 52 69 67   L32C7:      .byte red+5,14,'Right .. ',0,$ff
        4BE0   68 74 20 2E 2E 
        4BE5   20 00 FF 
 4893                           
 4894   4BE8   C6 10 4A 75 6D   L32D7:      .byte red+6,16,'Jump .. ',0,$ff
        4BED   70 20 2E 2E 20 
        4BF2   00 FF 
 4895                           
 4896   4BF4   CE 0C 45 73 63   L32EB:      .byte red+14,12,'Escape',0,$ff
        4BF9   61 70 65 00 FF 
 4897                           
 4898   4BFE   CE 0C 53 70 61   L32F2:      .byte red+14,12,'Space',0,$ff
        4C03   63 65 00 FF 
 4899                           
 4900   4C07   CE 0C 44 65 6C   L32F8:      .byte red+14,12,'Delete',0,$ff
        4C0C   65 74 65 00 FF 
 4901                           
 4902   4C11   CE 0C 52 65 74   L32FF:      .byte red+14,12,'Return',0,$ff
        4C16   75 72 6E 00 FF 
 4903                           
 4904   4C1B   CE 0C 43 6F 70   L3306:      .byte red+14,12,'Copy',0,$ff
        4C20   79 00 FF 
 4905                           
 4906   4C23   CE 0C 43 75 72   L330B:      .byte red+14,12,'Curs-Hor',0,$ff
        4C28   73 2D 48 6F 72 
        4C2D   00 FF 
 4907                           
 4908   4C2F   CE 0C 43 75 72   L3316:      .byte red+14,12,'Curs-Vert',0,$ff
        4C34   73 2D 56 65 72 
        4C39   74 00 FF 
 4909                           
 4910   4C3C   CE 0C 4C 6F 63   L3322:      .byte red+14,12,'Lock',0,$ff
        4C41   6B 00 FF 
 4911                           
 4912   4C44   CE 0C 55 70 20   L332D:      .byte red+14,12,'Up Arrow',0,$ff
        4C49   41 72 72 6F 77 
        4C4E   00 FF 
 4913                           
 4914   4C50   CE 0C 53 68 69   L3336:      .byte red+14,12,'Shift',0,$ff
        4C55   66 74 00 FF 
 4915                           
 4916   4C59   CE 0E 52 65 70   L3337:      .byte red+14,14,'Rept',0,$ff
        4C5E   74 00 FF 
 4917                           
 4918   4C61   CE 0A 43 6F 6E   L333C:      .byte red+14,10,'Control',0,$ff
        4C66   74 72 6F 6C 00 
        4C6B   FF 
 4919                           
 4920   4C6C   CE 0A 5B 00 FF   L333D:      .byte red+14,10,'[',0,$ff
 4921                           
 4922   4C71   CE 0A 5C 00 FF   L333E:      .byte red+14,10,'\',0,$ff
 4923                           
 4924   4C76   CE 0A 5D 00 FF   L333F:      .byte red+14,10,']',0,$ff
 4925                           
 4926                           ;------------------------------------------------
 4927                           ; Print keys in use
 4928                           ;------------------------------------------------
 4929                           
 4930   4C7B                    L3344:
 4931   4C7B   A2 CB                        ldx #<L33A4  ; Print KEYS
 4932   4C7D   A0 4C                        ldy #>L33A4
 4933   4C7F   20 85 33                     jsr L1A22
 4934                           
 4935   4C82   A2 B9                        ldx #<L329C  ; Print 'UP .. '
 4936   4C84   A0 4B                        ldy #>L329C
 4937   4C86   20 85 33                     jsr L1A22
 4938                           
 4939   4C89   A5 64                        lda L0064    ; Print key in use
 4940   4C8B   20 C6 4C                     jsr L339C
 4941                           
 4942   4C8E   A2 C3                        ldx #<L32A9  ; Print 'DOWN .. '
 4943   4C90   A0 4B                        ldy #>L32A9
 4944   4C92   20 85 33                     jsr L1A22
 4945                           
 4946   4C95   A5 63                        lda L0063    ; Print key in use
 4947   4C97   20 C6 4C                     jsr L339C
 4948                           
 4949   4C9A   A2 CF                        ldx #<L32B8  ; Print 'LEFT .. '
 4950   4C9C   A0 4B                        ldy #>L32B8
 4951   4C9E   20 85 33                     jsr L1A22
 4952                           
 4953   4CA1   A5 62                        lda L0062    ; Print key in use
 4954   4CA3   20 C6 4C                     jsr L339C
 4955                           
 4956   4CA6   A2 DB                        ldx #<L32C7  ; Print 'RIGHT .. '
 4957   4CA8   A0 4B                        ldy #>L32C7
 4958   4CAA   20 85 33                     jsr L1A22
 4959                           
 4960   4CAD   A5 61                        lda L0061    ; Print key in use
 4961   4CAF   20 C6 4C                     jsr L339C
 4962                           
 4963   4CB2   A2 E8                        ldx #<L32D7  ; Print 'JUMP .. '
 4964   4CB4   A0 4B                        ldy #>L32D7
 4965   4CB6   20 85 33                     jsr L1A22
 4966                           
 4967   4CB9   A5 65                        lda L0065    ; Print key in use
 4968   4CBB   20 C6 4C                     jsr L339C
 4969                           
 4970   4CBE   A2 D3                        ldx #<L33B5  ; Print 'HOLD + ABORT'
 4971   4CC0   A0 4C                        ldy #>L33B5
 4972   4CC2   20 85 33                     jsr L1A22
 4973                           
 4974   4CC5   60                           rts
 4975                           
 4976   4CC6   85 88            L339C:      sta L0088    ; Save key
 4977   4CC8   4C 6F 4A                     jmp L31CF    ; Print code
 4978                           
 4979   4CCB   CE 06 4B 45 59   L33A4:      .byte yellow+14,6,'KEYS',0,$ff
        4CD0   53 00 FF 
 4980                           
 4981   4CD3   C6 12 48 6F 6C   L33B5:      .byte blue+6,18,'Hold .. ',$27,'H',$27,0
        4CD8   64 20 2E 2E 20 
        4CDD   27 48 27 00 
 4982   4CE1   C5 14 41 62 6F               .byte blue+5,20,'Abort .. Escape +',$27,'H',$27,0,$ff
        4CE6   72 74 20 2E 2E 
        4CEB   20 45 73 63 61 
        4CF0   70 65 20 2B 27 
        4CF5   48 27 00 FF 
 4983                           
 4984                           ;------------------------------------------------
 4985                           ; Play sound with movements
 4986                           ;------------------------------------------------
 4987                           
 4988   4CF9   A5 8F            L33E4:      lda L008F              ; Move man sound
 4989   4CFB   F0 03                        beq L33EB              ; F0 03
 4990   4CFD   C6 8F                        dec L008F              ; C6 8F
 4991   4CFF   60                           rts                    ; 60
 4992                           
 4993   4D00   A5 46            L33EB:      lda L0046              ; Branch if man is moving
 4994   4D02   05 47                        ora L0047
 4995   4D04   D0 01                        bne L33F2
 4996   4D06   60                           rts
 4997                           
 4998   4D07   A5 38            L33F2:      lda L0038              ; Branch every other timer frame
 4999   4D09   29 01                        and #$01
 5000   4D0B   F0 01                        beq L33F9
 5001   4D0D   60                           rts
 5002                           
 5003   4D0E   A5 49            L33F9:      lda L0049              ; Branch if already moving
 5004   4D10   D0 03                        bne L3402
 5005   4D12   4C 40 4D                 jmp L343C
 5006                           
 5007   4D15   C9 01            L3402:      cmp #$01               ; Climbing?
 5008   4D17   D0 05                        bne L340B
 5009   4D19   A2 09                    ldx #9
 5010   4D1B   4C 49 4D                     jmp L343E
 5011                           
 5012   4D1E                    L340B:
 5013   4D1E   C9 02                        cmp #$02               ; Jumping?
 5014   4D20   D0 10                        bne L3429
 5015   4D22   A5 4A                        lda L004A
 5016   4D24   C9 0B                        cmp #$0B
 5017   4D26   90 05                        bcc L341F              ; Branch if still rising in air
 5018   4D28   A6 4A                    ldx L004A
 5019   4D2A   4C 49 4D                     jmp L343E              ; Play sound with pitch $BE-2*4A
 5020                           
 5021   4D2D                    L341F:
 5022   4D2D   A6 4A                    ldx L004A
 5023   4D2F   4C 49 4D                      jmp L343E              ; Play sound with pitch $96+2*4A
 5024                           
 5025   4D32   C9 03            L3429:      cmp #$03               ; Falling?
 5026   4D34   D0 05                        bne L3437
 5027   4D36   A6 4A                    ldx L004A
 5028   4D38   4C 49 4D                     jmp L343E              ; Play sound with pitch $6E-2*4A
 5029                           
 5030   4D3B   A5 46            L3437:      lda L0046              ; Horizontal movement?
 5031   4D3D   D0 01                        bne L343C              ; Play sound with pitch $64
 5032   4D3F   60                           rts
 5033                           
 5034   4D40                    L343C:
 5035   4D40   AD 02 B0                 lda $b002
 5036   4D43   49 04                    eor #4
 5037   4D45   8D 02 B0                 sta $b002
 5038   4D48   60                       rts
 5039   4D49                    L343E:
 5040   4D49   A0 01                    ldy #1
 5041   4D4B   A9 01                    lda #1
 5042   4D4D   20 23 57                 jsr sound
 5043                           
 5044   4D50   60                           rts
 5045                           
 5046   4D51   31 32 33 34 35   L344B:      .byte $31,$32,$33,$34,$35,$36,$37,$38
        4D56   36 37 38 
 5047   4D59   39 30 31 32 33               .byte $39,$30,$31,$32,$33,$34,$35,$36
        4D5E   34 35 36 
 5048   4D61   37 38 39 30 31               .byte $37,$38,$39,$30,$31,$32,$33,$34
        4D66   32 33 34 
 5049   4D69   35 36 37 38 39               .byte $35,$36,$37,$38,$39,$30,$31,$32
        4D6E   30 31 32 
 5050   4D71   33 34 35 36 37               .byte $33,$34,$35,$36,$37,$38,$39,$30
        4D76   38 39 30 
 5051   4D79   31 32 33 34 35               .byte $31,$32,$33,$34,$35,$36,$37,$38
        4D7E   36 37 38 
 5052   4D81   39 30 31 32 33               .byte $39,$30,$31,$32,$33,$34,$35,$36
        4D86   34 35 36 
 5053   4D89   37 38 39 30 31               .byte $37,$38,$39,$30,$31,$32,$33,$34
        4D8E   32 33 34 
 5054   4D91   35 36 37 38 39               .byte $35,$36,$37,$38,$39,$30,$31,$32
        4D96   30 31 32 
 5055   4D99   33 34 35 36 37               .byte $33,$34,$35,$36,$37
 5056                           
 5057   4D9E   13 00 01 00 00   L3498:      .byte $13,$00,$01,$00,$00,$00,$01,$00 ; Sound
        4DA3   00 01 00 
 5058                           
 5059   4DA6   03 00 02 00                  .byte $03,$00,$02,$00
 5060   4DAA   78 00            L34A4:      .byte $78,$00
 5061   4DAC   1E 00            L34A6:      .byte $1E,$00
 5062                           
 5063   4DAE   10 00 03 00      L34A8:      .byte $10,$00,$03,$00  ; Movement/erase seed sound
 5064   4DB2   00 00 04 00      L34AC:      .byte $00,$00,$04,$00
 5065                           
 5066   4DB6   10 00 01 00 04   L34B0:      .byte $10,$00,$01,$00,$04,$00,$01,$00 ; Update score/bonus
        4DBB   00 01 00 
 5067                           
 5068   4DBE   00 00 00 00 00               .byte $00,$00,$00,$00,$00,$00,$00,$00
        4DC3   00 00 00 
 5069                           
 5070                           ;------------------------------------------------
 5071                           ; Level datapointers
 5072                           ;------------------------------------------------
 5073                           
 5074   4DC6   D6 4D 44 4E      L34C0:      .byte <L34D0,>L34D0,<L353E,>L353E
 5075   4DCA   B8 4E 45 4F                  .byte <L35B2,>L35B2,<L364B,>L364B
 5076   4DCE   D0 4F 5D 50                  .byte <L36DC,>L36DC,<L376C,>L376C
 5077   4DD2   D2 50 5C 51                  .byte <L37E8,>L37E8,<L3872,>L3872
 5078                           
 5079                           ;------------------------------------------------
 5080                           ; Data level 1
 5081                           ;------------------------------------------------
 5082                           
 5083                           ;             +-----------------> walls
 5084                           ;             |   +-------------> ladders
 5085                           ;             |   |   +---------> elevator flag
 5086                           ;             |   |   |   +-----> seed
 5087                           ;             |   |   |   |   +-> birds
 5088   4DD6   0D 04 00 0A 02   L34D0: .byte $0d,$04,$00,$0a,$02
 5089                           
 5090                           ;             Y   X-  X+
 5091   4DDB   01 00 0F                .byte $01,$00,$0F ; Walls
 5092   4DDE   05 01 0E                .byte $05,$01,$0e
 5093   4DE1   09 02 06                .byte $09,$02,$06
 5094   4DE4   09 0C 0E                .byte $09,$0c,$0e
 5095   4DE7   0A 07 08                .byte $0a,$07,$08
 5096   4DEA   0B 09 0A                .byte $0b,$09,$0a
 5097   4DED   0C 0B 0C                .byte $0c,$0b,$0c
 5098   4DF0   0D 0D 0D                .byte $0d,$0d,$0d
 5099   4DF3   0D 03 05                .byte $0d,$03,$05
 5100   4DF6   0E 07 08                .byte $0e,$07,$08
 5101   4DF9   11 04 07                .byte $11,$04,$07
 5102   4DFC   11 09 0D                .byte $11,$09,$0d
 5103   4DFF   11 0F 0F                .byte $11,$0f,$0f
 5104                           
 5105   4E02   03 06 0B                .byte $03,$06,$0b ; Ladders
 5106   4E05   05 02 13                .byte $05,$02,$13
 5107   4E08   09 02 07                .byte $09,$02,$07
 5108   4E0B   0D 02 07                .byte $0d,$02,$07
 5109                           
 5110   4E0E   03 02 01 06 0B          .byte $03,$02,$01,$06,$0b,$06 ; Eggs
        4E13   06 
 5111   4E14   0E 06 02 0A 0E          .byte $0e,$06,$02,$0a,$0e,$0a
        4E19   0A 
 5112   4E1A   08 0B 03 0E 07          .byte $08,$0b,$03,$0e,$07,$0f
        4E1F   0F 
 5113   4E20   04 12 0A 12 0F          .byte $04,$12,$0a,$12,$0f,$12
        4E25   12 
 5114                           
 5115   4E26   02 02 0B 02 04          .byte $02,$02,$0b,$02,$04,$06 ; Seed
        4E2B   06 
 5116   4E2C   0C 06 04 0A 0C          .byte $0c,$06,$04,$0a,$0c,$0a
        4E31   0A 
 5117   4E32   08 0F 0D 0E 07          .byte $08,$0f,$0d,$0e,$07,$12
        4E37   12 
 5118   4E38   0B 12                   .byte $0b,$12
 5119                           
 5120   4E3A   04 0D 06 11             .byte $04,$0d,$06,$11 ; Birds
 5121   4E3E   03 09 05 05 0A          .byte $03,$09,$05,$05,$0a,$01
        4E43   01 
 5122                           
 5123                           ;------------------------------------------------
 5124                           ; Data level 2
 5125                           ;------------------------------------------------
 5126                           
 5127   4E44   0D 08 00 07 03   L353E: .byte $0d,$08,$00,$07,$03
 5128                           
 5129   4E49   01 00 02                .byte $01,$00,$02 ; Walls
 5130   4E4C   01 04 0F                .byte $01,$04,$0f
 5131   4E4F   05 00 05                .byte $05,$00,$05
 5132   4E52   05 07 08                .byte $05,$07,$08
 5133   4E55   05 0A 0B                .byte $05,$0a,$0b
 5134   4E58   05 0D 0F                .byte $05,$0d,$0f
 5135   4E5B   09 00 02                .byte $09,$00,$02
 5136   4E5E   09 04 0B                .byte $09,$04,$0b
 5137   4E61   09 0D 0F                .byte $09,$0d,$0f
 5138   4E64   0D 00 08                .byte $0d,$00,$08
 5139   4E67   0D 0A 0F                .byte $0d,$0a,$0f
 5140   4E6A   11 03 08                .byte $11,$03,$08
 5141   4E6D   11 0A 0F                .byte $11,$0a,$0f
 5142                           
 5143   4E70   01 02 0F                .byte $01,$02,$0f ; Ladders
 5144   4E73   03 0E 13                .byte $03,$0e,$13
 5145   4E76   05 06 0F                .byte $05,$06,$0f
 5146   4E79   07 02 07                .byte $07,$02,$07
 5147   4E7C   07 0A 13                .byte $07,$0a,$13
 5148   4E7F   0B 0A 0F                .byte $0b,$0a,$0f
 5149   4E82   0E 02 0B                .byte $0e,$02,$0b
 5150   4E85   0E 0E 13                .byte $0e,$0e,$13
 5151                           
 5152   4E88   00 06 00 0A 04          .byte $00,$06,$00,$0a,$04,$02 ; Eggs
        4E8D   02 
 5153   4E8E   03 06 06 0A 06          .byte $03,$06,$06,$0a,$06,$0e
        4E93   0E 
 5154   4E94   06 12 0A 02 0B          .byte $06,$12,$0a,$02,$0b,$06
        4E99   06 
 5155   4E9A   0C 12 0F 0A 0F          .byte $0c,$12,$0f,$0a,$0f,$12
        4E9F   12 
 5156                           
 5157   4EA0   00 02 00 0E             .byte $00,$02,$00,$0e ; Seed
 5158   4EA4   08 0E 0A 12             .byte $08,$0e,$0a,$12
 5159   4EA8   0C 02 02 02             .byte $0c,$02,$02,$02
 5160   4EAC   0D 06                   .byte $0d,$06
 5161                           
 5162   4EAE   01 01 05 11 0E          .byte $01,$01,$05,$11,$0e,$09 ; Birds
        4EB3   09 
 5163   4EB4   0B 11 09 09             .byte $0b,$11,$09,$09
 5164                           
 5165                           ;------------------------------------------------
 5166                           ; Data level 3
 5167                           ;------------------------------------------------
 5168                           
 5169   4EB8   14 07 01 0A 03   L35B2: .byte $14,$07,$01,$0a,$03
 5170                           
 5171   4EBD   01 00 01                .byte $01,$00,$01 ; Walls
 5172   4EC0   01 06 08                .byte $01,$06,$08
 5173   4EC3   01 0A 0F                .byte $01,$0a,$0f
 5174   4EC6   02 02 03                .byte $02,$02,$03
 5175   4EC9   05 0C 0E                .byte $05,$0c,$0e
 5176   4ECC   06 06 09                .byte $06,$06,$09
 5177   4ECF   07 0B 0B                .byte $07,$0b,$0b
 5178   4ED2   08 00 03                .byte $08,$00,$03
 5179   4ED5   08 0C 0C                .byte $08,$0c,$0c
 5180   4ED8   09 0E 0F                .byte $09,$0e,$0f
 5181   4EDB   0B 0A 0B                .byte $0b,$0a,$0b
 5182   4EDE   0C 00 02                .byte $0c,$00,$02
 5183   4EE1   0C 0E 0F                .byte $0c,$0e,$0f
 5184   4EE4   0D 02 03                .byte $0d,$02,$03
 5185   4EE7   0D 0D 0D                .byte $0d,$0d,$0d
 5186   4EEA   0E 08 0B                .byte $0e,$08,$0b
 5187   4EED   0F 06 08                .byte $0f,$06,$08
 5188   4EF0   11 0C 0C                .byte $11,$0c,$0c
 5189   4EF3   11 0E 0F                .byte $11,$0e,$0f
 5190   4EF6   12 0A 0B                .byte $12,$0a,$0b
 5191                           
 5192   4EF9   00 02 0A                .byte $00,$02,$0a ; Ladders
 5193   4EFC   02 09 0F                .byte $02,$09,$0f
 5194   4EFF   06 07 11                .byte $06,$07,$11
 5195   4F02   08 07 11                .byte $08,$07,$11
 5196   4F05   0A 0F 14                .byte $0a,$0f,$14
 5197   4F08   0E 02 07                .byte $0e,$02,$07
 5198   4F0B   0F 0A 0E                .byte $0f,$0a,$0e
 5199   4F0E                         
 5200   4F0E   04                      .byte $04 ; Elevator
 5201                           
 5202   4F0F   03 09 01 0D 03          .byte $03,$09,$01,$0d,$03,$03 ; Eggs
        4F14   03 
 5203   4F15   03 0E 07 07 0B          .byte $03,$0e,$07,$07,$0b,$0c
        4F1A   0C 
 5204   4F1B   0C 09 0C 02 0D          .byte $0c,$09,$0c,$02,$0d,$0e
        4F20   0E 
 5205   4F21   0D 06 0F 0F 0F          .byte $0d,$06,$0f,$0f,$0f,$12
        4F26   12 
 5206                           
 5207   4F27   00 0D 01 02 01          .byte $00,$0d,$01,$02,$01,$09 ; Seed
        4F2C   09 
 5208   4F2D   07 10 09 0F 09          .byte $07,$10,$09,$0f,$09,$07
        4F32   07 
 5209   4F33   0A 02 0A 0C 0B          .byte $0a,$02,$0a,$0c,$0b,$0f
        4F38   0F 
 5210   4F39   0E 12                   .byte $0e,$12
 5211                           
 5212   4F3B   0E 05 02 0C 08          .byte $0e,$05,$02,$0c,$08,$0f ; Birds
        4F40   0F 
 5213   4F41   00 01 06 06             .byte $00,$01,$06,$06
 5214                           
 5215                           ;------------------------------------------------
 5216                           ; Data level 4
 5217                           ;------------------------------------------------
 5218                           
 5219   4F45   18 05 01 06 04   L364B: .byte $18,$05,$01,$06,$04
 5220                           
 5221   4F4A   01 00 03                .byte $01,$00,$03 ; Walls
 5222   4F4D   01 05 08                .byte $01,$05,$08
 5223   4F50   01 0B 0F                .byte $01,$0b,$0f
 5224   4F53   04 0F 0F                .byte $04,$0f,$0f
 5225   4F56   05 00 03                .byte $05,$00,$03
 5226   4F59   05 06 08                .byte $05,$06,$08
 5227   4F5C   05 0B 0D                .byte $05,$0b,$0d
 5228   4F5F   08 0E 0F                .byte $08,$0e,$0f ; SAMWISE
 5229   4F62   09 00 01                .byte $09,$00,$01
 5230   4F65   09 06 07                .byte $09,$06,$07
 5231   4F68   0A 03 03                .byte $0a,$03,$03
 5232   4F6B   0A 0B 0D                .byte $0a,$0b,$0d
 5233   4F6E   0B 04 04                .byte $0b,$04,$04
 5234   4F71   0C 06 07                .byte $0c,$06,$07
 5235   4F74   0D 00 00                .byte $0d,$00,$00 ; SAMWISE
 5236   4F77   0D 07 08                .byte $0d,$07,$08
 5237   4F7A   0E 02 02                .byte $0e,$02,$02
 5238   4F7D   0E 0B 0C                .byte $0e,$0b,$0c ; SAMWISE
 5239   4F80   0E 0F 0F                .byte $0e,$0f,$0f ; SAMWISE
 5240   4F83   0F 03 03                .byte $0f,$03,$03
 5241   4F86   10 04 04                .byte $10,$04,$04
 5242   4F89   11 06 08                .byte $11,$06,$08
 5243   4F8C   11 0B 0C                .byte $11,$0b,$0c
 5244   4F8F   11 0E 0F                .byte $11,$0e,$0f ; SAMWISE
 5245                           
 5246   4F92   02 02 07                .byte $02,$02,$07 ; Ladders
 5247   4F95   07 02 13                .byte $07,$02,$13
 5248   4F98   0C 02 07                .byte $0c,$02,$07
 5249   4F9B   0C 0B 13                .byte $0c,$0b,$13
 5250   4F9E   0F 0D 13                .byte $0f,$0d,$13
 5251                           
 5252   4FA1   09                      .byte $09 ; Elevator
 5253                           
 5254   4FA2   00 02 00 0A 00          .byte $00,$02,$00,$0a,$00,$0e ; Eggs
        4FA7   0E 
 5255   4FA8   06 06 08 0E 0B          .byte $06,$06,$08,$0e,$0b,$02
        4FAD   02 
 5256   4FAE   0D 06 0D 11 0E          .byte $0d,$06,$0d,$11,$0e,$0e
        4FB3   0E 
 5257   4FB4   0B 0B 0F 09 0D          .byte $0b,$0b,$0f,$09,$0d,$14
        4FB9   14 
 5258                           
 5259   4FBA   00 06 05 02 0E          .byte $00,$06,$05,$02,$0e,$02 ; Seed
        4FBF   02 
 5260   4FC0   04 0C 08 12 0B          .byte $04,$0c,$08,$12,$0b,$12
        4FC5   12 
 5261                           
 5262   4FC6   03 01 07 11 0D          .byte $03,$01,$07,$11,$0d,$01 Birds
        4FCB   01 
 5263   4FCC   0E 11 08 05             .byte $0e,$11,$08,$05
 5264                           
 5265                           ;------------------------------------------------
 5266                           ; Data level 5
 5267                           ;------------------------------------------------
 5268                           
 5269   4FD0   10 09 01 0D 04   L36DC: .byte $10,$09,$01,$0d,$04
 5270                           
 5271   4FD5   01 00 00                .byte $01,$00,$00 ; Walls
 5272   4FD8   01 02 08                .byte $01,$02,$08
 5273   4FDB   01 0A 0B                .byte $01,$0a,$0b
 5274   4FDE   01 0E 0F                .byte $01,$0e,$0f
 5275   4FE1   05 00 04                .byte $05,$00,$04
 5276   4FE4   05 08 09                .byte $05,$08,$09
 5277   4FE7   05 0B 0B                .byte $05,$0b,$0b 
 5278   4FEA   09 00 04                .byte $09,$00,$04
 5279   4FED   09 08 0B                .byte $09,$08,$0b
 5280   4FF0   09 0F 0F                .byte $09,$0f,$0f
 5281   4FF3   0D 00 04                .byte $0d,$00,$04
 5282   4FF6   0F 09 0A                .byte $0f,$09,$0a
 5283   4FF9   10 07 07                .byte $10,$07,$07
 5284   4FFC   11 03 05                .byte $11,$03,$05
 5285   4FFF   11 0E 0F                .byte $11,$0e,$0f
 5286   5002   12 09 0B                .byte $12,$09,$0b
 5287                           
 5288   5005   02 02 07                .byte $02,$02,$07 ; Ladders
 5289   5008   02 0A 0F                .byte $02,$0a,$0f
 5290   500B   04 0A 13                .byte $04,$0a,$13
 5291   500E   06 02 07                .byte $06,$02,$07
 5292   5011   06 09 0E                .byte $06,$09,$0e
 5293   5014   08 02 07                .byte $08,$02,$07
 5294   5017   09 06 0B                .byte $09,$06,$0b
 5295   501A   0B 02 07                .byte $0b,$02,$07
 5296   501D   09 10 14                .byte $09,$10,$14
 5297                           
 5298   5020   0C                      .byte $0c ; Elevator
 5299                           
 5300   5021   00 02 00 06 00          .byte $00,$02,$00,$06,$00,$0a ; Eggs
        5026   0A 
 5301   5027   00 0E 04 06 07          .byte $00,$0e,$04,$06,$07,$11
        502C   11 
 5302   502D   07 09 0A 05 0A          .byte $07,$09,$0a,$05,$0a,$13
        5032   13 
 5303   5033   0F 12 05 12 0F          .byte $0f,$12,$05,$12,$0f,$0a
        5038   0A 
 5304                           
 5305   5039   03 02 04 02 05          .byte $03,$02,$04,$02,$05,$02 ; Seeds
        503E   02 
 5306   503F   0A 02 0E 02 0F          .byte $0a,$02,$0e,$02,$0f,$02
        5044   02 
 5307   5045   08 0A 0B 0A 03          .byte $08,$0a,$0b,$0a,$03,$0e
        504A   0E 
 5308   504B   03 12 0B 13 0E          .byte $03,$12,$0b,$13,$0e,$12
        5050   12 
 5309   5051   01 0A                   .byte $01,$0a
 5310                           
 5311   5053   01 05 01 0D 03          .byte $01,$05,$01,$0d,$03,$09 ; Birds
        5058   09 
 5312   5059   0A 09 0B 05             .byte $0a,$09,$0b,$05
 5313                           
 5314                           ;------------------------------------------------
 5315                           ; Data level 6
 5316                           ;------------------------------------------------
 5317                           
 5318   505D   0F 06 01 07 04   L376C: .byte $0f,$06,$01,$07,$04
 5319                           
 5320   5062   01 00 02                .byte $01,$00,$02 ; Walls
 5321   5065   01 05 07                .byte $01,$05,$07
 5322   5068   01 0A 0B                .byte $01,$0a,$0b
 5323   506B   05 00 01                .byte $05,$00,$01
 5324   506E   05 03 04                .byte $05,$03,$04
 5325   5071   05 0B 0C                .byte $05,$0b,$0c
 5326   5074   08 0E 0F                .byte $08,$0e,$0f
 5327   5077   09 02 06                .byte $09,$02,$06
 5328   507A   09 0B 0E                .byte $09,$0b,$0e
 5329   507D   0D 00 04                .byte $0d,$00,$04
 5330   5080   0D 0D 0F                .byte $0d,$0d,$0f
 5331   5083   11 05 05                .byte $11,$05,$05
 5332   5086   11 07 07                .byte $11,$07,$07
 5333   5089   10 0B 0E                .byte $10,$0b,$0e
 5334   508C   12 0E 0F                .byte $12,$0e,$0f
 5335                           
 5336   508F   00 02 07                .byte $00,$02,$07 ; Ladders
 5337   5092   03 04 0F                .byte $03,$04,$0f
 5338   5095   0C 06 0B                .byte $0c,$06,$0b
 5339   5098   0C 0F 12                .byte $0c,$0f,$12
 5340   509B   0E 02 0B                .byte $0e,$02,$0b
 5341   509E   0E 0D 14                .byte $0e,$0d,$14
 5342                           
 5343   50A1   08                      .byte $08 ; Elevator
 5344                           
 5345   50A2   02 02 0D 02 04          .byte $02,$02,$0d,$02,$04,$06 ; Eggs
        50A7   06 
 5346   50A8   0B 06 0B 0A 0D          .byte $0b,$06,$0b,$0a,$0d,$0a
        50AD   0A 
 5347   50AE   06 0E 0F 13 03          .byte $06,$0e,$0f,$13,$03,$13
        50B3   13 
 5348   50B4   05 12 0B 11 0F          .byte $05,$12,$0b,$11,$0f,$0e
        50B9   0E 
 5349                           
 5350   50BA   00 0E 01 0E 02          .byte $00,$0e,$01,$0e,$02,$0e ; Seed
        50BF   0E 
 5351   50C0   06 0A 0A 02             .byte $06,$0a,$0a,$02
 5352   50C4   0B 02 0F 09             .byte $0b,$02,$0f,$09
 5353                           
 5354   50C8   01 01 03 0D 0C          .byte $01,$01,$03,$0d,$0c,$05 ; Birds
        50CD   05 
 5355   50CE   0E 0D 0E 08             .byte $0e,$0d,$0e,$08
 5356                           
 5357                           ;------------------------------------------------
 5358                           ; Data level 7
 5359                           ;------------------------------------------------
 5360                           
 5361   50D2   17 07 01 04 03   L37E8: .byte $17,$07,$01,$04,$03
 5362                           
 5363   50D7   01 03 04                .byte $01,$03,$04 ; Walls
 5364   50DA   01 06 08                .byte $01,$06,$08
 5365   50DD   02 05 05                .byte $02,$05,$05
 5366   50E0   02 09 09                .byte $02,$09,$09
 5367   50E3   02 0D 0D                .byte $02,$0d,$0d
 5368   50E6   03 00 01                .byte $03,$00,$01
 5369   50E9   03 09 09                .byte $03,$09,$09
 5370   50EC   03 0B 0B                .byte $03,$0b,$0b
 5371   50EF   05 01 03                .byte $05,$01,$03
 5372   50F2   06 05 08                .byte $06,$05,$08
 5373   50F5   07 05 05                .byte $07,$05,$05
 5374   50F8   07 0C 0D                .byte $07,$0c,$0d
 5375   50FB   08 05 05                .byte $08,$05,$05
 5376   50FE   09 05 05                .byte $09,$05,$05
 5377   5101   09 08 08                .byte $09,$08,$08
 5378   5104   09 00 02                .byte $09,$00,$02
 5379   5107   0A 05 05                .byte $0a,$05,$05
 5380   510A   0A 08 08                .byte $0a,$08,$08
 5381   510D   09 0A 0A                .byte $09,$0a,$0a
 5382   5110   0C 0B 0C                .byte $0c,$0b,$0c
 5383   5113   0D 00 03                .byte $0d,$00,$03
 5384   5116   0D 05 06                .byte $0d,$05,$06
 5385   5119   10 0A 0D                .byte $10,$0a,$0d
 5386                           
 5387   511C   01 02 0F                .byte $01,$02,$0f ; Ladders
 5388   511F   03 02 07                .byte $03,$02,$07
 5389   5122   04 10 13                .byte $04,$10,$13
 5390   5125   06 10 13                .byte $06,$10,$13
 5391   5128   08 10 13                .byte $08,$10,$13
 5392   512B   0B 0D 12                .byte $0b,$0d,$12
 5393   512E   0C 08 0E                .byte $0c,$08,$0e
 5394                           
 5395   5131   0E                      .byte $0e ; Elevator
 5396                           
 5397   5132   02 03 05 12 07          .byte $02,$03,$05,$12,$07,$12 ; Eggs
        5137   12 
 5398   5138   09 12 06 0E 07          .byte $09,$12,$06,$0e,$07,$07
        513D   07 
 5399   513E   0A 0A 0B 04 0C          .byte $0a,$0a,$0b,$04,$0c,$02
        5143   02 
 5400   5144   0D 08 0C 11 0D          .byte $0d,$08,$0c,$11,$0d,$0c
        5149   0C 
 5401                           
 5402   514A   02 06 02 0E 08          .byte $02,$06,$02,$0e,$08,$07 ; Seed
        514F   07 
 5403   5150   0A 11                   .byte $0a,$11
 5404                           
 5405   5152   01 0D 0C 07 0B          .byte $01,$0d,$0c,$07,$0b,$10 ; Birds
        5157   10 
 5406   5158   00 03 02 09             .byte $00,$03,$02,$09
 5407                           
 5408                           ;------------------------------------------------
 5409                           ; Data level 8
 5410                           ;------------------------------------------------
 5411                           
 5412   515C   0F 06 00 0C 03   L3872: .byte $0f,$06,$00,$0c,$03
 5413                           
 5414   5161   01 00 0F                .byte $01,$00,$0f ; Walls
 5415   5164   05 02 03                .byte $05,$02,$03
 5416   5167   05 06 0A                .byte $05,$06,$0a
 5417   516A   05 0D 0E                .byte $05,$0d,$0e
 5418   516D   09 02 04                .byte $09,$02,$04
 5419   5170   09 07 09                .byte $09,$07,$09
 5420   5173   09 0C 0E                .byte $09,$0c,$0e
 5421   5176   0D 03 05                .byte $0d,$03,$05
 5422   5179   0D 08 08                .byte $0d,$08,$08
 5423   517C   0D 0B 0D                .byte $0d,$0b,$0d
 5424   517F   11 03 03                .byte $11,$03,$03
 5425   5182   11 05 05                .byte $11,$05,$05
 5426   5185   11 07 09                .byte $11,$07,$09
 5427   5188   11 0B 0B                .byte $11,$0b,$0b
 5428   518B   11 0D 0D                .byte $11,$0d,$0d
 5429                           
 5430   518E   02 02 07                .byte $02,$02,$07 ; Ladders
 5431   5191   03 0A 0F                .byte $03,$0a,$0f
 5432   5194   08 06 0B                .byte $08,$06,$0b
 5433   5197   08 0E 13                .byte $08,$0e,$13
 5434   519A   0D 0A 0F                .byte $0d,$0a,$0f
 5435   519D   0E 02 07                .byte $0e,$02,$07
 5436                           
 5437   51A0   04 05 0C 05 05          .byte $04,$05,$0c,$05,$05,$09 ; Eggs
        51A5   09 
 5438   51A6   0B 09 07 0D 09          .byte $0b,$09,$07,$0d,$09,$0d
        51AB   0D 
 5439   51AC   04 11 06 11 0A          .byte $04,$11,$06,$11,$0a,$11
        51B1   11 
 5440   51B2   0C 11 03 14 0D          .byte $0c,$11,$03,$14,$0d,$14
        51B7   14 
 5441                           
 5442   51B8   01 02 03 02             .byte $01,$02,$03,$02 ; Seeds
 5443   51BC   04 02 05 02 07          .byte $04,$02,$05,$02,$07,$02
        51C1   02 
 5444   51C2   08 02 09 02 0A          .byte $08,$02,$09,$02,$0a,$02
        51C7   02 
 5445   51C8   0B 02 0C 02 0D          .byte $0b,$02,$0c,$02,$0d,$02
        51CD   02 
 5446   51CE   0F 02                   .byte $0f,$02
 5447                           
 5448   51D0   08 11 08 09 0E          .byte $08,$11,$08,$09,$0e,$01 ; Birds
        51D5   01 
 5449   51D6   03 0D 0D 0D             .byte $03,$0d,$0d,$0d
 5450                           
 5451                           
 5452   51DA   55 42 28 34 29          .byte $55,$42,$28,$34,$29,$3a,$20,$45
        51DF   3A 20 45 
 5453                           
 5454                           ;------------------------------------------------
 5455                           ; Clear screen from $8000-$97ff
 5456                           ;------------------------------------------------
 5457                           
 5458   51E2                    clear4:
 5459   51E2   A9 80                    lda #$80    ; Clear screen
 5460   51E4                    clearscr:
 5461   51E4   85 91                    sta $91
 5462   51E6   A9 00                    lda #0
 5463   51E8   85 90                    sta $90
 5464   51EA                    clear:
 5465   51EA   A0 00                    ldy #0
 5466   51EC                    cls:
 5467   51EC   91 90                    sta ($90),y
 5468   51EE   C8                       iny
 5469   51EF   D0 FB                    bne cls
 5470   51F1   E6 91                    inc $91
 5471   51F3   A6 91                    ldx $91
 5472   51F5   E0 98                    cpx #$98
 5473   51F7   D0 F1                    bne clear
 5474   51F9   A9 F0                    lda #clearmode
 5475   51FB   8D 00 B0                 sta $b000
 5476   51FE   60                       rts
 5477                           
 5478                           ;------------------------------------------------
 5479                           ; Scankey A
 5480                           ; - A = scancode same as $FE71
 5481                           ; - Exit -> carry set   = key pressed
 5482                           ;           carry clear = key not pressed
 5483                           ;------------------------------------------------
 5484                           
 5485   51FF                    scankey:
 5486   51FF   C9 80                    cmp #$80 ; Scan CTRL
 5487   5201   D0 0A                    bne sk10
 5488   5203   AD 01 B0                 lda $b001
 5489   5206   29 40                    and #$40
 5490   5208   D0 59                    bne sk4
 5491   520A   4C 61 52                 jmp sk13
 5492   520D                    sk10:
 5493   520D   C9 81                    cmp #$81 ; Scan REPT
 5494   520F   D0 0A                    bne sk11
 5495   5211   AD 02 B0                 lda $b002
 5496   5214   29 40                    and #$40
 5497   5216   D0 4B                    bne sk4
 5498   5218   4C 61 52                 jmp sk13
 5499                           
 5500   521B                    sk11:
 5501   521B   C9 82                    cmp #$82 ; Scan SHIFT
 5502   521D   D0 0A                    bne sk12
 5503   521F   AD 01 B0                 lda $b001
 5504   5222   29 80                    and #$80
 5505   5224   D0 3D                    bne sk4
 5506   5226   4C 61 52                 jmp sk13
 5507                           
 5508   5229                    sk12:
 5509   5229   A2 00                    ldx #0
 5510   522B                    sk1:
 5511   522B   C9 0A                    cmp #10
 5512   522D   90 07                    bcc sk5
 5513   522F   E8                       inx
 5514   5230   38                       sec
 5515   5231   E9 0A                    sbc #10
 5516   5233   4C 2B 52                 jmp sk1
 5517   5236                    sk5:
 5518   5236   49 FF                    eor #$ff
 5519   5238   18                       clc
 5520   5239   69 0A                    adc #10
 5521   523B   8D 65 52                 sta keyrow
 5522                           
 5523   523E   A9 01                    lda #1
 5524   5240   8D 66 52                 sta keycol
 5525                           
 5526   5243   AD 00 B0                 lda $b000
 5527   5246   29 F0                    and #$f0
 5528   5248   0D 65 52                 ora keyrow
 5529   524B   8D 00 B0                 sta $b000
 5530   524E                    sk3:
 5531   524E   E0 00                    cpx #0     ; Set keycol mask
 5532   5250   F0 07                    beq sk2
 5533   5252   CA                       dex     
 5534   5253   0E 66 52                 asl keycol
 5535   5256   4C 4E 52                 jmp sk3
 5536   5259                    sk2:
 5537   5259   AD 01 B0                 lda $b001  ; Read keycol
 5538   525C   2D 66 52                 and keycol
 5539   525F   D0 02                    bne sk4
 5540   5261                    sk13:
 5541   5261   38                       sec
 5542   5262   60                       rts
 5543   5263                    sk4:
 5544   5263   18                       clc
 5545   5264   60                       rts
 5546                           
 5547   5265   00               keyrow:  .db 0
 5548   5266   00               keycol:  .db 0
 5549                           
 5550                           
 5551   5267                                    include font.inc
 5552                           ;Font file for ASCII chars 32-128
 5553                           
 5554   5267                    font:
 5555                           ;special chars
 5556   5267   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        526C   00 00 00 00 00 
        5271   00 00 00 00 00 
        5276   00 
 5557   5277   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        527C   00 00 00 00 00 
        5281   00 00 00 00 00 
        5286   00 
 5558   5287   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        528C   00 00 00 00 00 
        5291   00 00 00 00 00 
        5296   00 
 5559   5297   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        529C   00 00 00 00 00 
        52A1   00 00 00 00 00 
        52A6   00 
 5560   52A7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52AC   00 00 00 00 00 
        52B1   00 00 00 00 00 
        52B6   00 
 5561   52B7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52BC   00 00 00 00 00 
        52C1   00 00 00 00 00 
        52C6   00 
 5562   52C7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52CC   00 00 00 00 00 
        52D1   00 00 00 00 00 
        52D6   00 
 5563   52D7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52DC   00 00 00 00 00 
        52E1   00 00 00 00 00 
        52E6   00 
 5564   52E7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52EC   00 00 00 00 00 
        52F1   00 00 00 00 00 
        52F6   00 
 5565   52F7   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        52FC   00 00 00 00 00 
        5301   00 00 00 00 00 
        5306   00 
 5566   5307   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        530C   00 00 00 00 00 
        5311   00 00 00 00 00 
        5316   00 
 5567   5317   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        531C   00 00 00 00 00 
        5321   00 00 00 00 00 
        5326   00 
 5568   5327   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        532C   00 00 00 00 00 
        5331   00 00 00 00 00 
        5336   00 
 5569   5337   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        533C   00 00 00 00 00 
        5341   00 00 00 00 00 
        5346   00 
 5570   5347   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        534C   00 00 00 00 00 
        5351   00 00 00 00 00 
        5356   00 
 5571   5357   00 00 00 00 00   .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        535C   00 00 00 00 00 
        5361   00 00 00 00 00 
        5366   00 
 5572                           
 5573                           ;ascii chars
 5574   5367   00 00 00 00 00   .db $00,$00,$00,$00,$00,$00,$00,$00 ; space 
        536C   00 00 00 
 5575   536F   0C 0C 0C 0C 00   .db $0c,$0c,$0c,$0c,$00,$00,$0c,$00 ; !
        5374   00 0C 00 
 5576   5377   CC CC 00 00 00   .db $cC,$cC,$00,$00,$00,$00,$00,$00 ; "
        537C   00 00 00 
 5577   537F   00 CC FC CC CC   .db $00,$cC,$Fc,$cC,$cc,$fC,$cC,$00 ; #
        5384   FC CC 00 
 5578   5387   30 30 3C C0 30   .db $30,$30,$3c,$c0,$30,$0C,$f0,$30 ; $
        538C   0C F0 30 
 5579   538F   CC CC 0C 30 30   .db $cc,$cc,$0c,$30,$30,$c0,$cc,$cc ; %
        5394   C0 CC CC 
 5580   5397   30 CC CC 30 CF   .db $30,$cc,$cc,$30,$cf,$cc,$33,$00 ; &
        539C   CC 33 00 
 5581   539F   30 C0 00 00 00   .db $30,$c0,$00,$00,$00,$00,$00,$00 ; '
        53A4   00 00 00 
 5582   53A7   0C 30 30 30 30   .db $0c,$30,$30,$30,$30,$30,$0c,$00 ; (
        53AC   30 0C 00 
 5583   53AF   30 0C 0C 0C 0C   .db $30,$0c,$0c,$0c,$0c,$0c,$30,$00 ; )
        53B4   0C 30 00 
 5584   53B7   00 CC 30 FC 30   .db $00,$cc,$30,$fc,$30,$cc,$00,$00 ; *
        53BC   CC 00 00 
 5585   53BF   00 30 30 FC 30   .db $00,$30,$30,$FC,$30,$30,$00,$00 ; +
        53C4   30 00 00 
 5586   53C7   00 00 00 00 00   .db $00,$00,$00,$00,$00,$30,$30,$c0 ; ,
        53CC   30 30 C0 
 5587   53CF   00 00 00 FC 00   .db $00,$00,$00,$FC,$00,$00,$00,$00 ; -
        53D4   00 00 00 
 5588   53D7   00 00 00 00 00   .db $00,$00,$00,$00,$00,$00,$30,$00 ; .
        53DC   00 30 00 
 5589   53DF   0C 0C 0C 30 30   .db $0c,$0C,$0c,$30,$30,$C0,$c0,$c0 ; /
        53E4   C0 C0 C0 
 5590                           
 5591   53E7                    livenum:
 5592   53E7   30 CC CC CC CC   .db $30,$cc,$cc,$cc,$cc,$cc,$30,$00 ; 0
        53EC   CC 30 00 
 5593   53EF   30 F0 30 30 30   .db $30,$f0,$30,$30,$30,$30,$30,$00 ; 1
        53F4   30 30 00 
 5594   53F7   30 CC 0C 0C 30   .db $30,$cc,$0c,$0c,$30,$c0,$Fc,$00 ; 2
        53FC   C0 FC 00 
 5595   53FF   30 CC 0C 30 0C   .db $30,$cc,$0c,$30,$0c,$cc,$30,$00 ; 3
        5404   CC 30 00 
 5596   5407   0C 3C CC CC CC   .db $0c,$3c,$cc,$cc,$cc,$Fc,$0c,$00 ; 4
        540C   FC 0C 00 
 5597   540F   FC C0 C0 F0 0C   .db $fc,$c0,$c0,$f0,$0c,$cc,$30,$00 ; 5
        5414   CC 30 00 
 5598   5417   0C 30 C0 F0 CC   .db $0c,$30,$c0,$f0,$cc,$cc,$30,$00 ; 6
        541C   CC 30 00 
 5599   541F   FC 0C 0C 30 C0   .db $fc,$0c,$0c,$30,$C0,$c0,$c0,$00 ; 7
        5424   C0 C0 00 
 5600   5427   30 CC CC 30 CC   .db $30,$cc,$cc,$30,$cc,$cc,$30,$00 ; 8
        542C   CC 30 00 
 5601   542F   30 CC CC 3C 0C   .db $30,$cc,$cc,$3c,$0c,$30,$c0,$00 ; 9
        5434   30 C0 00 
 5602   5437   00 30 30 00 30   .db $00,$30,$30,$00,$30,$30,$00,$00 ; :
        543C   30 00 00 
 5603   543F   00 30 30 00 30   .db $00,$30,$30,$00,$30,$30,$c0,$00 ; ;
        5444   30 C0 00 
 5604   5447   00 0C 30 C0 30   .db $00,$0c,$30,$c0,$30,$0c,$00,$00 ; <
        544C   0C 00 00 
 5605   544F   00 00 FC 00 00   .db $00,$00,$FC,$00,$00,$FC,$00,$00 ; =
        5454   FC 00 00 
 5606   5457   00 C0 30 0C 30   .db $00,$c0,$30,$0c,$30,$c0,$00,$00 ; >
        545C   C0 00 00 
 5607   545F   30 CC 0C 30 30   .db $30,$CC,$0C,$30,$30,$00,$30,$00 ; ?
        5464   00 30 00 
 5608   5467   00 00 3C CC CC   .db $00,$00,$3c,$cc,$cc,$C0,$3c,$00 ; @
        546C   C0 3C 00 
 5609   546F   30 CC CC FC CC   .db $30,$cc,$cc,$fc,$cc,$cc,$cc,$00 ; A
        5474   CC CC 00 
 5610   5477   F0 CC CC F0 CC   .db $f0,$cc,$cc,$f0,$cc,$cc,$f0,$00 ; B
        547C   CC F0 00 
 5611   547F   30 CC C0 C0 C0   .db $30,$cc,$c0,$c0,$c0,$cc,$30,$00 ; C
        5484   CC 30 00 
 5612   5487   F0 CC CC CC CC   .db $f0,$cc,$cc,$cc,$cc,$cc,$f0,$00 ; D
        548C   CC F0 00 
 5613   548F   FC C0 C0 FC C0   .db $fc,$c0,$c0,$fc,$c0,$c0,$Fc,$00 ; E
        5494   C0 FC 00 
 5614   5497   FC C0 C0 F0 C0   .db $fc,$c0,$c0,$f0,$c0,$c0,$c0,$00 ; F
        549C   C0 C0 00 
 5615   549F   30 CC C0 C0 CC   .db $30,$cc,$c0,$c0,$cc,$cc,$3c,$00 ; G
        54A4   CC 3C 00 
 5616   54A7   CC CC CC FC CC   .db $cc,$cc,$cc,$fc,$cc,$cc,$cc,$00 ; H
        54AC   CC CC 00 
 5617   54AF   30 30 30 30 30   .db $30,$30,$30,$30,$30,$30,$30,$00 ; I
        54B4   30 30 00 
 5618   54B7   0C 0C 0C 0C 0C   .db $0c,$0C,$0C,$0C,$0C,$cC,$30,$00 ; J
        54BC   CC 30 00 
 5619   54BF   CC CC CC F0 CC   .db $cc,$cc,$cc,$f0,$cc,$cc,$cc,$00 ; K
        54C4   CC CC 00 
 5620   54C7   C0 C0 C0 C0 C0   .db $c0,$c0,$c0,$c0,$c0,$c0,$fc,$00 ; L
        54CC   C0 FC 00 
 5621   54CF   CC CC FC CC CC   .db $cc,$cc,$fc,$cc,$cc,$cc,$cc,$00 ; M
        54D4   CC CC 00 
 5622   54D7   F0 CC CC CC CC   .db $f0,$cc,$cc,$cc,$cc,$cc,$cc,$00 ; N
        54DC   CC CC 00 
 5623   54DF   30 CC CC CC CC   .db $30,$cc,$cc,$cc,$cc,$cc,$30,$00 ; O
        54E4   CC 30 00 
 5624   54E7   F0 CC CC F0 C0   .db $f0,$cc,$cc,$f0,$c0,$c0,$c0,$00 ; P
        54EC   C0 C0 00 
 5625   54EF   30 CC CC CC FC   .db $30,$cc,$cc,$cc,$fc,$cc,$3c,$00 ; Q
        54F4   CC 3C 00 
 5626   54F7   F0 CC CC F0 CC   .db $f0,$cc,$cc,$f0,$cc,$cc,$cc,$00 ; R
        54FC   CC CC 00 
 5627   54FF   30 CC C0 30 0C   .db $30,$cc,$c0,$30,$0c,$cc,$30,$00 ; S
        5504   CC 30 00 
 5628   5507   FC 30 30 30 30   .db $fc,$30,$30,$30,$30,$30,$30,$00 ; T
        550C   30 30 00 
 5629   550F   CC CC CC CC CC   .db $cc,$cc,$cc,$cc,$cc,$cc,$3c,$00 ; U
        5514   CC 3C 00 
 5630   5517   CC CC CC CC CC   .db $cc,$cc,$cc,$cc,$cc,$cc,$30,$00 ; V
        551C   CC 30 00 
 5631   551F   CC CC CC CC FC   .db $cc,$cc,$cc,$cc,$fc,$cc,$cc,$00 ; W
        5524   CC CC 00 
 5632   5527   CC CC CC 30 CC   .db $cc,$cc,$cc,$30,$cc,$cc,$cc,$00 ; X
        552C   CC CC 00 
 5633   552F   CC CC CC FC 30   .db $cc,$cc,$cc,$fc,$30,$30,$30,$00 ; Y
        5534   30 30 00 
 5634   5537   FC 0C 0C 30 C0   .db $fc,$0c,$0c,$30,$c0,$c0,$fc,$00 ; Z
        553C   C0 FC 00 
 5635   553F   F0 C0 C0 C0 C0   .db $f0,$c0,$c0,$c0,$c0,$c0,$f0,$00 ; [
        5544   C0 F0 00 
 5636   5547   C0 C0 C0 30 30   .db $C0,$c0,$c0,$30,$30,$0c,$0c,$0c ; \
        554C   0C 0C 0C 
 5637   554F   3C 0C 0C 0C 0C   .db $3c,$0c,$0c,$0c,$0c,$0c,$3c,$00 ; ]
        5554   0C 3C 00 
 5638   5557   30 CC 00 00 00   .db $30,$cc,$00,$00,$00,$00,$00,$00 ; ^
        555C   00 00 00 
 5639   555F   00 00 00 00 00   .db $00,$00,$00,$00,$00,$00,$00,$fc ; _
        5564   00 00 FC 
 5640   5567   30 C0 00 00 00   .db $30,$c0,$00,$00,$00,$00,$00,$00 ; `
        556C   00 00 00 
 5641                           
 5642   556F   00 00 3C CC CC   .db $00,$00,$3C,$CC,$CC,$CC,$3C,$00 ; a
        5574   CC 3C 00 
 5643   5577   C0 C0 F0 CC CC   .db $C0,$C0,$f0,$cc,$cc,$cc,$f0,$00 ; b
        557C   CC F0 00 
 5644   557F   00 00 3C C0 C0   .db $00,$00,$3c,$c0,$c0,$c0,$3c,$00 ; c
        5584   C0 3C 00 
 5645   5587   0C 0C 3C CC CC   .db $0c,$0c,$3c,$cc,$cc,$cc,$3c,$00 ; d
        558C   CC 3C 00 
 5646   558F   00 00 30 CC FC   .db $00,$00,$30,$cc,$fc,$c0,$3c,$00 ; e
        5594   C0 3C 00 
 5647   5597   3C 30 FC 30 30   .db $3C,$30,$fc,$30,$30,$30,$30,$00 ; f
        559C   30 30 00 
 5648   559F   00 00 3C CC CC   .db $00,$00,$3c,$cc,$cc,$3c,$cc,$30 ; g
        55A4   3C CC 30 
 5649   55A7   C0 C0 FC CC CC   .db $c0,$c0,$fc,$cc,$cc,$cc,$cc,$00 ; h
        55AC   CC CC 00 
 5650   55AF   30 00 F0 30 30   .db $30,$00,$f0,$30,$30,$30,$fC,$00 ; i
        55B4   30 FC 00 
 5651   55B7   30 00 F0 30 30   .db $30,$00,$f0,$30,$30,$30,$30,$c0 ; j
        55BC   30 30 C0 
 5652   55BF   C0 C0 CC F0 F0   .db $c0,$c0,$cc,$f0,$f0,$cc,$cc,$00 ; k
        55C4   CC CC 00 
 5653   55C7   F0 30 30 30 30   .db $f0,$30,$30,$30,$30,$30,$fC,$00 ; l
        55CC   30 FC 00 
 5654   55CF   00 00 CC FC CC   .db $00,$00,$cc,$fc,$cc,$cc,$cc,$00 ; m
        55D4   CC CC 00 
 5655   55D7   00 00 FC CC CC   .db $00,$00,$fc,$cc,$cc,$cc,$cc,$00 ; n
        55DC   CC CC 00 
 5656   55DF   00 00 30 CC CC   .db $00,$00,$30,$cc,$cc,$cc,$30,$00 ; o
        55E4   CC 30 00 
 5657   55E7   00 00 F0 CC CC   .db $00,$00,$f0,$cc,$cc,$cc,$f0,$c0 ; p
        55EC   CC F0 C0 
 5658   55EF   00 00 3C CC CC   .db $00,$00,$3c,$cc,$cc,$cc,$3c,$0c ; q
        55F4   CC 3C 0C 
 5659   55F7   00 00 FC CC C0   .db $00,$00,$fc,$cc,$c0,$c0,$c0,$00 ; r
        55FC   C0 C0 00 
 5660   55FF   00 00 3C C0 30   .db $00,$00,$3c,$c0,$30,$0c,$f0,$00 ; s
        5604   0C F0 00 
 5661   5607   30 30 FC 30 30   .db $30,$30,$fc,$30,$30,$30,$3C,$00 ; t
        560C   30 3C 00 
 5662   560F   00 00 CC CC CC   .db $00,$00,$cc,$cc,$cc,$cc,$fc,$00 ; u
        5614   CC FC 00 
 5663   5617   00 00 CC CC CC   .db $00,$00,$cc,$cc,$cc,$cc,$30,$00 ; v
        561C   CC 30 00 
 5664   561F   00 00 CC CC CC   .db $00,$00,$cc,$cc,$cc,$fc,$cc,$00 ; w
        5624   FC CC 00 
 5665   5627   00 00 CC CC 30   .db $00,$00,$cc,$cc,$30,$cc,$cc,$00 ; x
        562C   CC CC 00 
 5666   562F   00 00 CC CC FC   .db $00,$00,$cc,$cc,$fc,$30,$30,$00 ; y
        5634   30 30 00 
 5667   5637   00 00 FC 0C 30   .db $00,$00,$fc,$0c,$30,$c0,$fc,$00 ; z
        563C   C0 FC 00 
 5668                           
 5669   563F   0C 30 30 C0 30   .db $0C,$30,$30,$c0,$30,$30,$0C,$00 ; {
        5644   30 0C 00 
 5670   5647   0C 0C 0C 0C 0C   .db $0c,$0c,$0c,$0c,$0c,$0c,$0c,$0c ; |
        564C   0C 0C 0C 
 5671   564F   C0 30 30 0C 30   .db $c0,$30,$30,$0C,$30,$30,$c0,$00 ; }
        5654   30 C0 00 
 5672   5657   00 F0 00 00 00   .db $00,$f0,$00,$00,$00,$00,$00,$00 ; ~
        565C   00 00 00 
 5673   565F   FF FF FF FF FF   .db $ff,$ff,$ff,$ff,$ff,$ff,$ff,$00 ; 
        5664   FF FF 00 
 5674                           
 5675                           ;======================================================================
 5676                           ;FONT ROUTINES:
 5677                           ;======================================================================
 5678                           ;PUTSTRING
 5679                           ; - x,y,string,0
 5680                           ; - x,y,string,0
 5681                           ; - $ff
 5682                           ;
 5683                           ;PUTCHAR x,y,a
 5684                           ;======================================================================
 5685          0090             XPOS     equ $90
 5686          0091             YPOS     equ $91
 5687          0092             COLOR    equ $92
 5688          0098             COLORTMP equ $98
 5689                           
 5690   5667                    PUTSTRING:
 5691   5667   86 E8                stx $e8
 5692   5669   84 E9                sty $e9
 5693                           
 5694                           
 5695   566B   A0 00                ldy #0
 5696   566D                    P_S_0:
 5697   566D   B1 E8                lda ($e8),y    ; Check end of printing
 5698   566F   C9 FF                cmp #$ff
 5699   5671   F0 21                beq P_S_4
 5700                           
 5701   5673                    P_S_1:
 5702   5673   85 90                sta XPOS       ; Save x,y,attribute
 5703   5675   20 9C 56             jsr setcolor
 5704   5678   20 95 56             jsr PTR_INC
 5705   567B   B1 E8                lda ($e8),y
 5706   567D   85 91                sta YPOS
 5707                           
 5708   567F                    P_S_2:
 5709   567F   20 95 56             jsr PTR_INC    ; Print character until 0
 5710   5682   B1 E8                lda ($e8),y
 5711   5684   F0 08                beq P_S_5
 5712   5686   20 B6 56             jsr PRINTCHAR
 5713   5689   E6 90                inc XPOS
 5714   568B   4C 7F 56             jmp P_S_2
 5715   568E                    P_S_5:
 5716   568E   20 95 56             jsr PTR_INC
 5717   5691   4C 6D 56             jmp P_S_0
 5718                           
 5719   5694                    P_S_4:
 5720   5694   60                   rts            ; Return to program
 5721                           
 5722                           PTR_INC:           ; Increment textpointer
 5723   5695   E6 E8                inc $e8
 5724   5697   D0 02                bne PTR_1
 5725   5699   E6 E9                inc $e9
 5726   569B                    PTR_1:
 5727   569B   60                   rts
 5728                           
 5729   569C                    setcolor:
 5730   569C   85 98                sta COLORTMP
 5731   569E   A5 90                lda XPOS
 5732   56A0   29 1F                and #31
 5733   56A2   85 90                sta XPOS
 5734                           
 5735   56A4   A2 04                ldx #4
 5736   56A6                    nshift:
 5737   56A6   A5 98                lda COLORTMP
 5738   56A8   0A                   asl a
 5739   56A9   26 92                rol COLOR
 5740   56AB   0A                   asl a
 5741   56AC   26 92                rol COLOR
 5742   56AE   CA                   dex
 5743   56AF   D0 F5                bne nshift
 5744   56B1   60                   rts
 5745                           
 5746                           ;----------------------------------------------------------------------
 5747          0093             SCR      equ $93
 5748          0095             CHR      equ $95
 5749          0097             TMP_Y    equ $97
 5750          0098             TMP_A    equ $98
 5751                           
 5752   56B2                    PUTCHAR:
 5753   56B2   86 90                stx XPOS
 5754   56B4   84 91                sty YPOS
 5755                           
 5756   56B6                    PRINTCHAR:
 5757   56B6   85 98                sta TMP_A
 5758   56B8   85 95                sta CHR        ; Calculate characterspritedata address
 5759   56BA   A9 00                lda #0         ; = A * 8 + charsprite data address
 5760   56BC   85 96                sta CHR+1
 5761   56BE   06 95                asl CHR
 5762   56C0   26 96                rol CHR+1
 5763   56C2   06 95                asl CHR
 5764   56C4   26 96                rol CHR+1
 5765   56C6   06 95                asl CHR
 5766   56C8   26 96                rol CHR+1
 5767   56CA   A5 95                lda CHR
 5768   56CC   18                   clc
 5769   56CD   69 67                adc #<font
 5770   56CF   85 95                sta CHR
 5771   56D1   A5 96                lda CHR+1
 5772   56D3   69 52                adc #>font
 5773   56D5   85 96                sta CHR+1
 5774   56D7                        
 5775   56D7   A5 90                lda XPOS       ; Calculate screenaddress
 5776   56D9   85 93                sta SCR
 5777   56DB   A5 91                lda YPOS
 5778   56DD   18                   clc
 5779   56DE   69 80                adc #$80
 5780   56E0   85 94                sta SCR+1
 5781   56E2                     
 5782   56E2   84 97                sty TMP_Y
 5783   56E4   A2 00                ldx #0
 5784   56E6   A0 00                ldy #0         ; Put character on screen
 5785   56E8                    P_C_1:
 5786   56E8   B1 95                lda (CHR),y
 5787   56EA   25 92                and COLOR
 5788   56EC   91 93                sta (SCR),y
 5789   56EE   E6 95                inc CHR
 5790   56F0   D0 02                bne P_C_2
 5791   56F2   E6 96                inc CHR+1
 5792   56F4                    P_C_2:
 5793   56F4   A5 93                lda SCR
 5794   56F6   18                   clc
 5795   56F7   69 20                adc #$20
 5796   56F9   85 93                sta SCR
 5797   56FB   A5 94                lda SCR+1
 5798   56FD   69 00                adc #0
 5799   56FF   85 94                sta SCR+1
 5800   5701   E8                   inx
 5801   5702   E0 08                cpx #8
 5802   5704   D0 E2                bne P_C_1
 5803                           
 5804   5706   A4 97                ldy TMP_Y
 5805   5708   A5 98                lda TMP_A
 5806   570A   60                   rts
 5807   570B                     
 5808   570B                    INV_CURSOR:
 5809   570B   86 93                stx SCR
 5810   570D   98                   tya
 5811   570E   18                   clc
 5812   570F   69 80                adc #$80
 5813   5711   85 94                sta SCR+1
 5814   5713                     
 5815   5713   A0 00                ldy #0         ; Put character on screen
 5816   5715                    IC1:
 5817   5715   B1 93                lda (SCR),y
 5818   5717   49 FF                eor #$ff
 5819   5719   91 93                sta (SCR),y
 5820   571B   98                   tya
 5821   571C   18                   clc
 5822   571D   69 20                adc #$20
 5823   571F   A8                   tay
 5824   5720   D0 F3                bne IC1
 5825   5722   60                   rts    
 5826                           
 5827   5723                                    include sound.inc
 5828                           ;---------------------------------------------------
 5829                           ; SOUND A,X,Y, produce tone
 5830                           ;
 5831                           ; A = Duration (1-255) * 0,005 usec
 5832                           ; X = Pitch (9-19)
 5833                           ; Y = Octave (0-7)
 5834                           ;---------------------------------------------------
 5835                           
 5836          0099             dur_val   equ $99
 5837          009A             pit_val   equ $9a
 5838          009B             oct_val   equ $9b
 5839                           
 5840   5723                    sound:
 5841   5723   85 99                    sta dur_val
 5842   5725   86 9A                    stx pit_val
 5843   5727   84 9B                    sty oct_val
 5844                           
 5845   5729   A9 13                    lda #>5000     ; 2
 5846   572B   8D 09 B8                 sta $b809      ; 4
 5847   572E   A9 88                    lda #<5000     ; 2
 5848   5730   8D 08 B8                 sta $b808      ; 4
 5849                           loop3:                       ;  
 5850   5733   20 4E 57                   jsr toggle         ;22 , t3=t2+25
 5851                           
 5852   5736   A4 9B                      ldy oct_val        ; 3 , t2=Y*(t1+5)+3
 5853   5738   A6 9A            loop2:     ldx pit_val       ; 3 , t1=X*34+3
 5854   573A   AD 09 B8         loop1:        lda $b809      ; 4
 5855   573D   C9 FF                          cmp #$ff       ; 2
 5856   573F   F0 16                          beq chk_timer  ; 2
 5857   5741   20 68 57                       jsr wait       ; 6+15
 5858   5744   CA               loop5:        dex            ; 2
 5859   5745   D0 F3                        bne loop1        ; 3
 5860   5747   88                           dey              ; 2
 5861   5748   D0 EE                      bne loop2          ; 3
 5862   574A   4C 33 57                 jmp loop3            ; 3
 5863                           
 5864   574D                    end_sound:
 5865   574D   60                       rts             
 5866                           
 5867                           ;--------------------------------------
 5868                           ; Toggle speaker
 5869                           ;--------------------------------------
 5870   574E                    toggle:
 5871   574E   AD 02 B0                 lda $b002      ; 4
 5872   5751   49 04                    eor #4         ; 2
 5873   5753   8D 02 B0                 sta $b002      ; 4
 5874   5756   60                       rts            ; 6
 5875                           
 5876                           ;--------------------------------------
 5877                           ; Check if time is over (21 usec)
 5878                           ;--------------------------------------
 5879   5757                    chk_timer:
 5880   5757   C6 99                    dec dur_val    ; 3
 5881   5759   F0 F2                    beq end_sound  ; 3
 5882   575B                    settimer:
 5883   575B   A9 13                    lda #>5000     ; 2
 5884   575D   8D 09 B8                 sta $b809      ; 4
 5885   5760   A9 88                    lda #<5000     ; 2
 5886   5762   8D 08 B8                 sta $b808      ; 4
 5887   5765   4C 44 57                 jmp loop5      ; 3
 5888                           
 5889                           ;--------------------------------------
 5890                           ; Wait routine 21-6=15 usec
 5891                           ;--------------------------------------
 5892   5768                    wait:
 5893   5768   45 00                    eor $0         ; 3
 5894   576A   EA                       nop            ; 2
 5895   576B   EA                       nop            ; 2
 5896   576C   EA                       nop            ; 2
 5897   576D   60                       rts            ; 6
 5898                           
 5899   576E                                    include joystick.inc
 5900                           ;==========================================================
 5901                           ; Version 1
 5902                           ;
 5903                           ; - Changed to work with AtoMMC v2.9
 5904                           ;==========================================================
 5905                           
 5906                           ;----------------------------------------------------------
 5907                           ; Set PORTB direction
 5908                           ;----------------------------------------------------------
 5909                           
 5910   576E                    joyinit:
 5911   576E   A9 FF                    lda #$ff   ; Write value to latch, bits 0-7 input
 5912   5770   8D 01 B4                 sta $b401
 5913                           
 5914   5773   20 8E 57                 jsr interwritedelay
 5915                           
 5916   5776   A9 A1                    lda #$a1   ; Write direction in latch to PORTB
 5917   5778   8D 00 B4                 sta $b400
 5918                           
 5919                           ;       jsr interwritedelay
 5920                           ;
 5921                           ;       lda #$ff   ; Write value to latch, bits 0-7 high 
 5922                           ;       sta $b401
 5923                           ;
 5924                           ;       jsr interwritedelay
 5925                           ;
 5926                           ;       lda #$a3   ; Write value in latch to PORTB
 5927                           ;       sta $b400
 5928                           
 5929   577B   60                       rts
 5930                           
 5931                           ;----------------------------------------------------------
 5932                           ; Get PORTB value
 5933                           ;----------------------------------------------------------
 5934                           
 5935   577C                    joyget:
 5936   577C   A9 A2                    lda #$a2   ; Read value PORTB in latch
 5937   577E   8D 00 B4                 sta $b400
 5938                           
 5939   5781   20 8E 57                 jsr interwritedelay
 5940                           
 5941   5784   AD 01 B4                 lda $b401
 5942   5787   F0 04                    beq no_joystick
 5943   5789   49 FF                    eor #$ff
 5944   578B   29 1F                    and #$1f
 5945   578D                    no_joystick:
 5946   578D   60                       rts
 5947                           
 5948                           ;----------------------------------------------------------
 5949                           ; Short delay
 5950                           ;
 5951                           ; Enough to intersperse 2 writes to the FATPIC.
 5952                           ;----------------------------------------------------------
 5953                           
 5954   578E                    interwritedelay:
 5955   578E   A9 04                    lda  #4
 5956   5790   38                       sec
 5957   5791                    loop:
 5958   5791   E9 01                    sbc  #1
 5959   5793   D0 FC                    bne  loop
 5960   5795   60                       rts
 5961                           
 5962   5796   00               tmp_byte:   .db 0
 5963                           
 5964   5797                    eind_asm



           Lines Assembled :  5964             Assembly Errors :  0



